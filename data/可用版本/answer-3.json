{
    "3": [
        {
            "file": "manage.py",
            "path": "manage.py",
            "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"
        },
        {
            "file": "urls.py",
            "path": "example_app/urls.py",
            "code": "from django.urls import path\nfrom .views import HomePageView, AboutUsPageView, password_generator_view\n\nurlpatterns = [\n    path('', HomePageView().get, name='home'),\n    path('generator/',password_generator_view, name='generator'),\n    path('about-us/', AboutUsPageView().get, name='about_us'),\n]\n"
        },
        {
            "file": "views.py",
            "path": "example_app/views.py",
            "code": "import random\nimport string\n\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\n\n\ndef generate_password(length=12, include_uppercase=True, include_lowercase=True, include_numbers=True,\n                      include_symbols=True):\n    characters = ''\n    if include_uppercase:\n        characters += string.ascii_uppercase\n    if include_lowercase:\n        characters += string.ascii_lowercase\n    if include_numbers:\n        characters += string.digits\n    if include_symbols:\n        characters += string.punctuation\n\n    # Ensure there's at least some character set to choose from\n    if not characters:\n        return \"Please select at least one character type.\"\n\n    password = ''.join(random.choice(characters) for _ in range(length))\n    return password\n\n\ndef password_generator_view(request):\n    password = None\n    if request.method == 'POST':\n        length = int(request.POST.get('length', 12))\n        include_uppercase = 'uppercase' in request.POST\n        include_lowercase = 'lowercase' in request.POST\n        include_numbers = 'numbers' in request.POST\n        include_symbols = 'symbols' in request.POST\n\n        password = generate_password(\n            length=length,\n            include_uppercase=include_uppercase,\n            include_lowercase=include_lowercase,\n            include_numbers=include_numbers,\n            include_symbols=include_symbols\n        )\n\n    return render(request, 'generator.html', {'password': password})\n\n\nclass HomePageView:\n    \"\"\"Renders the Home page of the password generator.\"\"\"\n\n    def get(self, request):\n        context = {}\n        return render(request, 'home.html', context)\n\n\nclass AboutUsPageView:\n    \"\"\"Renders the About Us page of the password generator.\"\"\"\n\n    def get(self, request):\n        context = {}\n        return render(request, 'about_us.html', context)\n"
        },
        {
            "file": "__init__.py",
            "path": "example_app/__init__.py",
            "code": ""
        },
        {
            "file": "styles.css",
            "path": "example_app/static/css/styles.css",
            "code": "body { font-family: Arial, sans-serif; }\nh1 { color: #333; }\n"
        },
        {
            "file": "scripts.js",
            "path": "example_app/static/js/scripts.js",
            "code": "function copyToClipboard() {\n    // Placeholder function for copying password to clipboard\n    var password = document.getElementById('password').innerText;\n    navigator.clipboard.writeText(password).then(function () {\n        // Show a message on the page instead of using alert\n        var message = document.getElementById('copy-message');\n        message.innerText = 'Password copied to clipboard!';\n        message.style.display = 'block';  // Make the message visible\n        // Hide the message after 3 seconds\n        setTimeout(function () {\n            message.style.display = 'none';\n        }, 3000);\n    }, function (err) {\n        // In case of error (e.g., clipboard API not supported)\n        console.error('Could not copy text: ', err);\n    });\n}\n\n"
        },
        {
            "file": "about_us.html",
            "path": "example_app/templates/about_us.html",
            "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>About Us</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/styles.css\">\n</head>\n<body>\n    <h1>About Us</h1>\n    <p id=\"description\">This project is generated by Large Language Model.</p>\n    <a href=\"/\"><button id=\"home\">Home</button></a>\n</body>\n</html>\n"
        },
        {
            "file": "generator.html",
            "path": "example_app/templates/generator.html",
            "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Password Generator</title>\n    <script src=\"/static/js/scripts.js\"></script>\n</head>\n<body>\n<div id=\"generator\">\n    <h1>Password Generator</h1>\n\n    <form method=\"POST\">\n        {% csrf_token %}\n        <label for=\"length\">Password Length:</label>\n        <input type=\"number\" id=\"length\" name=\"length\" min=\"8\" max=\"128\">\n        <br>\n\n        <label for=\"uppercase\">Include Uppercase:</label>\n        <input type=\"checkbox\" id=\"uppercase\" name=\"uppercase\">\n        <br>\n\n        <label for=\"lowercase\">Include Lowercase:</label>\n        <input type=\"checkbox\" id=\"lowercase\" name=\"lowercase\">\n        <br>\n\n        <label for=\"numbers\">Include Numbers:</label>\n        <input type=\"checkbox\" id=\"numbers\" name=\"numbers\">\n        <br>\n\n        <label for=\"symbols\">Include Symbols:</label>\n        <input type=\"checkbox\" id=\"symbols\" name=\"symbols\">\n        <br>\n\n        <button type=\"submit\" id=\"generate_button\">Generate Password</button>\n    </form>\n\n    {% if password %}\n    <h2>Your Generated Password:</h2>\n    <p><strong id=\"password\">{{ password }}</strong></p>\n    <button onclick=\"copyToClipboard()\" id=\"copy_button\">Copy to Clipboard</button>\n    {% endif %}\n</div>\n</body>\n</html>\n"
        },
        {
            "file": "home.html",
            "path": "example_app/templates/home.html",
            "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/styles.css\">\n</head>\n<body>\n<h1>Generate Password</h1>\n<div id=\"welcome_message\">In today's digital world, safeguarding your personal and professional data is more important\n    than ever. At SecurePass, we make it easy to create strong, secure passwords that protect you from online threats.\n    Simply generate a password with one click and ensure your accounts are fortified with complex combinations of\n    letters, numbers, and special characters. Ready to enhance your security? Let\u2019s get started!\n</div>\n<a href=\"generator/\" id=\"navigate_generate\"><button>Generate Password</button></a>\n<a href=\"about-us/\" id=\"about_us_link\">About Us</a>\n</body>\n</html>\n"
        },
        {
            "file": "settings.py",
            "path": "password_generator/settings.py",
            "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'password_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'password_generator.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"
        },
        {
            "file": "urls.py",
            "path": "password_generator/urls.py",
            "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"
        },
        {
            "file": "wsgi.py",
            "path": "password_generator/wsgi.py",
            "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_wsgi_application()\n"
        },
        {
            "file": "__init__.py",
            "path": "password_generator/__init__.py",
            "code": ""
        }
    ]
}