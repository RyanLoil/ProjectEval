[
    {
        "project_id": "1",
        "project_type": "website",
        "nl_prompt": "Create a web page for a BMI calculator.",
        "framework_technical_stack": [
            {
                "language": "Python",
                "technical_stack": "Django"
            }
        ],
        "nl_checklist": [
            {
                "page": "HomePage",
                "required": true,
                "function": [
                    {
                        "function": "View Introduction",
                        "description": "Display an introduction to the BMI calculator and how it works",
                        "required": true
                    },
                    {
                        "function": "Navigation to Calculator",
                        "description": "Provide a button or link to navigate to the BMI calculator page",
                        "required": true
                    }
                ]
            },
            {
                "page": "BMICalculatorPage",
                "required": true,
                "function": [
                    {
                        "function": "Input Height",
                        "description": "Allow users to enter their height in either cm or inches",
                        "required": true
                    },
                    {
                        "function": "Input Weight",
                        "description": "Allow users to enter their weight in either kg or lbs",
                        "required": true
                    },
                    {
                        "function": "Submit Data",
                        "description": "Enable users to submit their height and weight to calculate BMI",
                        "required": true
                    },
                    {
                        "function": "Display BMI Result",
                        "description": "Show the calculated BMI value based on the entered height and weight",
                        "required": true
                    },
                    {
                        "function": "Display BMI Category",
                        "description": "Show which category (e.g., underweight, normal, overweight, obese) the calculated BMI falls into",
                        "required": true
                    },
                    {
                        "function": "Reset Form",
                        "description": "Provide an option to reset the form to enter a new height and weight",
                        "required": true
                    },
                    {
                        "function": "Provide Interpretation",
                        "description": "Give a brief explanation of what the BMI value means",
                        "required": false
                    },
                    {
                        "function": "Link to Health Advice",
                        "description": "Provide links or information on how to maintain a healthy BMI",
                        "required": false
                    }
                ]
            }
        ],
        "testcode": [
            {
                "page": "HomePage",
                "function": [
                    {
                        "function": "View Introduction",
                        "test": "def test_view_introduction(driver, test_url, introduction_element_id):\n    driver.get(test_url)\n    intro_element = driver.find_element(By.ID, introduction_element_id)\n    assert intro_element.is_displayed()",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "introduction_element_id",
                                "description": "the id of the introduction element"
                            }
                        ]
                    },
                    {
                        "function": "Navigation to Calculator",
                        "test": "def test_navigation_to_calculator(driver, test_url, navigate_button_id, calculator_element_id):\n    driver.get(test_url)\n    navigate_button = driver.find_element(By.ID, navigate_button_id)\n    navigate_button.click()\n    calc_element = driver.find_element(By.ID, calculator_element_id)\n    assert calc_element.is_displayed()",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "navigate_button_id",
                                "description": "the button id for navigation to calculator"
                            },
                            {
                                "name": "calculator_element_id",
                                "description": "one element that is contained in the calculator page to confirm the page loading successfully"
                            }
                        ]
                    }
                ]
            },
            {
                "page": "BMICalculatorPage",
                "function": [
                    {
                        "function": "Input Height",
                        "test": "def test_input_height(driver, test_url, height_input_box_id):\r\n    driver.get(test_url)\r\n    height_input = driver.find_element(By.ID, height_input_box_id)\r\n    height_input.send_keys('1.7')\r\n    assert height_input.get_attribute('value') == '1.7'",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "height_input_box_id",
                                "description": "the input box component id of the height"
                            }
                        ]
                    },
                    {
                        "function": "Input Weight",
                        "test": "def test_input_weight(driver, test_url, weight_input_box_id):\r\n    driver.get(test_url)\r\n    weight_input = driver.find_element(By.ID, weight_input_box_id)\r\n    weight_input.send_keys('70')\r\n    assert weight_input.get_attribute('value') == '70'",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "weight_input_box_id",
                                "description": "the input box component id of the weight"
                            }
                        ]
                    },
                    {
                        "function": "Submit Data",
                        "test": "def test_submit_data(driver, test_url, height_input_box_id, weight_input_box_id, submit_button_id):\r\n    driver.get(test_url)\r\n    height_input = driver.find_element(By.ID, height_input_box_id)\r\n    weight_input = driver.find_element(By.ID, weight_input_box_id)\r\n    submit_button = driver.find_element(By.ID, submit_button_id)\r\n    height_input.send_keys('170')\r\n    weight_input.send_keys('70')\r\n    submit_button.click()\r\n",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "height_input_box_id",
                                "description": "the input box component id of the height"
                            },
                            {
                                "name": "weight_input_box_id",
                                "description": "the input box component id of the weight"
                            },
                            {
                                "name": "submit_button_id",
                                "description": "the id of the submit button"
                            }
                        ]
                    },
                    {
                        "function": "Display BMI Result",
                        "test": "def test_display_bmi_result(driver, test_url, bmi_result_id):\r\n    # This test assumes that inputs have been entered and submitted\r\n    result_element = driver.find_element(By.ID, bmi_result_id)\r\n    assert result_element.is_displayed()\r\n    assert result_element.text != ''",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "bmi_result_id",
                                "description": "the id of the BMI result element"
                            }
                        ]
                    },
                    {
                        "function": "Display BMI Category",
                        "test": "def test_display_bmi_category(driver, test_url, bmi_category_id):\r\n    # This test assumes that inputs have been entered and submitted\r\n    category_element = driver.find_element(By.ID, bmi_category_id)\r\n    assert category_element.is_displayed()\r\n    flag = False\r\n    for category in ['Underweight', 'Normal weight', 'Overweight', 'Obese']:\r\n        if category in category_element.text:\r\n            flag = True\r\n    if not flag:\r\n        raise Exception\r\n",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "bmi_category_id",
                                "description": "the id of the BMI category element"
                            }
                        ]
                    },
                    {
                        "function": "Provide Interpretation",
                        "test": "def test_provide_interpretation(driver, test_url, interpretation_id):\r\n    # This test assumes that inputs have been entered and submitted\r\n    interpretation_element = driver.find_element(By.ID, interpretation_id)\r\n    assert interpretation_element.is_displayed()",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "interpretation_id",
                                "description": "the id of the interpretation element"
                            }
                        ]
                    },
                    {
                        "function": "Reset Form",
                        "test": "def test_reset_form(driver, test_url, height_input_box_id, weight_input_box_id, reset_button_id):\r\n    driver.get(test_url)\r\n    reset_button = driver.find_element(By.ID, reset_button_id)\r\n    height_input = driver.find_element(By.ID, height_input_box_id)\r\n    weight_input = driver.find_element(By.ID, weight_input_box_id)\r\n    height_input.send_keys('170')\r\n    weight_input.send_keys('70')\r\n    reset_button.click()\r\n    time.sleep(1)\r\n    height_input = driver.find_element(By.ID, height_input_box_id)\r\n    weight_input = driver.find_element(By.ID, weight_input_box_id)\r\n    assert height_input.get_attribute('value') == ''\r\n    assert weight_input.get_attribute('value') == ''",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "height_input_box_id",
                                "description": "the input box component id of the height"
                            },
                            {
                                "name": "weight_input_box_id",
                                "description": "the input box component id of the weight"
                            },
                            {
                                "name": "reset_button_id",
                                "description": "the id of the reset button"
                            }
                        ]
                    },
                    {
                        "function": "Link to Health Advice",
                        "test": "def test_link_to_health_advice(driver, test_url, health_advice_id):\r\n    driver.get(test_url)\r\n    health_advice_element = driver.find_element(By.ID, health_advice_id)\r\n    assert health_advice_element.is_displayed()",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "health_advice_id",
                                "description": "the id of the health advice element"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "project_id": "2",
        "project_type": "website",
        "nl_prompt": "Create a website for a currency convertor. The currency rate data can be simulation.",
        "framework_technical_stack": [
            {
                "language": "Python",
                "technical_stack": "Django"
            }
        ],
        "nl_checklist": [
            {
                "page": "Home Page",
                "required": true,
                "function": [
                    {
                        "function": "Select Base Currency",
                        "description": "Allows the user to select the currency they want to convert from.",
                        "required": true
                    },
                    {
                        "function": "Select Target Currency",
                        "description": "Allows the user to select the currency they want to convert to.",
                        "required": true
                    },
                    {
                        "function": "Enter Amount",
                        "description": "Allows the user to input the amount of base currency to convert.",
                        "required": true
                    },
                    {
                        "function": "Convert Button",
                        "description": "Initiates the currency conversion process.",
                        "required": true
                    },
                    {
                        "function": "Display Conversion Result",
                        "description": "Shows the converted amount in the target currency.",
                        "required": true
                    },
                    {
                        "function": "Exchange Rate Info",
                        "description": "Displays the current exchange rate used for the conversion.",
                        "required": false
                    }
                ]
            },
            {
                "page": "Currency Details Page",
                "required": false,
                "function": [
                    {
                        "function": "Currency Information",
                        "description": "Displays detailed information about selected currencies.",
                        "required": false
                    },
                    {
                        "function": "Historical Exchange Rates",
                        "description": "Shows historical exchange rates for selected currencies.",
                        "required": false
                    }
                ]
            },
            {
                "page": "Settings Page",
                "required": false,
                "function": [
                    {
                        "function": "Set Default Currencies",
                        "description": "Allows users to set their frequently used base and target currencies.",
                        "required": false
                    },
                    {
                        "function": "Set Update Frequency",
                        "description": "Allows users to set how often exchange rates are updated.",
                        "required": false
                    }
                ]
            }
        ],
        "testcode": [
            {
                "page": "Home Page",
                "function": [
                    {
                        "function": "Select Source Currency",
                        "test": "def test_select__currency(driver, test_url, source_currency_dropdown_id, source_currency_value):\n\tdriver.get(test_url)\n\tsource_currency_dropdown = driver.find_element(By.ID,source_currency_dropdown_id)\n\tsource_currency_option = source_currency_dropdown.find_element(By.XPATH,f\"//option[@value='{source_currency_value}']\")\n\tsource_currency_option.click()",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "source_currency_dropdown_id",
                                "description": "the dropdown component id of the source currency"
                            },
                            {
                                "name": "source_currency_value",
                                "description": "the value of the source currency option to select"
                            }
                        ]
                    },
                    {
                        "function": "Select Target Currency",
                        "test": "def test_select_target_currency(driver, test_url, target_currency_dropdown_id, target_currency_value):\n\tdriver.get(test_url)\n\ttarget_currency_dropdown = driver.find_element(By.ID, target_currency_dropdown_id)\n\ttarget_currency_option = target_currency_dropdown.find_element(By.XPATH, f\"//option[@value='{target_currency_value}']\")\n\ttarget_currency_option.click()",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "target_currency_dropdown_id",
                                "description": "the dropdown component id of the target currency"
                            },
                            {
                                "name": "target_currency_value",
                                "description": "the value of the target currency option to select"
                            }
                        ]
                    },
                    {
                        "function": "Enter Amount",
                        "test": "def test_enter_amount(driver, test_url, amount_input_box_id, amount_value):\n\tdriver.get(test_url)\n\tamount_input_box = driver.find_element(By.ID,amount_input_box_id)\n\tamount_input_box.send_keys(amount_value)",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "amount_input_box_id",
                                "description": "the input box component id for the amount"
                            },
                            {
                                "name": "amount_value",
                                "description": "the amount of source currency to enter"
                            }
                        ]
                    },
                    {
                        "function": "Convert Button",
                        "test": "def test_convert_button(driver, convert_button_id):\n\tconvert_button = driver.find_element(By.ID,convert_button_id)\n\tconvert_button.click()",
                        "parameter": [
                            {
                                "name": "convert_button_id",
                                "description": "the convert button component id"
                            }
                        ]
                    },
                    {
                        "function": "Display Conversion Result",
                        "test": "def test_display_conversion_result(driver, test_url, result_box_id):\n\tresult_box = driver.find_element(By.ID,result_box_id)\n\tconversion_result = result_box.text\n\tassert conversion_result is not None",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "result_box_id",
                                "description": "the conversion result display box component id"
                            }
                        ]
                    },
                    {
                        "function": "Exchange Rate Info",
                        "test": "def test_exchange_rate_info(driver, test_url, exchange_rate_info_id):\n\texchange_rate_info = driver.find_element(By.ID,exchange_rate_info_id)\n\tassert exchange_rate_info.text is not None",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "exchange_rate_info_id",
                                "description": "the exchange rate information display component id"
                            }
                        ]
                    }
                ]
            },
            {
                "page": "Currency Details Page",
                "function": [
                    {
                        "function": "Currency Information",
                        "test": "def test_currency_information(driver, test_url, currency_info_id):\n\tdriver.get(test_url)\n\tcurrency_info = driver.find_element(By.ID,currency_info_id)\n\tassert currency_info.text is not None",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "currency_info_id",
                                "description": "the currency information display component id"
                            }
                        ]
                    },
                    {
                        "function": "Historical Exchange Rates",
                        "test": "def test_historical_exchange_rates(driver, test_url, historical_rates_id):\n\tdriver.get(test_url)\n\thistorical_rates = driver.find_element(By.ID,historical_rates_id)\n\tassert historical_rates.text is not None",
                        "parameter": [
                            {
                                "name": "test_url",
                                "description": "the url for test"
                            },
                            {
                                "name": "historical_rates_id",
                                "description": "the historical exchange rates display component id"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]