{
    "13": [
        {
            "file": "manage.py",
            "path": "manage.py",
            "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"
        },
        {
            "file": "forms.py",
            "path": "example_app/forms.py",
            "code": "from django import forms\nfrom .models import Customer, Product, PurchaseRecord, PreferredProduct\n\n\nclass CustomerForm(forms.ModelForm):\n    birthday = forms.DateField(\n        widget=forms.DateInput(attrs={'type': 'date',\"max\":\"2099-12-31\"}),\n        label='Birthday'\n    )\n\n    class Meta:\n        model = Customer\n        fields = ['name', 'birthday', 'age', 'sex', 'company', 'phone_number']\nclass ProductForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = '__all__'\n\nclass PurchaseRecordForm(forms.ModelForm):\n    class Meta:\n        model = PurchaseRecord\n        exclude = ['datetime']\n\nclass PreferredProductForm(forms.ModelForm):\n    class Meta:\n        model = PreferredProduct\n        fields = ['customer', 'product']"
        },
        {
            "file": "models.py",
            "path": "example_app/models.py",
            "code": "from django.db import models\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=255)\n    birthday = models.DateField()\n    age = models.IntegerField()\n    sex = models.CharField(max_length=10, choices=[('Male', 'Male'), ('Female', 'Female')])\n    company = models.CharField(max_length=255)\n    phone_number = models.CharField(max_length=20)\n\n    def __str__(self):\n        return self.name\n\nclass Product(models.Model):\n    name = models.CharField(max_length=255)\n    category = models.CharField(max_length=255)\n    recommended_price = models.DecimalField(max_digits=10, decimal_places=2)\n\n    def __str__(self):\n        return self.name\n\nclass PurchaseRecord(models.Model):\n    datetime = models.DateTimeField(auto_now_add=True)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n\n    def __str__(self):\n        return f\"{self.customer.name} - {self.product.name}\"\n\nclass PreferredProduct(models.Model):\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return f\"{self.customer.name} prefers {self.product.name}\"\n"
        },
        {
            "file": "urls.py",
            "path": "example_app/urls.py",
            "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    # Customer URLs\n    path('', views.customer_list, name='customer_list'),\n    path('customers/add/', views.add_customer, name='add_customer'),\n    path('customers/edit/<int:pk>/', views.edit_customer, name='edit_customer'),\n    path('customers/delete/<int:pk>/', views.delete_customer, name='delete_customer'),\n\n    # Product URLs\n    path('products/', views.product_list, name='product_list'),\n    path('products/add/', views.add_product, name='add_product'),\n    path('products/edit/<int:pk>/', views.edit_product, name='edit_product'),\n    path('products/delete/<int:pk>/', views.delete_product, name='delete_product'),\n\n    path('purchases/', views.purchase_record_list, name='purchase_record_list'),\n    path('purchases/add/', views.add_purchase_record, name='add_purchase_record'),\n    path('purchases/edit/<int:pk>/', views.edit_purchase_record, name='edit_purchase_record'),\n    path('purchases/delete/<int:pk>/', views.delete_purchase_record, name='delete_purchase_record'),\n\n    path('preferred_products_list/', views.preferred_products_list, name='preferred_products_list'),\n    path('preferred-products/add/', views.add_preferred_product, name='add_preferred_product'),\n    path('preferred-products/edit/<int:pk>/', views.edit_preferred_product, name='edit_preferred_product'),\n    path('preferred-products/delete/<int:pk>/', views.delete_preferred_product, name='delete_preferred_product'),\n\n    # Sales Analysis\n    path('sales-analysis/', views.generate_sales_report, name='generate_sales_report'),\n\n]\n"
        },
        {
            "file": "views.py",
            "path": "example_app/views.py",
            "code": "from django.shortcuts import render, get_object_or_404, redirect\nfrom .models import Customer, Product, PurchaseRecord, PreferredProduct\nfrom .forms import CustomerForm, ProductForm, PurchaseRecordForm, PreferredProductForm\nfrom django.db.models import Sum\n# Customer Views\ndef customer_list(request):\n    customers = Customer.objects.all()\n    return render(request, 'customers/customer_list.html', {'customers': customers})\n\n# def add_customer(request):\n#     if request.method == 'POST':\n#         form = CustomerForm(request.POST)\n#         if form.is_valid():\n#             form.save()\n#             return redirect('customer_list')\n#     else:\n#         form = CustomerForm()\n#     return render(request, 'customers/add_customer.html', {'form': form})\n\ndef add_customer(request):\n    if request.method == 'POST':\n        form = CustomerForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('customer_list')\n    else:\n        form = CustomerForm()\n    return render(request, 'customers/add_customer.html', {'form': form})\n\n\ndef edit_customer(request, pk):\n    customer = get_object_or_404(Customer, pk=pk)\n    if request.method == 'POST':\n        form = CustomerForm(request.POST, instance=customer)\n        if form.is_valid():\n            form.save()\n            return redirect('customer_list')\n    else:\n        form = CustomerForm(instance=customer)\n    return render(request, 'customers/edit_customer.html', {'form': form})\n\ndef delete_customer(request, pk):\n    customer = get_object_or_404(Customer, pk=pk)\n    customer.delete()\n    return redirect('customer_list')\n\n\n\n# Product Views\ndef product_list(request):\n    products = Product.objects.all()\n    return render(request, 'products/product_list.html', {'products': products})\n\ndef add_product(request):\n    if request.method == 'POST':\n        form = ProductForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('product_list')\n    else:\n        form = ProductForm()\n    return render(request, 'products/add_product.html', {'form': form})\n\ndef edit_product(request, pk):\n    product = get_object_or_404(Product, pk=pk)\n    if request.method == 'POST':\n        form = ProductForm(request.POST, instance=product)\n        if form.is_valid():\n            form.save()\n            return redirect('product_list')\n    else:\n        form = ProductForm(instance=product)\n    return render(request, 'products/edit_product.html', {'form': form, 'product': product})\ndef delete_product(request, pk):\n    product = get_object_or_404(Product, pk=pk)\n    product.delete()\n    return redirect('product_list')\n\n# Similar views for PurchaseRecords and PreferredProducts\ndef add_purchase_record(request):\n    if request.method == 'POST':\n        form = PurchaseRecordForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('purchase_record_list')\n    else:\n        form = PurchaseRecordForm()\n    return render(request, 'add_purchase_record.html', {'form': form})\n\n\ndef purchase_record_list(request):\n    records = PurchaseRecord.objects.all()\n    return render(request, 'purchase_record_list.html', {'records': records})\n\ndef edit_purchase_record(request, pk):\n    record = get_object_or_404(PurchaseRecord, pk=pk)\n    if request.method == 'POST':\n        form = PurchaseRecordForm(request.POST, instance=record)\n        if form.is_valid():\n            form.save()\n            return redirect('purchase_record_list')\n    else:\n        form = PurchaseRecordForm(instance=record)\n    return render(request, 'edit_purchase_record.html', {'form': form, 'record': record})\n\ndef delete_purchase_record(request, pk):\n    record = get_object_or_404(PurchaseRecord, pk=pk)\n    record.delete()\n    return redirect('purchase_record_list')\n\ndef add_preferred_product(request):\n    if request.method == 'POST':\n        form = PreferredProductForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('preferred_products_list')\n    else:\n        form = PreferredProductForm()\n    return render(request, 'add_preferred_product.html', {'form': form})\n\ndef preferred_products_list(request):\n    products = PreferredProduct.objects.all()\n    return render(request, 'preferred_products_list.html', {'products': products})\n\ndef edit_preferred_product(request, pk):\n    product = get_object_or_404(PreferredProduct, pk=pk)\n    if request.method == 'POST':\n        form = PreferredProductForm(request.POST, instance=product)\n        if form.is_valid():\n            form.save()\n            return redirect('preferred_products_list')\n    else:\n        form = PreferredProductForm(instance=product)\n    return render(request, 'edit_preferred_product.html', {'form': form, 'record': product})\n\ndef delete_preferred_product(request, pk):\n    product = get_object_or_404(PreferredProduct, pk=pk)\n    product.delete()\n    return redirect('preferred_products_list')\n\ndef generate_sales_report(request):\n    report = PurchaseRecord.objects.values('product__name').annotate(\n        total_sales=Sum('amount'),\n        total_quantity=Sum('quantity')\n    ).order_by('-total_sales')\n    return render(request, 'report.html', {'report': report})"
        },
        {
            "file": "__init__.py",
            "path": "example_app/__init__.py",
            "code": ""
        },
        {
            "file": "__init__.py",
            "path": "example_app/migrations/__init__.py",
            "code": ""
        },
        {
            "file": "add_preferred_product.html",
            "path": "example_app/templates/add_preferred_product.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Add Preferred Product</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save\">Save</button>\n</form>\n<a href=\"{% url 'preferred_products_list' %}\">Back to Preferred Products</a>\n{% endblock %}\n"
        },
        {
            "file": "add_purchase_record.html",
            "path": "example_app/templates/add_purchase_record.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Add Purchase Record</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save\">Save</button>\n</form>\n<a href=\"{% url 'purchase_record_list' %}\">Back to Purchase Records</a>\n{% endblock %}\n"
        },
        {
            "file": "base.html",
            "path": "example_app/templates/base.html",
            "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>CRM System</title>\n</head>\n<body>\n    <h1>Welcome to the CRM System</h1>\n    <nav>\n        <a href=\"{% url 'customer_list' %}\" id=\"customer\">Customers</a>\n        <a href=\"{% url 'product_list' %}\" id=\"products\">Products</a>\n        <a href=\"{% url 'purchase_record_list' %}\" id=\"purchase\">Purchase Records</a>\n        <a href=\"{% url 'preferred_products_list' %}\" id=\"preferred\">Preferred_Products</a>\n        <a href=\"{% url 'generate_sales_report' %}\" id=\"analysis\">Sales Analysis</a>\n    </nav>\n    {% block content %}\n    {% endblock %}\n</body>\n</html>\n"
        },
        {
            "file": "edit_preferred_product.html",
            "path": "example_app/templates/edit_preferred_product.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Edit Preferred Product</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"update\">Update</button>\n</form>\n<a href=\"{% url 'preferred_products_list' %}\">Back to Preferred Products</a>\n{% endblock %}\n"
        },
        {
            "file": "edit_purchase_record.html",
            "path": "example_app/templates/edit_purchase_record.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Edit Purchase Record</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save_changes\">Save Changes</button>\n</form>\n<a href=\"{% url 'customer_list' %}\">Back to Purchase Records</a>\n{% endblock %}\n"
        },
        {
            "file": "preferred_products_list.html",
            "path": "example_app/templates/preferred_products_list.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Preferred Products</h2>\n<table>\n    <tr>\n        <th>Customer</th>\n        <th>Product</th>\n        <th>Actions</th>\n    </tr>\n    {% for preferred in products %}\n    <tr>\n        <td>{{ preferred.customer.name }}</td>\n        <td>{{ preferred.product.name }}</td>\n        <td>\n            <a href=\"{% url 'edit_preferred_product' preferred.pk %}\" class=\"edit_button\">Edit</a>\n            <a href=\"{% url 'delete_preferred_product' preferred.pk %}\" class=\"delete_button\">Delete</a>\n        </td>\n    </tr>\n    {% endfor %}\n</table>\n<a href=\"{% url 'add_preferred_product' %}\" id=\"add_preferred_product\">Add Preferred Product</a>\n{% endblock %}\n"
        },
        {
            "file": "purchase_record_list.html",
            "path": "example_app/templates/purchase_record_list.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Purchase Records</h2>\n<table>\n    <tr>\n        <th>Customer</th>\n        <th>Product</th>\n        <th>Date/Time</th>\n        <th>Quantity</th>\n        <th>Amount</th>\n        <th>Actions</th>\n    </tr>\n    {% for record in records %}\n    <tr>\n        <td>{{ record.customer.name }}</td>\n        <td>{{ record.product.name }}</td>\n        <td>{{ record.datetime }}</td>\n        <td>{{ record.quantity }}</td>\n        <td>{{ record.amount }}</td>\n        <td>\n            <a href=\"{% url 'edit_purchase_record' record.pk %}\" class=\"edit_button\">Edit</a>\n            <a href=\"{% url 'delete_purchase_record' record.pk %}\" class=\"delete_button\">Delete</a>\n        </td>\n    </tr>\n    {% endfor %}\n</table>\n<a href=\"{% url 'add_purchase_record' %}\" id=\"add_purchase_record\">Add Purchase Record</a>\n{% endblock %}\n"
        },
        {
            "file": "report.html",
            "path": "example_app/templates/report.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Sales Report</h2>\n<table>\n    <tr>\n        <th>Product</th>\n        <th>Total Quantity</th>\n        <th>Total Sales</th>\n    </tr>\n    {% for row in report %}\n    <tr>\n        <td>{{ row.product__name }}</td>\n        <td>{{ row.total_quantity }}</td>\n        <td>${{ row.total_sales }}</td>\n    </tr>\n    {% endfor %}\n</table>\n{% endblock %}\n"
        },
        {
            "file": "add_customer.html",
            "path": "example_app/templates/customers/add_customer.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Add Customer</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save_customer\">Save Customer</button>\n</form>\n<a href=\"{% url 'customer_list' %}\" id=\"back_to_customer_list\">Back to Customer List</a>\n{% endblock %}\n"
        },
        {
            "file": "customer_detail.html",
            "path": "example_app/templates/customers/customer_detail.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Customer Details</h2>\n<p><strong>Name:</strong> {{ customer.name }}</p>\n<p><strong>Birthday:</strong> {{ customer.birthday }}</p>\n<p><strong>Age:</strong> {{ customer.age }}</p>\n<p><strong>Sex:</strong> {{ customer.sex }}</p>\n<p><strong>Company:</strong> {{ customer.company }}</p>\n<p><strong>Phone Number:</strong> {{ customer.phone_number }}</p>\n<h3>Preferred Products:</h3>\n<ul>\n    {% for preferred_product in customer.preferredproduct_set.all %}\n    <li>{{ preferred_product.product.name }}</li>\n    {% empty %}\n    <li>No preferred products.</li>\n    {% endfor %}\n</ul>\n<a href=\"{% url 'edit_customer' customer.pk %}\" id=\"edit\">Edit Customer</a>\n<a href=\"{% url 'customer_list' %}\" id=\"back\">Back to Customer List</a>\n{% endblock %}\n"
        },
        {
            "file": "customer_list.html",
            "path": "example_app/templates/customers/customer_list.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Customer List</h2>\n<table>\n    <tr>\n        <th>Name</th>\n        <th>Phone Number</th>\n        <th>Actions</th>\n    </tr>\n    {% for customer in customers %}\n    <tr>\n        <td>{{ customer.name }}</td>\n        <td>{{ customer.phone_number }}</td>\n        <td>\n            <a href=\"{% url 'edit_customer' customer.pk %}\" class=\"edit_button\">Edit</a>\n            <a href=\"{% url 'delete_customer' customer.pk %}\" class=\"delete_button\">Delete</a>\n        </td>\n    </tr>\n    {% endfor %}\n</table>\n<a href=\"{% url 'add_customer' %}\" id=\"add_customer\">Add Customer</a>\n{% endblock %}\n"
        },
        {
            "file": "edit_customer.html",
            "path": "example_app/templates/customers/edit_customer.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Edit Customer</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save_changes\">Save Changes</button>\n</form>\n<a href=\"{% url 'customer_list' %}\">Back to Customer List</a>\n{% endblock %}\n"
        },
        {
            "file": "add_product.html",
            "path": "example_app/templates/products/add_product.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Add Product</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save_product\">Save Product</button>\n</form>\n<a href=\"{% url 'product_list' %}\" id=\"back\">Back to Product List</a>\n{% endblock %}\n"
        },
        {
            "file": "edit_product.html",
            "path": "example_app/templates/products/edit_product.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Edit Product</h2>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"save_changes\">Save Changes</button>\n</form>\n<a href=\"{% url 'product_list' %}\" id=\"back\">Back to Product List</a>\n{% endblock %}\n"
        },
        {
            "file": "product_detail.html",
            "path": "example_app/templates/products/product_detail.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Product Details</h2>\n<p><strong>Name:</strong> {{ product.name }}</p>\n<p><strong>Category:</strong> {{ product.category }}</p>\n<p><strong>Recommended Price:</strong> {{ product.recommended_price }}</p>\n<h3>Purchase Records:</h3>\n<ul>\n    {% for record in product.purchaserecord_set.all %}\n    <li>{{ record.datetime }} - {{ record.customer.name }} - Quantity: {{ record.quantity }} - Amount: {{ record.amount }}</li>\n    {% empty %}\n    <li>No purchase records for this product.</li>\n    {% endfor %}\n</ul>\n<a href=\"{% url 'edit_product' product.pk %}\" id=\"edit\">Edit Product</a>\n<a href=\"{% url 'product_list' %}\" id=\"back\">Back to Product List</a>\n{% endblock %}\n"
        },
        {
            "file": "product_list.html",
            "path": "example_app/templates/products/product_list.html",
            "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h2>Product List</h2>\n<table>\n    <tr>\n        <th>Name</th>\n        <th>Category</th>\n        <th>Recommended Price</th>\n        <th>Actions</th>\n    </tr>\n    {% for product in products %}\n    <tr>\n        <td>{{ product.name }}</td>\n        <td>{{ product.category }}</td>\n        <td>{{ product.recommended_price }}</td>\n        <td>\n            <a href=\"{% url 'edit_product' product.pk %}\" class=\"edit_button\">Edit</a>\n            <a href=\"{% url 'delete_product' product.pk %}\" class=\"delete_button\">Delete</a>\n        </td>\n    </tr>\n    {% endfor %}\n</table>\n<a href=\"{% url 'add_product' %}\" id=\"add_product\">Add Product</a>\n{% endblock %}\n"
        },
        {
            "file": "settings.py",
            "path": "example_project/settings.py",
            "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = '/static/'\n\n# LOGGING = {\n#     'version': 1,\n#     'disable_existing_loggers': False,\n#     'formatters': { #\u683c\u5f0f\u5316\u5668\n#         'standard': {\n#             'format': '[%(levelname)s][%(asctime)s][%(filename)s][%(funcName)s][%(lineno)d] > %(message)s'\n#             },\n#         'simple': {\n#             'format': '[%(levelname)s]> %(message)s'\n#             },\n#     },\n#     'filters': {\n#     'require_debug_true': {\n#         '()': 'django.utils.log.RequireDebugTrue',\n#         },\n#  },\n#     'handlers': {\n#         'default': {                                            # \u7528\u4e8e\u6587\u4ef6\u8f93\u51fa\n#             'level': 'DEBUG',                                    # \u8f93\u51fa\u65e5\u5fd7\u7b49\u7ea7\n#             'class': 'logging.handlers.RotatingFileHandler',    # \u65e5\u5fd7\u7c7b\u578b\n#             'filename': 'django.log',          # \u5177\u4f53\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u5b57\n#             'maxBytes': 1024 * 1024 * 2,                        # \u65e5\u5fd7\u5927\u5c0f\n#             'backupCount': 1,                                   # \u5907\u4efd\u6570\u91cf\n#             'formatter':'standard',                             # \u8f93\u51fa\u65e5\u5fd7\u683c\u5f0f\n#             'encoding': 'utf-8',                                # \u8f93\u51fa\u65e5\u5fd7\u7f16\u7801\n#         }\n#     },\n#     'loggers': {    #\u65e5\u5fd7\u5206\u914d\u5230\u54ea\u4e2ahandlers\u4e2d\n#         'django': {\n#             'handlers': ['default'],         # \u4e0a\u7ebf\u4e4b\u540e\u53ef\u4ee5\u628a'console'\u79fb\u9664\n#             'level':'DEBUG',\n#             'propagate': True,       # \u5411\u4e0d\u5411\u66f4\u9ad8\u7ea7\u522b\u7684logger\u4f20\u9012\n#         }\n#  }\n# }"
        },
        {
            "file": "urls.py",
            "path": "example_project/urls.py",
            "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"
        },
        {
            "file": "wsgi.py",
            "path": "example_project/wsgi.py",
            "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"
        },
        {
            "file": "__init__.py",
            "path": "example_project/__init__.py",
            "code": ""
        }
    ]
}