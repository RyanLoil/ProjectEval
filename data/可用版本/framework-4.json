{
    "4": [
        {
            "file": "manage.py",
            "path": "manage.py",
            "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_code_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"
        },
        {
            "file": "apps.py",
            "path": "qr_app/apps.py",
            "code": "from django.apps import AppConfig\n\n\nclass QrAppConfig(AppConfig):\n    \"\"\"\n    Configuration class for the QR app.\n    \"\"\"\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'qr_app'"
        },
        {
            "file": "urls.py",
            "path": "qr_app/urls.py",
            "code": "from .views import *\nfrom django.urls import path\n\nurlpatterns = [\n    path('', home, name='home'),\n    path('generate/', generate_qr_code, name='generate_qr_code'),\n    path('download/', download_qr_code, name='download_qr_code'),\n    path('about/', about, name='about'),\n]"
        },
        {
            "file": "views.py",
            "path": "qr_app/views.py",
            "code": "from django.http import HttpResponse\nfrom django.shortcuts import render\nfrom django.core.files.base import ContentFile\nfrom qrcode.console_scripts import error_correction\nimport qrcode\nimport io\nimport base64\n\n\ndef home(request):\n    \"\"\"\n    Render the home page.\n    \"\"\"\n    pass\n\ndef hex_to_rgb(value):\n    \"\"\"\n    Convert hex color to RGB tuple.\n    \"\"\"\n    pass\n\ndef generate_qr_code(request):\n    \"\"\"\n    Generate a QR code from provided data.\n    \"\"\"\n    pass\n\ndef download_qr_code(request):\n    \"\"\"\n    Allow users to download the generated QR code.\n    \"\"\"\n    pass\n\ndef about(request):\n    \"\"\"\n    Render the about page.\n    \"\"\"\n    pass"
        },
        {
            "file": "__init__.py",
            "path": "qr_app/__init__.py",
            "code": ""
        },
        {
            "file": "about.html",
            "path": "qr_app/templates/qr_app/about.html",
            "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About Us</title>\n</head>\n<body>\n<!--\n    Provide information about the QR Code Generator, including FAQ and policies.\n-->\n</body>\n</html>"
        },
        {
            "file": "generate.html",
            "path": "qr_app/templates/qr_app/generate.html",
            "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QR Code Generator</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n\n        label {\n            display: block;\n            margin: 10px 0 5px;\n        }\n\n        input, select {\n            width: 100%;\n            padding: 8px;\n            margin-bottom: 15px;\n        }\n\n        button {\n            padding: 10px;\n            background-color: #28a745;\n            color: white;\n            border: none;\n            cursor: pointer;\n        }\n\n        button:hover {\n            background-color: #218838;\n        }\n    </style>\n</head>\n<body>\n<!--\n    Interface for generating and customizing QR codes online.\n-->\n</body>\n</html>"
        },
        {
            "file": "home.html",
            "path": "qr_app/templates/qr_app/home.html",
            "code": "<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n<!--\n    Home page introducing the QR Code Generator and offering navigation.\n-->\n</body>\n</html>"
        },
        {
            "file": "settings.py",
            "path": "qr_code_generator/settings.py",
            "code": "import os\n\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\n\nALLOWED_HOSTS = []\n\n\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qr_app',\n]\n\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\n\nROOT_URLCONF = 'qr_code_generator.urls'\n\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n\nWSGI_APPLICATION = 'qr_code_generator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\nLANGUAGE_CODE = 'en-us'\n\n\nTIME_ZONE = 'UTC'\n\n\nUSE_I18N = True\n\n\nUSE_L10N = True\n\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\n\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"
        },
        {
            "file": "urls.py",
            "path": "qr_code_generator/urls.py",
            "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qr_app.urls')),\n]"
        },
        {
            "file": "wsgi.py",
            "path": "qr_code_generator/wsgi.py",
            "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_code_generator.settings')\n\napplication = get_wsgi_application()"
        },
        {
            "file": "__init__.py",
            "path": "qr_code_generator/__init__.py",
            "code": ""
        }
    ]
}