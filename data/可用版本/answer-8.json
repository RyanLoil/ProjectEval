{
    "8": [
        {
            "file": "manage.py",
            "path": "manage.py",
            "code": "\n#!/usr/bin/env python\nimport os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project_name.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? \"\n            \"Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "file": "forms.py",
            "path": "example_app/forms.py",
            "code": "from django import forms\nfrom .models import Event\n\nclass EventForm(forms.ModelForm):\n    class Meta:\n        model = Event\n        fields = ['title', 'description', 'datetime']\n\n    # Customizing the fields\n    datetime = forms.DateTimeField(\n        widget=forms.DateTimeInput(attrs={'type': 'datetime-local', 'max': '2099-12-31 23:59'}),\n    )\n"
        },
        {
            "file": "models.py",
            "path": "example_app/models.py",
            "code": "from django.db import models\nfrom django.utils import timezone\n\n\nclass Event(models.Model):\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    datetime = models.DateTimeField(default=timezone.now)\n    updated = models.DateTimeField(auto_now=True)\n    created = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return self.title\n"
        },
        {
            "file": "urls.py",
            "path": "example_app/urls.py",
            "code": "\nfrom django.urls import path\nfrom .views import HomePageView, AddEventView, EditEventView, DeleteEventView, ListEventsView, EventDetailsView, HelpView\n\nurlpatterns = [\n    path('', HomePageView.as_view(), name='home'),\n    path('calendar/add-event/', AddEventView.as_view(), name='add_event'),\n    path('calendar/edit-event/<int:event_id>/', EditEventView.as_view(), name='edit_event'),\n    path('calendar/delete-event/<int:event_id>/', DeleteEventView.as_view(), name='delete_event'),\n    path('calendar/view-events/', ListEventsView.as_view(), name='view_events'),\n    path('calendar/view-event-details/<int:event_id>/', EventDetailsView.as_view(), name='view_event_details'),\n    path('help/faq/', HelpView.faq, name='faq'),\n    path('help/user-guide/', HelpView.user_guide, name='user_guide'),\n]\n"
        },
        {
            "file": "views.py",
            "path": "example_app/views.py",
            "code": "import calendar\nfrom datetime import datetime\n\nfrom django.db.models import Q\nfrom django.shortcuts import render, redirect, get_object_or_404\nfrom django.views import View\nfrom django.http import HttpResponse\nfrom django.contrib import messages\n\nfrom .forms import EventForm\nfrom .models import Event\n\n\nclass HomePageView(View):\n    '''Handles rendering of the home page.'''\n\n    def get(self, request):\n        '''Displays the selected month\u2019s calendar with events.'''\n        # Get current year and month\n        today = datetime.now()\n        current_year = today.year\n        current_month = today.month\n\n        # Check if a month and year are passed as GET parameters\n        month = request.GET.get('month', current_month)\n        year = request.GET.get('year', current_year)\n\n        # Convert month and year to integers\n        month = int(month)\n        year = int(year)\n\n        # Create a calendar\n        month_calendar = calendar.monthcalendar(year, month)\n\n        # Prepare a dictionary to hold events by date\n        events_by_date = {}\n        events = Event.objects.filter(datetime__year=year, datetime__month=month)\n\n        # Organizing events by date\n        for event in events:\n            event_date = event.datetime.day\n            if event_date not in events_by_date:\n                events_by_date[event_date] = []\n            events_by_date[event_date].append(event)\n\n        # Create the calendar data structure\n        calendar_data = []\n        for week in month_calendar:\n            week_data = []\n            for day in week:\n                if day == 0:  # Empty day in the calendar\n                    week_data.append({'day': '', 'events': []})\n                else:\n                    # Prepare day data\n                    day_events = events_by_date.get(day, [])\n                    week_data.append({'day': day, 'events': day_events})\n            calendar_data.append(week_data)\n\n        # Prepare context\n        context = {\n            'calendar': calendar_data,\n            'current_year': year,\n            'current_month': month,\n            'today': today,\n            'months': list(calendar.month_name)[1:],  # Get month names for dropdown\n            'years': range(today.year - 5, today.year + 6)  # Allow selection of years\n        }\n        return render(request, 'home.html', context)\n\n\nclass AddEventView(View):\n    '''Handles calendar-related actions.'''\n\n    def get(self, request):\n        '''Displays an empty event form for adding a new event.'''\n        form = EventForm()\n        return render(request, 'add_event.html', {'form': form})\n\n    def post(self, request):\n        '''Processes form data for a new event.'''\n        form = EventForm(request.POST)\n        if form.is_valid():\n            form.save()\n            messages.info(request, 'Event added successfully.')\n            return redirect('home')\n        return render(request, 'add_event.html', {'form': form})\n\n\nclass EditEventView(View):\n    def get(self, request, event_id):\n        '''Allows users to modify existing events.'''\n        event = get_object_or_404(Event, id=event_id)\n        form = EventForm(instance=event)\n        return render(request, 'edit_event.html', {'form': form})\n\n    def post(self, request, event_id):\n        event = get_object_or_404(Event, id=event_id)\n        if request.method == 'POST':\n            form = EventForm(request.POST, instance=event)\n            if form.is_valid():\n                form.save()\n                return redirect('view_event_details', event_id=event.id)\n        else:\n            form = EventForm(instance=event)\n        return render(request, 'edit_event.html', {'form': form})\n\n\nclass DeleteEventView(View):\n    def get(self, request, event_id):\n        '''Allows users to remove events from their calendar.'''\n        event = get_object_or_404(Event, id=event_id)\n        event.delete()\n        messages.success(request, 'Event removed successfully.')\n        return redirect('view_events')\n\n\nclass ListEventsView(View):\n    def get(self, request):\n        query = request.GET.get('q', '')\n        if query:\n            events = Event.objects.filter(\n                Q(title__icontains=query) | Q(description__icontains=query)\n            ).order_by('-datetime')\n        else:\n            events = Event.objects.all().order_by('-datetime')\n\n        return render(request, 'view_events.html', {'events': events, 'query': query})\n\n\nclass EventDetailsView(View):\n    def get(self, request, event_id):\n        '''Displays detailed information about a selected event.'''\n        event = get_object_or_404(Event, id=event_id)\n        return render(request, 'view_event_details.html', {'event': event})\n\n\nclass HelpView:\n    '''Handles the help and support sections.'''\n\n    @staticmethod\n    def faq(request):\n        '''Displays frequently asked questions.'''\n        questions = [\n            {\n                'question': 'How do I add an event?',\n                'answer': 'To add an event, click on the \"Add Event\" link on the home page, fill out the form, and submit.'\n            },\n            {\n                'question': 'Can I edit an existing event?',\n                'answer': 'Yes, you can edit events by clicking on the \"Edit\" link next to the event in the event list.'\n            },\n            {\n                'question': 'How do I delete an event?',\n                'answer': 'To delete an event, go to the event details page and click the \"Delete\" button.'\n            },\n            {\n                'question': 'What should I do if I forget my password?',\n                'answer': 'If you forget your password, click on the \"Forgot Password?\" link on the login page to reset it.'\n            },\n            {\n                'question': 'Is there a mobile app available?',\n                'answer': 'Currently, we only offer a web application. However, it is mobile-friendly and can be accessed on any device.'\n            }\n        ]\n        return render(request, 'faq.html', {'questions': questions})\n\n    @staticmethod\n    def user_guide(request):\n        '''Offers a detailed guide on how to use the application.'''\n        guide = (\n            \"<h2>User Guide</h2>\"\n            \"<p>Welcome to the Calendar Application! Here are some helpful instructions to get you started:</p>\"\n            \"<h3>1. Adding Events</h3>\"\n            \"<p>To add an event, click the 'Add Event' link from the home page. Fill out the form with the event details and submit.</p>\"\n            \"<h3>2. Viewing Events</h3>\"\n            \"<p>You can view all your events on the home page. Click on an event to see more details.</p>\"\n            \"<h3>3. Editing Events</h3>\"\n            \"<p>To edit an event, click on the 'Edit' link next to the event you wish to modify. Update the details and save changes.</p>\"\n            \"<h3>4. Deleting Events</h3>\"\n            \"<p>To delete an event, navigate to the event details page and click the 'Delete' button.</p>\"\n            \"<h3>5. Frequently Asked Questions</h3>\"\n            \"<p>If you have any questions, refer to our FAQ section.</p>\"\n            \"<h3>6. Support</h3>\"\n            \"<p>If you need further assistance, please contact our support team at support@example.com.</p>\"\n        )\n        return render(request, 'user_guide.html', {'guide': guide})\n"
        },
        {
            "file": "0001_initial.py",
            "path": "example_app/migrations/0001_initial.py",
            "code": "# Generated by Django 5.1.1 on 2024-10-30 08:50\n\nimport django.utils.timezone\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Event',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),\n                ('description', models.TextField()),\n                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),\n                ('updated', models.DateTimeField(auto_now=True)),\n                ('created', models.DateTimeField(auto_now_add=True)),\n            ],\n        ),\n    ]\n"
        },
        {
            "file": "__init__.py",
            "path": "example_app/migrations/__init__.py",
            "code": ""
        },
        {
            "file": "add_event.html",
            "path": "example_app/templates/add_event.html",
            "code": "<html>\n<head><title>Add Event</title></head>\n<body>\n<h1>Add a New Event</h1>\n<form method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n<button type=\"submit\" id=\"submit\">Add Event</button>\n    <a href=\"{% url 'home' %}\" id=\"home\">Home</a>\n    <a href=\"{% url 'view_events' %}\" id=\"back_button\">Back</a>\n</form>\n</body>\n</html>"
        },
        {
            "file": "edit_event.html",
            "path": "example_app/templates/edit_event.html",
            "code": "<html>\n<head><title>Edit Event</title></head>\n<body>\n<h1>Edit Event</h1>\n<form method=\"post\">{% csrf_token %}\n{{ form.as_p }}\n<button type=\"submit\" id=\"submit\">Save Changes</button>\n    <a href=\"{% url 'view_events' %}\" id=\"back_button\">Back</a>\n</form>\n</body>\n</html>"
        },
        {
            "file": "faq.html",
            "path": "example_app/templates/faq.html",
            "code": "<html>\n<head><title>FAQ</title></head>\n<body>\n<h1>Frequently Asked Questions</h1>\n<ul id=\"faq\">\n    {% for question in questions %}\n    <li><b>{{ question.question }}</b>\n        <p>{{ question.answer }}</p></li>\n    {% endfor %}\n</ul>\n<a href=\"{% url 'home' %}\" id=\"back_button\">Back to Calendar</a>\n</body>\n</html>"
        },
        {
            "file": "home.html",
            "path": "example_app/templates/home.html",
            "code": "<html>\n<head>\n    <title>Home Page</title>\n    <style>\n        table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n\n        th, td {\n            border: 1px solid #ddd;\n            padding: 8px;\n            text-align: center;\n        }\n\n        th {\n            background-color: #f2f2f2;\n        }\n\n        .calendar {\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n<h1>Welcome to the Calendar Application!</h1>\n\n<!-- Navigation links -->\n<a href=\"{% url 'add_event' %}\" id=\"add_event\">Add Event</a> |\n<a href=\"{% url 'view_events' %}\" id=\"list_events\">View Events</a> |\n<a href=\"{% url 'faq' %}\" id=\"faq\">FAQ</a> |\n<a href=\"{% url 'user_guide' %}\" id=\"user_guide\">User Guide</a>\n{% if messages %}\n<ul>\n    {% for message in messages %}\n    <li>{{ message }}</li>\n    {% endfor %}\n</ul>\n{% endif %}\n<h2 id=\"today\">Today: {{ today.year }}-{{ today.month }}-{{ today.day }}</h2>\n<form method=\"get\" action=\"\">\n    <label for=\"year\">Select Year:</label>\n    <select name=\"year\" id=\"year\">\n        {% for year in years %}\n        <option value=\"{{ year }}\" {% if year == current_year %}selected{% endif %}>\n            {{ year }}\n        </option>\n        {% endfor %}\n    </select>\n    <label for=\"month\">Select Month:</label>\n    <select name=\"month\" id=\"month\">\n        {% for month in months %}\n        <option value=\"{{ forloop.counter }}\" {% if forloop.counter == current_month %}selected{% endif %}>\n            {{ month }}\n        </option>\n        {% endfor %}\n    </select>\n    <button type=\"submit\" id=\"switch_button\">View Calendar</button>\n</form>\n<!-- Basic Calendar Display -->\n<div class=\"calendar\" id=\"calendar\">\n    <h2>Monthly Calendar - {{ current_year }}-{{ current_month }}</h2>\n    <table>\n        <thead>\n        <tr>\n            <th>Sunday</th>\n            <th>Monday</th>\n            <th>Tuesday</th>\n            <th>Wednesday</th>\n            <th>Thursday</th>\n            <th>Friday</th>\n            <th>Saturday</th>\n        </tr>\n        </thead>\n        <tbody>\n        {% for week in calendar %}\n        <tr>\n            {% for day in week %}\n            <td>\n                {{ day.day }}\n                {% if day.events %}\n                <ul>\n                    {% for event in day.events %}\n                    <li><a href=\"{% url 'view_event_details' event.id %}\" class=\"details-link\">{{ event.title }}</a></li>\n                    {% endfor %}\n                </ul>\n                {% endif %}\n            </td>\n            {% endfor %}\n        </tr>\n        {% endfor %}\n        </tbody>\n    </table>\n</div>\n</body>\n</html>\n"
        },
        {
            "file": "user_guide.html",
            "path": "example_app/templates/user_guide.html",
            "code": "<html>\n<head><title>User Guide</title></head>\n<body>\n<h1>User Guide</h1>\n<p id=\"user_guide\">{{ guide|safe }}</p>\n<a href=\"{% url 'home' %}\" id=\"back_button\">Back to Calendar</a>\n</body>\n</html>"
        },
        {
            "file": "view_events.html",
            "path": "example_app/templates/view_events.html",
            "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Event List</title>\n</head>\n<body>\n    <h1>Event List</h1>\n    \n    <a href=\"{% url 'add_event' %}\">Add New Event</a> |\n    <a href=\"{% url 'home' %}\">Back to Calendar</a>\n    <form method=\"get\" action=\"{% url 'view_events' %}\">\n        <input type=\"text\" name=\"q\" placeholder=\"Search events\" value=\"{{ request.GET.q }}\" id=\"search_input\">\n        <button type=\"submit\" id=\"search_button\">Search</button>\n        <a href=\"{% url 'view_events' %}\"><button id=\"clear\"> Clear</button></a>\n    </form>\n    <table>\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Description</th>\n                <th>Date</th>\n                <th>Time</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for event in events %}\n                <tr>\n                    <td>{{ event.title }}</td>\n                    <td>{{ event.description }}</td>\n                    <td>{{ event.datetime|date:\"Y-m-d\" }}</td>\n                    <td>{{ event.datetime|date:\"H:i\" }}</td>\n                    <td>\n                        <a href=\"{% url 'edit_event' event.id %}\"  class=\"edit_event\">Edit</a> |\n                        <a href=\"{% url 'delete_event' event.id %}\" class=\"delete_event\" onclick=\"return confirm('Are you sure you want to delete this event?');\">Delete</a>\n                    </td>\n                </tr>\n            {% empty %}\n                <tr>\n                    <td colspan=\"5\">No events available.</td>\n                </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n</body>\n</html>\n</title>\n</head>\n<body>\n\n</body>\n</html>"
        },
        {
            "file": "view_event_details.html",
            "path": "example_app/templates/view_event_details.html",
            "code": "<html>\n<head><title>Event Details</title></head>\n<body>\n<h1>Event Details</h1>\n<p>Title: {{ event.title }}</p>\n<p>Description: {{ event.description }}</p>\n<p>Event Datetime: {{ event.datetime }}</p>\n<p>Latest updated: {{ event.updated }}</p>\n<p>Created at: {{ event.created }}</p>\n<a href=\"{% url 'view_events' %}\" id=\"back_button\">Back</a>\n</body>\n</html>"
        },
        {
            "file": "asgi.py",
            "path": "project_name/asgi.py",
            "code": "\nimport os\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project_name.settings')\n\napplication = get_asgi_application()\n"
        },
        {
            "file": "settings.py",
            "path": "project_name/settings.py",
            "code": "\nimport os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'project_name.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'project_name.wsgi.application'\nASGI_APPLICATION = 'project_name.asgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"
        },
        {
            "file": "urls.py",
            "path": "project_name/urls.py",
            "code": "\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"
        },
        {
            "file": "wsgi.py",
            "path": "project_name/wsgi.py",
            "code": "\nimport os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project_name.settings')\n\napplication = get_wsgi_application()\n"
        }
    ]
}