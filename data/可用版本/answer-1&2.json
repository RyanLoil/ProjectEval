{
  "1": [
    {
      "file": "manage.py",
      "path": "manage.py",
      "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "file": "forms.py",
      "path": "example_app/forms.py",
      "code": "from django import forms\n\nclass BMICalculatorForm(forms.Form):\n    weight = forms.FloatField(label='Weight (kg)')\n    height = forms.FloatField(label='Height (m)')\n"
    },
    {
      "file": "urls.py",
      "path": "example_app/urls.py",
      "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.homepage, name='homepage'),\n    path('bmi-calculator/', views.bmi_calculator, name='bmi_calculator'),\n    path('advice/', views.advice, name='advice'),\n]\n"
    },
    {
      "file": "views.py",
      "path": "example_app/views.py",
      "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom .forms import BMICalculatorForm\n\nbmi_category = {\n    \"Underweight\": 18.5,\n    \"Normal weight\": 25,\n    \"Overweight\": 30,\n    \"Obese\": 999,\n}\n\nbmi_interpretation = {\n    \"Underweight\": \"A BMI below 18.5 is considered underweight. This may indicate that a person is not consuming enough calories or may be experiencing malnutrition or an underlying health condition. Being underweight can lead to health issues such as weakened immune function, fragile bones, and fertility problems.\",\n    \"Normal weight\": \"A BMI within this range is considered normal or healthy. This suggests that the person\u2019s weight is appropriate for their height and is associated with a lower risk of developing weight-related health problems like heart disease, diabetes, and hypertension.\",\n    \"Overweight\": \"A BMI between 25 and 29.9 is classified as overweight. While not necessarily harmful in all cases, being overweight can increase the risk of chronic health conditions such as type 2 diabetes, heart disease, and certain cancers. It may also indicate a need for lifestyle changes to achieve a healthier weight.\",\n    \"Obese\": \"A BMI of 30 or above is considered obese. Obesity significantly increases the risk of serious health problems, including cardiovascular disease, type 2 diabetes, sleep apnea, and joint issues. Individuals in this category may benefit from medical intervention, including dietary changes, exercise, and potentially medications or surgery to manage their weight.\",\n    \"Invalid height\": \"The height can't be less than 0.\"\n}\n\n\ndef homepage(request):\n    return render(request, 'homepage.html')\n\n\ndef bmi_calculator(request):\n    if request.method == 'GET':\n        form = BMICalculatorForm()\n    elif request.method == 'POST':\n        form = BMICalculatorForm(request.POST)\n        if form.is_valid():\n            bmi_category = \"\"\n            if form.cleaned_data['height'] <= 0:\n                bmi_result = \"N/A\"\n                bmi_category = \"Invalid height.\"\n            else:\n                bmi_result = form.cleaned_data['weight'] / (form.cleaned_data['height'] ** 2)\n                if bmi_result < 18.5:\n                    bmi_category = \"Underweight\"\n                elif 18.5 <= bmi_result <= 24.9:\n                    bmi_category = \"Normal weight\"\n                elif 25 <= bmi_result <= 29.9:\n                    bmi_category = \"Overweight\"\n                else:\n                    bmi_category = \"Obese\"\n        else:\n            bmi_result = \"N/A\"\n            bmi_category = \"Invalid height.\"\n        interpretation = bmi_interpretation[bmi_category]\n    return render(request, 'bmi_calculator.html', locals())\n\n\ndef advice(request):\n    return render(request, 'advice.html')\n"
    },
    {
      "file": "__init__.py",
      "path": "example_app/__init__.py",
      "code": ""
    },
    {
      "file": "advice.html",
      "path": "example_app/templates/advice.html",
      "code": "<html>\n<head><title>Advice</title></head>\n<body>\n<h1>Advice Page</h1>\n<div id=\"bmi_advice\">\n    <div class=\"advice\">\n        <h2 class=\"category\">Underweight (BMI < 18.5):</h2>\n        <p>If your BMI is below 18.5, it\u2019s important to focus on gaining weight in a healthy way. Consider the following\n            advice:</p>\n        <ul>\n            <li>Increase your intake of nutrient-dense foods, such as lean proteins, whole grains, and healthy fats.\n            </li>\n            <li>Eat small, frequent meals throughout the day to boost your calorie intake.</li>\n            <li>Incorporate strength training exercises to build muscle mass.</li>\n            <li>Consult with a healthcare provider to rule out any underlying health conditions.</li>\n        </ul>\n    </div>\n\n    <div class=\"advice\">\n        <h2 class=\"category\">Normal Weight (BMI 18.5 - 24.9):</h2>\n        <p>Maintaining a BMI in the normal range is ideal for your overall health. Here\u2019s how you can keep up the good\n            work:</p>\n        <ul>\n            <li>Continue eating a balanced diet rich in fruits, vegetables, whole grains, and lean proteins.</li>\n            <li>Stay physically active with a mix of cardio, strength training, and flexibility exercises.</li>\n            <li>Monitor your weight regularly to ensure it remains stable.</li>\n            <li>Get regular check-ups to maintain overall health and prevent potential issues.</li>\n        </ul>\n    </div>\n\n    <div class=\"advice\">\n        <h2 class=\"category\">Overweight (BMI 25 - 29.9):</h2>\n        <p>If your BMI is in the overweight range, small lifestyle changes can make a big difference. Consider these\n            tips:</p>\n        <ul>\n            <li>Focus on portion control and choose lower-calorie, nutrient-rich foods.</li>\n            <li>Increase physical activity by incorporating more daily movement, such as walking or cycling.</li>\n            <li>Set realistic weight loss goals, aiming for a gradual reduction of 1-2 pounds per week.</li>\n            <li>Consult a healthcare provider for personalized advice, especially if you have other health conditions.\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"advice\">\n        <h2 class=\"category\">Obese (BMI \u2265 30):</h2>\n        <p>A BMI of 30 or higher puts you at higher risk for serious health conditions. Here\u2019s what you can do:</p>\n        <ul>\n            <li>Adopt a calorie-controlled diet that includes plenty of fruits, vegetables, and lean proteins.</li>\n            <li>Engage in regular physical activity, starting with moderate exercises like walking or swimming, and\n                gradually increasing intensity.\n            </li>\n            <li>Seek support from a healthcare provider, who may recommend working with a dietitian, or considering\n                weight\n                loss medications or surgery.\n            </li>\n            <li>Focus on making sustainable lifestyle changes rather than seeking quick fixes.</li>\n        </ul>\n    </div>\n\n    <div class=\"advice\">\n        <h2 class=\"category\">Severe Obesity (BMI \u2265 35):</h2>\n        <p>Severe obesity requires more intensive management due to the higher risk of health complications. Here\u2019s how\n            you\n            can take action:</p>\n        <ul>\n            <li>Work closely with a healthcare team to create a personalized weight loss plan that may include dietary\n                changes, exercise, and possibly medical interventions.\n            </li>\n            <li>Consider counseling or support groups to address emotional or psychological factors related to weight.\n            </li>\n            <li>Explore bariatric surgery options if recommended by your healthcare provider.</li>\n            <li>Set small, achievable goals to gradually improve your health and reduce risks associated with obesity.\n            </li>\n        </ul>\n    </div>\n</div>\n</body>\n</html>\n"
    },
    {
      "file": "bmi_calculator.html",
      "path": "example_app/templates/bmi_calculator.html",
      "code": "<html>\n<head><title>BMI Calculator</title></head>\n<body>\n<h1>BMI Calculator Page</h1>\n<div id=\"bmi_calculator\">\n    <form method=\"post\">\n        {% csrf_token %}\n        {{ form.as_p }}\n        <button type=\"submit\" id=\"submit_button\">Submit</button>\n    </form>\n    <a href=\"/bmi-calculator/\">\n        <button type=\"reset\" id=\"reset_button\">Reset</button>\n    </a>\n    {% if bmi_result %}\n    <h3 id=\"bmi_result\">Your BMI is {{ bmi_result }}</h3>\n    <h3 id=\"bmi_category\">Your category is {{ bmi_category }}</h3>\n    <p id=\"interpretation\">{{ interpretation }}</p>\n    {% endif %}\n</div>\n<p><a href=\"/advice/\" id=\"link_to_health_advice\">Health Advice</a></p>\n</body>\n</html>\n"
    },
    {
      "file": "homepage.html",
      "path": "example_app/templates/homepage.html",
      "code": "<html>\n<head><title>Homepage</title></head>\n<body>\n<h1>Welcome to the Homepage</h1>\n<div id=\"introduction\">\n<h2>What is BMI?</h2>\n<p>A Body Mass Index (BMI) calculator is a simple and widely used tool that helps individuals assess their body weight\n    in relation to their height. BMI is a numerical value derived from a person's weight and height, and it serves as an\n    indicator of whether an individual has a healthy body weight for their height. By calculating BMI, individuals can\n    determine if they fall into categories such as underweight, normal weight, overweight, or obese, based on\n    standardized ranges. While BMI does not directly measure body fat, it is a useful screening tool that provides a\n    quick estimate of a person's weight status and can help identify potential health risks associated with being\n    underweight or overweight. It is important to note that while BMI is a helpful tool, it should be used in\n    conjunction with other assessments and professional advice for a comprehensive evaluation of an individual's\n    health.</p>\n</div>\n<a href=\"/bmi-calculator/\">\n    <button id=\"navigate_button\">Click me to the BMI Calculator</button>\n</a>\n</body>\n</html>\n"
    },
    {
      "file": "settings.py",
      "path": "example_project/settings.py",
      "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"
    },
    {
      "file": "urls.py",
      "path": "example_project/urls.py",
      "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"
    },
    {
      "file": "wsgi.py",
      "path": "example_project/wsgi.py",
      "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"
    },
    {
      "file": "__init__.py",
      "path": "example_project/__init__.py",
      "code": ""
    }
  ],
  "2": [
    {
      "file": "manage.py",
      "path": "manage.py",
      "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\") from exc\n    execute_from_command_line(sys.argv)"
    },
    {
      "file": "forms.py",
      "path": "example_app/forms.py",
      "code": "from django import forms\n\nfrom django import forms\n\nCURRENCY_CHOICES = [\n    ('USD', 'US Dollar'),\n    ('EUR', 'Euro'),\n    ('JPY', 'Japanese Yen'),\n    ('GBP', 'British Pound'),\n    ('CNY', 'Renminbi'),\n    ('AUD', 'Australian Dollar'),\n    ('CAD', 'Canadian Dollar'),\n    ('CHF', 'Swiss Franc')\n]\n\n\nclass CurrencyConverterForm(forms.Form):\n    input_amount = forms.FloatField(label=\"Input amount\")\n    source_currency = forms.ChoiceField(label='Source Currency', choices=CURRENCY_CHOICES)\n    target_currency = forms.ChoiceField(label='Target Currency', choices=CURRENCY_CHOICES)"
    },
    {
      "file": "models.py",
      "path": "example_app/models.py",
      "code": "from django.db import models\n\n\nclass CurrencyConvertRateModel(models.Model):\n    class Meta:\n        verbose_name = \"Currency Convert Rate\"\n        verbose_name_plural = \"Currency Convert Rates\"\n\n    source_currency = models.CharField(max_length=128, verbose_name=\"Source Currency\")\n    target_currency = models.CharField(max_length=128, verbose_name=\"Target Currency\")\n    rate = models.DecimalField(max_digits=32, decimal_places=16, verbose_name=\"Rate\")\n    datetime = models.DateTimeField(auto_now_add=True, verbose_name=\"Datetime\", editable=False)\n\n    def __str__(self):\n        return f\"{str(self.datetime)} {self.source_currency}--{str(self.rate)}-->{self.target_currency}\"\n"
    },
    {
      "file": "views.py",
      "path": "example_app/views.py",
      "code": "import base64\nimport datetime\nimport io\nimport random\n\nfrom django.shortcuts import render\nfrom django.utils import timezone\nfrom django.views.generic import TemplateView\nfrom matplotlib import pyplot as plt\n\nfrom .forms import CurrencyConverterForm\nfrom .models import CurrencyConvertRateModel\n\n\ndef get_updated(source_currency, target_currency):\n    '''\n    Warning:\n    This function is a simulation of currency rate.\n    In the production environment, this function should be replaced with an api from professional currency exchanging market website.\n    '''\n    # random rate\n    USD_BASE = {\n        'USD': 1.00,\n        'EUR': 0.85,\n        'GBP': 0.75,\n        'JPY': 110.00,\n        'AUD': 1.35,\n        'CNY': 7.00,\n        'CAD': 1.25,\n        'CHF': 0.92,\n    }\n    return (random.random() * 0.5 + 0.75) * (1 / USD_BASE[source_currency] * USD_BASE[target_currency])\n\n\ndef get_conversion_rate(source_currency, target_currency):\n    obj = CurrencyConvertRateModel(\n        source_currency=source_currency, target_currency=target_currency,\n        rate=get_updated(source_currency, target_currency)\n    )\n    obj.save()\n    return obj.rate\n\n\nclass ConvertCurrencyView(TemplateView):\n    def get(self, request):\n        form = CurrencyConverterForm()\n        return render(request, 'home.html', locals())\n\n    def post(self, request):\n        form = CurrencyConverterForm(request.POST)\n        if form.is_valid():\n            input_amount = form.cleaned_data['input_amount']\n            source_currency = form.cleaned_data['source_currency']\n            target_currency = form.cleaned_data['target_currency']\n            conversion_rate = get_conversion_rate(source_currency, target_currency)\n            converted_amount = input_amount * conversion_rate\n            exchange_rate_info = f\"The exchange rate is {str(conversion_rate)} updated to {datetime.datetime.now().strftime(\"%Y%M%D\")}. WARNING: This project is using random rate for testing.\"\n\n        else:\n            form = CurrencyConverterForm()\n            converted_amount = 'Error: invalid amount or currency.'\n            return render(request, 'home.html', locals())\n        return render(request, 'home.html', locals())\n\n\nclass ExchangeRateTrendsView(TemplateView):\n    def get(self, request):\n        currency_info_dict = {\n            'USD': '<h3 id=\"1-us-dollar-usd\">US Dollar (USD)</strong></h3><p>The US Dollar is the official currency of the United States and its territories. It is the world\\'s primary reserve currency, used in global trade and finance. The dollar is issued by the Federal Reserve, the central bank of the United States, and is recognized by the symbol \"$\". It is one of the most widely used currencies in international transactions and is held in significant quantities by governments and institutions around the world.</p>',\n            'EUR': '<h3 id=\"2-euro-eur\"><strong>Euro (EUR)</strong></h3><p>The Euro is the official currency of the Eurozone, which consists of 19 of the 27 member states of the European Union. Introduced in 1999 for electronic transactions and in 2002 for cash transactions, the Euro is managed by the European Central Bank (ECB). It is the second most traded currency in the world after the US Dollar and is used by more than 340 million Europeans.</p>',\n            'GBP': '<h3 id=\"3-british-pound-gbp\"><strong>British Pound (GBP)</strong></h3><p>The British Pound, also known as the Pound Sterling, is the official currency of the United Kingdom. It is symbolized by \"\u00a3\" and is abbreviated as GBP. The Pound is the oldest currency in continuous use, with origins dating back to the 8th century. The Bank of England is responsible for issuing and managing the currency, which is widely recognized and traded globally.</p>',\n            'JPY': '<h3 id=\"4-japanese-yen-jpy\"><strong>Japanese Yen (JPY)</strong></h3><p>The Japanese Yen is the official currency of Japan and is symbolized by \"\u00a5.\" It is abbreviated as JPY. The Yen is the third most traded currency in the world after the US Dollar and the Euro, and it is often used as a reserve currency. The Bank of Japan manages the currency, which plays a significant role in global foreign exchange markets.</p>',\n            'AUD': '<h3 id=\"5-australian-dollar-aud\"><strong>Australian Dollar (AUD)</strong></h3><p>The Australian Dollar is the official currency of Australia, including its external territories. It is symbolized by \"$\" or sometimes \"A$\" to distinguish it from other dollar-denominated currencies. The Reserve Bank of Australia issues the currency, which is highly traded in global markets due to Australia\\'s stable economy and the country\\'s significant natural resources.</p>',\n            'CNY': '<h3 id=\"6-chinese-yuan-cny\"><strong>Chinese Yuan (CNY)</strong></h3><p>The Chinese Yuan, also known as the Renminbi (RMB), is the official currency of the People\\'s Republic of China. The symbol for the Yuan is \"\u00a5,\" and its abbreviation is CNY. The currency is issued and controlled by the People\\'s Bank of China. The Yuan is becoming increasingly significant in global finance and trade as China\\'s economy continues to grow rapidly.</p>',\n            'CAD': '<h3 id=\"7-canadian-dollar-cad\"><strong>Canadian Dollar (CAD)</strong></h3><p>The Canadian Dollar is the official currency of Canada and is symbolized by \"$\" or sometimes \"C$\" to differentiate it from other dollar-denominated currencies. The Bank of Canada is responsible for issuing and regulating the currency. The Canadian Dollar is known for its stability and is frequently used in global transactions, especially in commodity markets like oil and natural resources.</p>',\n            'CHF': '<h3 id=\"8-swiss-franc-chf\">s<strong>Swiss Franc (CHF)</strong></h3><p>The Swiss Franc is the official currency of Switzerland and Liechtenstein. It is symbolized by \"CHF,\" which stands for \"Confoederatio Helvetica Franc.\" The Swiss National Bank issues the currency, which is known for its stability and strength. The Swiss Franc is often considered a safe haven currency, especially during times of economic uncertainty or financial instability.</p>'\n        }\n        trend_and_info = []\n        for target_currency in currency_info_dict:\n            if target_currency == \"USD\":\n                continue\n            trend_and_info.append(\n                [target_currency, currency_info_dict[target_currency], ExchangeRateTrendsView.plot_chart(\"USD\", target_currency)])\n        return render(request, \"exchange_rate_trends.html\", locals())\n\n    @staticmethod\n    def plot_chart(source_currency, target_currency):\n        # Data\n        six_months_ago = timezone.now().date() - datetime.timedelta(days=6 * 30)\n\n        data = CurrencyConvertRateModel.objects.filter(source_currency=source_currency, target_currency=target_currency,\n                                                       datetime__gte=six_months_ago)\n        x = [_.datetime for _ in data]\n        y = [_.rate for _ in data]\n\n        # Make chart\n        plt.figure()\n        plt.plot(x, y, marker='o')\n        plt.title(f'{source_currency}-{target_currency} Exchange Rate Trends')\n        plt.xlabel('Datetime')\n        plt.ylabel('Rate')\n\n        # Save chart to Bytestream\n        buffer = io.BytesIO()\n        plt.savefig(buffer, format='png')\n        buffer.seek(0)\n        image_png = buffer.getvalue()\n        buffer.close()\n\n        # Encoding Bytestream to base64\n        graphic = base64.b64encode(image_png)\n        graphic = graphic.decode('utf-8')\n\n        return graphic\n\n\ndef InfoView(request):\n    return render(request, 'info.html')\n"
    },
    {
      "file": "__init__.py",
      "path": "example_app/__init__.py",
      "code": ""
    },
    {
      "file": "0001_initial.py",
      "path": "example_app/migrations/0001_initial.py",
      "code": "# Generated by Django 4.2 on 2024-09-04 03:09\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='CurrencyConvertRateModel',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('source_currency', models.CharField(max_length=128, verbose_name='Source Currency')),\n                ('target_currency', models.CharField(max_length=128, verbose_name='Target Currency')),\n                ('rate', models.DecimalField(decimal_places=16, max_digits=32, verbose_name='Rate')),\n                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Datetime')),\n            ],\n            options={\n                'verbose_name': 'Currency Convert Rate',\n                'verbose_name_plural': 'Currency Convert Rates',\n            },\n        ),\n    ]\n"
    },
    {
      "file": "__init__.py",
      "path": "example_app/migrations/__init__.py",
      "code": ""
    },
    {
      "file": "exchange_rate_trends.html",
      "path": "example_app/templates/exchange_rate_trends.html",
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Exchange Rate Trends</title>\n</head>\n<body>\n    <h1>Exchange Rate Trends</h1>\n    <p>Here are the exchange rate trends. Base currency is USD.</p>\n    <div id=\"currency_info\">\n    {{ currency_info_dict.USD|safe }}\n    {% for obj in trend_and_info %}\n        <h2>USD - {{ obj.0 }}</h2>\n        {{ obj.1|safe }}\n        <h3>Trend Chart</h3>\n        <img id=\"historical_rate_{{ obj.0 }}\" src=\"data:image/png;base64,{{ obj.2 }}\" alt=\"Chart\">\n    {% endfor %}\n    </div>\n</body>\n</html>"
    },
    {
      "file": "home.html",
      "path": "example_app/templates/home.html",
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <h1>Welcome to the Home Page</h1>\n    <h2>Convert Currency</h2>\n    <form method=\"post\">\n        {% csrf_token %}\n        {{ form.as_p }}\n        <button id=\"submit\" type=\"submit\">Convert</button>\n    </form>\n    {% if converted_amount %}\n        <h3 id=\"converted_amount\">Converted Amount: {{ converted_amount }}</h3>\n    {% endif %}\n    {% if exchange_rate_info %}\n        <p id=\"exchange_rate_info\">{{exchange_rate_info}}</p>\n    {% endif %}\n    <nav>\n        <ul>\n            <li><a href=\"/trends/\">Exchange Rate Trends</a></li>\n        </ul>\n    </nav>\n</body>\n</html>"
    },
    {
      "file": "settings.py",
      "path": "example_project/settings.py",
      "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"
    },
    {
      "file": "urls.py",
      "path": "example_project/urls.py",
      "code": "from django.contrib import admin\nfrom django.urls import path\nfrom example_app.views import ConvertCurrencyView, ExchangeRateTrendsView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', ConvertCurrencyView.as_view(), name='home'),\n    path('trends/', ExchangeRateTrendsView.as_view(), name='exchange_rate_trends'),\n]"
    },
    {
      "file": "wsgi.py",
      "path": "example_project/wsgi.py",
      "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\napplication = get_wsgi_application()"
    },
    {
      "file": "__init__.py",
      "path": "example_project/__init__.py",
      "code": ""
    }
  ]
}