{"2": [{"file": "templates/home.html", "path": "templates/home.html", "code": "<html>\n<head>\n    <title>Currency Converter</title>\n</head>\n<body>\n    <h1>Currency Converter</h1>\n    \n    <form id=\"conversion-form\">\n        <h2>Select Currencies</h2>\n        <label for=\"base-currency\">Base Currency:</label>\n        <select id=\"base-currency\" name=\"base-currency\">\n            <!-- Currencies will be dynamically populated here -->\n        </select>\n        <br />\n        <label for=\"target-currency\">Target Currency:</label>\n        <select id=\"target-currency\" name=\"target-currency\">\n            <!-- Currencies will be dynamically populated here -->\n        </select><br />\n        <h2>Input Amount</h2>\n        <label for=\"amount\">Amount:</label>\n        <input type=\"number\" id=\"amount\" name=\"amount\"></input>\n        \n        <input type=\"button\" value=\"Convert\" id=\"convert-button\">\n    </form>\n    \n    <div id=\"result-container\">\n        <h2>Conversion Result:</h2>\n        <p id=\"conversion-result\"></p>\n    </div>\n    \n    <div id=\"exchange-rate-info\">Exchange Rate Info:</div>\n    \n</body>\n</html> "}, {"file": "templates/currency_details.html", "path": "templates/currency_details.html", "code": "<html>\n<head>\n    <title>Currency Details</title>\n</head>\n\n <body>\n    <h1>Currency Details:</h1>\n    \n    <!-- Currency Information will be displayed here -->\n    \n    <h2>Historical Exchange Rates</h2>\n    <!-- Historical exchange rates will be displayed here -->\n   \n</body>\n</html> "}, {"file": "templates/settings.html", "path": "templates/settings.html", "code": "<html>\n<head>\n    <title>Settings</title>\n</head>\n\n <body>\n    <h1>Settings</h1>\n    \n    <h2>Set Default Currencies</h2>\n    <!-- Form for setting default base and target currencies -->\n    \n    <h2>Set Update Frequency</h2>\n    <!-- Form for setting update frequency of exchange rates -->\n   \n</body>\n</html>"}], "3": [{"file": "urls.py", "path": "/", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('passwordoptions/', views.password_options, name='password_options'),\n    path('generatedpassword/', views.generator_password, name='generator_password'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "views.py", "path": "/", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\ndef password_options(request):\n    return render(request, 'passwordOptions.html')\ndef generator_password(request):\n    return render(request, 'generatedPassword.html')\ndef about(request):\n    return render(request, 'about.html')\n"}, {"file": "home.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang='en'>\n<head>\n    <meta charset='UTF-8'>\n    <title>Password Generator</title>\n    <!-- Add stylesheets here -->\n</head>\n<body>\n    <h1>Welcome to the Password Generator</h1>\n    <p>Generate strong and secure passwords with ease.</p>\n    <a href=\"{% url 'password_options' %}\" id=\"goto-options\" class=\"btn\">Go to Password Options</a>\n</body>\n</html>\n"}, {"file": "templates/passwordOptions.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang='en'>\n<head>\n    <meta charset='UTF-8'>\n    <title>Password Options</title>\n    <!-- Add stylesheets here -->\n</head>\n<body>\n    <h1>Password Options</h1>\n    \n    <form method=\"post\">\n        {% csrf_token %}\n        <label for=\"length\">Length:</label>\n        <input type=\"number\" id=\"length\" name=\"length\" min=\"8\" max=\"64\" required>\n        <br>\n        <label for=\"uppercase\">Include Uppercase:</label>\n        <input type=\"checkbox\" id=\"uppercase\" name=\"uppercase\" value=\"True\">\n        <br>\n        <label for=\"lowercase\">Include Lowercase:</label>\n        <input type=\"checkbox\" id=\"lowercase\" name=\"lowercase\" value=\"True\">\n        <br>\n        <label for=\"numbers\">Include Numbers:</label>\n        <input type=\"checkbox\" id=\"numbers\" name=\"numbers\" value=\"True\">\n        <br>\n        <label for=\"symbols\">Include Symbols:</label>\n        <input type=\"checkbox\" id=\"symbols\" name=\"symbols\" value=\"True\">\n        <br>\n        <button type=\"submit\" id=\"generate-button\" class=\"btn\">Generate Password</button>\n    </form>\n\n</body>\n</html>\n"}, {"file": "templates/generatedPassword.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang='en'>\n<head>\n    <meta charset='UTF-8'>\n    <title>Generated Password</title>\n    <!-- Add stylesheets here -->\n</head>\n<body>\n    <h1>Your Generated Password</h1>\n    <p id=\"password\"</p>\n    <button id=\"copy-button\" class=\"btn\">Copy to Clipboard</button>\n</body>\n</html>\n"}, {"file": "templates/about.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang='en'>\n<head>\n    <meta charset='UTF-8'>\n    <title>About</title>\n    <!-- Add stylesheets here -->\n</head>\n<body>\n    <h1>About This Password Generator</h1>\n    <p>This is a simple password generator website built with Django.  \nIt allows you to:</p>\n    <ul>\n        <li>Specify the desired length of your password.</li>\n        <li>Choose to include uppercase letters, lowercase letters,</li>\n        <li>numbers, and symbols.</li>\n        <li>Copy the generated password to your clipboard.</li>\n    </ul>\n\n    <!-- Add more details about the project here -->\n</body>\n</html>\n"}], "4": [{"file": "urls.py", "path": "myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('home.urls')),\n    path('qr_generator/', include('qr_generator.urls')),\n    path('about/', include('about.urls')),\n]\n"}, {"file": "settings.py", "path": "myproject/settings.py", "code": "# settings.py\ndjango-admin_site = True \nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.staticfiles',\n   \t'home', 'qr_generator', 'about',\n]\n"}, {"file": "wsgi.py", "path": "myproject/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\napplication = get_wsgi_application()"}, {"file": "manage.py", "path": "myproject/manage.py", "code": "# manage.py\nexec {django_bin} \\\\Django-home"}, {"file": "homepage_view.py", "path": "home/views.py", "code": "from django.shortcuts import render\n\ndef homepage(request):\n    return render(request, 'home.html')"}, {"file": "generator_view.py", "path": "qr_generator/views.py", "code": "// Replace with your actual QR code generation logic\nfrom django.shortcuts import render\nexample = ''\ndef generate_qrcode(request):\n    return render(request, 'generator.html', {'example': example})"}, {"file": "home.html", "path": "myproject/templates/home.html", "code": "<html>\n<head>\n    <title>My Website</title>\n</head>\n<body>\n    <h1>Welcome to My Website!</h1>\n    <p>This is the home page. </p>\n    <a href=\"/qr_generator/\">Generate a QR Code</a>\n    <a href=\"/about/\">About Us</a>\n</body>\n</html>"}, {"file": "generator.html", "path": "myproject/templates/qr_generator/generator.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <h1>Generate QR code</h1>\n    <input type=\"text\" id=\"textInput\" placeholder=\"Enter text or URL\">\n    <button id=\"generateButton\">Generate QR Code</button>\n    <img id=\"qrCodeImage\" src=\"#\" alt=\"Generated QR Code\">\n</body>\n</html>"}, {"file": "about.html", "path": "myproject/templates/about.html", "code": "<html>\n<head>\n    <title>About Us</title>\n</head>\n<body>\n    <h1>About Us</h1>\n    <p>This is the about page.</p>\n    <h2>Frequently Asked Questions</h2>\n    <p>...</p>\n    <h2>Privacy Policy</h2>\n    <p>...</p>\n    <h2>Terms of Service</h2>\n    <p>...</p>\n</body>\n</html>"}], "14": [{"file": "settings.py", "path": "myproject/settings.py", "code": "from pathlib import Path\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'helloworld',  # Add your app here\n]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\n\nSTATIC_URL = '/static/'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates', \n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True, \n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n"}, {"file": "templates/base.html", "path": "myproject/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>{% block title %}My Project{% endblock %}</title>\n    </head>\n<body>\n    <h1>Page Title</h1>\n   {% block content %}{% endblock %}\n\n</body>\n</html>"}, {"file": "templates/hello_world.html", "path": "myproject/templates/helloworld/hello_world.html", "code": "<div id=\"hello-world\" class=\"container text-center\">\n    <h1 id=\"greeting\" class=\"display-4\">Hello World</h1>\n</div>"}, {"file": "urls.py", "path": "myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom helloworld import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.hello_world, name='hello_world'),\n]\n"}, {"file": "helloworld/views.py", "path": "myproject/helloworld/views.py", "code": "from django.shortcuts import render\ndef hello_world(request):\n    return render(request, 'helloworld/hello_world.html')\n"}, {"file": "__init__.py", "path": "myproject/helloworld/__init__.py", "code": ""}], "15": [{"file": "settings.py", "path": "project_name/settings.py", "code": "INSTALLED_APPS = [ \n    'django.contrib.admin', \n    'django.contrib.auth', \n    'django.contrib.contenttypes', \n    'django.contrib.sessions', \n    'django.contrib.messages', \n    'django.contrib.staticfiles', \n    'myapp', \n]\n\ndef get_wsgi_application(): \n    return application"}, {"file": "urls.py", "path": "project_name/urls.py", "code": "from django.contrib import admin \nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]\n"}, {"file": "urls.py", "path": "project_name/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('HelloWorld/', views.hello_world, name='helloworld'),\n]\n"}, {"file": "views.py", "path": "project_name/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef hello_world(request):\n    return render(request, 'helloworld.html')"}, {"file": "home.html", "path": "project_name/myapp/templates/myapp/home.html", "code": "<h1>Welcome to Our Website</h1>\n<p><a href=\"/HelloWorld/\">Go to 'HelloWorld' page</a></p>"}, {"file": "helloworld.html", "path": "project_name/myapp/templates/myapp/helloworld.html", "code": "<h1>Hello World!</h1>\n<p>This is the Hello World page.</p>"}], "17": [{"file": "DataPreparation.py", "path": "project/data_processing.py", "code": "import pandas as pd\n\ndef ReadDataset(filepath):\n    try:\n        df = pd.read_excel(filepath)\n        return df\n    except Exception as e:\n        print(f'Error reading dataset: {e}')\n        return None\n\ndef LagDependentVariable(dataframe, lag_column = 'result', new_column_name='predicted_result'):\n    dataframe[new_column_name] = dataframe[lag_column].shift(1)\n    return dataframe\n\ndef PrepareIndependentVariables(dataframe):\n    try:\n       # Define logic to process independent variables, handle null values and empty tables.\n       if dataframe.isnull().values.any():\n           print('Null values detected in the dataset!')\n           return None\n       else:\n           X = dataframe.drop(['predicted_result'], axis=1)\n           return X \n    except Exception as e:\n        print(f'Error processing independent variables: {e}')\n        return None\n\ndef main():\n    filepath = 'Gamedata.xlsx'\n    df = ReadDataset(filepath)\n    df = LagDependentVariable(df)\n    X = PrepareIndependentVariables(df)\n    print(X)   # Print processed data to check results\n    \nif __name__ == '__main__':\n    main()\n"}, {"file": "ModelCreation.py", "path": "project/model_creation.py", "code": "# Import necessary libraries\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix\n\ndef CreateLogisticModel(dataframe_X ):\n    y = dataframe_X.pop('result')\n    model = LogisticRegression()\n    model.fit(dataframe_X, y)\n    return model\n\ndef GenerateModelSummary(model):\n    print('--- Logistic Regression Model Summary ---')\n    print(model.summary())\n\ndef main():\n    # Load your prepared dataframe here or replace with your load logic \n    X_data = pd.read_csv('processed_data.csv') \n    model = CreateLogisticModel(X_data)\n    GenerateModelSummary(model)   #. Save model to disk for future use if needed\n\nif __name__ == '__main__':\n   main()"}, {"file": "Output.py", "path": "project/output_writer.py", "code": "# Import necessary libraries\nimport pandas as pd\n\ndef WriteSummary(model_summary, output_filepath='Logistic.xlsx'):\n   # Save model summary in a file e.g., 'Logistic.xlsx'\n   with pd.ExcelWriter(output_filepath) as writer:\n       # Add model metrics to the Excel sheet  \n       df_model = pd.DataFrame() \n       writer.save()"}], "19": [{"file": "DeathlistDataProcessor.py", "path": "/main/DeathlistDataProcessor.py", "code": "import pandas as pd\ndef ReadDeathlistData(filepath=\"Deathlist.csv\"):    \n    \"\"\"Load and read data from the 'Deathlist.csv' file.\"\"\n    try:\n        df = pd.read_csv(filepath)\n        return df\n    except FileNotFoundError:\n        print(f\"Error: File '{filepath}' not found.\")\n        return None\ndef ProcessData(df):\n    \"\"\"Process the dataset to structure data appropriately for weekly analysis.\"\"\n    # Implement data processing logic here based on your requirements\n    return processed_df\ndef CalculateWeeklyDeaths(processed_df):\n    \"\"\"Aggregate the data to calculate the number of deaths per week.\"\"\n    # Implement aggregation logic here based on your requirements\n    return weekly_death_counts\ndef ValidateDataset(df):\n    \"\"\"Validate the dataset to ensure it contains the required data and format before processing.\"\"\n    # Implement validation logic here based on your requirements\n    return is_valid\t"}, {"file": "visualize.py", "path": "/main/visualize.py", "code": "import matplotlib.pyplot as plt\ndef GenerateHistogram(weekly_death_counts):\n    \"\"\"Create a histogram depicting the weekly deaths calculated from the dataset.\"\"\n    plt.hist(weekly_death_counts)\n    plt.xlabel('Week')\n    plt.ylabel('Number of Deaths')\n    plt.title('Weekly Death Count Histogram')\ndef OutputHistogram():\n    \"\"\"Print or display the generated histogram to the user.\"\"\n    plt.show()"}, {"file": "main.py", "path": "/main/main.py", "code": "import DeathlistDataProcessor as dlpprocessor, visualize as viz\ndef main():    df = dlpprocessor.ReadDeathlistData()\n    if df is not None and dlpprocessor.ValidateDataset(df):\n        processed_df = dlpprocessor.ProcessData(df)\n        weekly_death_counts = dlpprocessor.CalculateWeeklyDeaths(processed_df)\n        viz.GenerateHistogram(weekly_death_counts)\n        viz.OutputHistogram()\n    else:\n        print('Dataset processing failed.')\nif __name__ == '__main__':\n    main()"}, {"file": "Deathlist.csv", "path": "/dataset/Deathlist.csv", "code": ""}]}