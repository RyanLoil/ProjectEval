{"1": [{"file": "manage.py", "path": "manage.py", "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == \"__main__\":\n    main()\n"}, {"file": "example_app/models.py", "path": "example_app/models.py", "code": ""}, {"file": "example_app/views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, \"index.html\")\n"}, {"file": "example_app/templates/index.html", "path": "example_app/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Example App</title>\n</head>\n<body>\n    <h1>Hello, World!</h1>\n    <p>This is the homepage of our example app.</p>\n</body>\n</html>"}, {"file": "example_project/settings.py", "path": "example_project/settings.py", "code": "import os\nfrom pathlib import Path, WindowsPathBase\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = \"your secret key\"\n\ndef generate_secret_key():\n    '''Generates a new, secure secret key.\n    It should be unique and kept confidential.\n     '''\n    import secrets,\n     from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes\n\n    return secrets.token_urlsafe(32)\n\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "example_project/urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}], "2": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom example_app.views import ConvertCurrencyView, ExchangeRateTrendsView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', ConvertCurrencyView.as_view(), name='home'),\n    path('trends/', ExchangeRateTrendsView.as_view(), name='exchange_rate_trends'),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\napplication = get_wsgi_application()\n"}, {"file": "home.html", "path": "example_app/templates/example_app/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n   <h1>Welcome to the Home Page</h1>\n   <p>This is the example homepage of the currency converter application.</p>\n    \n</body>\n</html>"}, {"file": "trends.html", "path": "example_app/templates/example_app/trends.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Exchange Rate Trends</title>\n</head>\n<body>\n   <h1>Exchange Rate Trends</h1>\n   <p>Here you can view trends and historical data of various currency pairs.</p>\n    \n</body>\n</html>"}], "7": [{"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n# Security settings and key configuration\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\n# Hosts allowed to serve the application\nALLOWED_HOSTS = []\n\n# Application definitions\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\n# Middleware settings\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\n# URL configuration\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n# WSGI application\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\n# Database configuration\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n# Password validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n# Locale and timezone settings\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\n# Static files (CSS, JavaScript, Images) settings\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\n# Main URL routing configuration\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\n# Setup the default Django settings module for the WSGI application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    # Add more URL patterns here.\n]\n"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'home.html')\n\ndef dashboard(request):\n    return render(request, 'dashboard.html')\n\n"}, {"file": "templates/home.html", "path": "example_app/templates/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Example App</title>\n</head>\n<body>\n    <h1>Welcome to the Example App!</h1>\n</body>\n</html>\n"}, {"file": "templates/dashboard.html", "path": "example_app/templates/dashboard.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Dashboard</title>\n</head>\n<body>\n    <h1>Dashboard</h1>\n    <p>Welcome to your dashboard!</p>\n</body>\n</html>\n"}], "10": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = '/static/'\n\nLOGIN_URL = '/login/'"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "auth/views.py", "path": "example_app/auth/views.py", "code": "\nfrom django.shortcuts import render, redirect\nfrom django.contrib.auth import login, logout\nfrom .models import User\nfrom .forms import LoginForm, RegistrationForm\n\ndef register(request):\n    if request.method == 'POST':\n        form = RegistrationForm(request.POST)\n        if form.is_valid():\n            user = form.save()\n            login(request, user)\n            return redirect('home')\n    else:\n        form = RegistrationForm()\n    return render(request, 'registration/register.html', {'form': form})\n\ndef login_view(request):\n    if request.method == 'POST':\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            user = form.get_user()\n            login(request, user)\n            return redirect('home')\n    else:\n        form = LoginForm()\n    return render(request, 'registration/login.html', {'form': form})\ndef logout_view(request):\n    logout(request)\n    return redirect('login')"}, {"file": "auth/forms.py", "path": "example_app/auth/forms.py", "code": "\nfrom django import forms\n from .models import User\n  class LoginForm(forms.Form):\n      username = forms.CharField(label='Username', max_length=100)\n      password = forms.CharField(label='Password', widget=forms.PasswordInput())\n   \ndef get_user():\n        user = User.objects.filter(username=self.cleaned_data['username'])\n         if user.exists() and user[0].check_password(self.cleaned_data['password']):\n            return user[0]\n         else:\n             raise forms.AuthenticationError('Invalid login credentials')\n  class RegistrationForm(forms.ModelForm):\n      class Meta:\n          model = User\n          fields = ('username', 'email', 'password')\n"}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.urls import path\n from . import views\n  urlpatterns = [\n      path('register/', views.register, name='register'),\n      path('login/', views.login_view, name='login'),\n      path('logout/', views.logout_view, name='logout'),\n     \n  ]"}, {"file": "registration/template", "path": "example_app/templates/registration", "code": ""}, {"file": "register.html", "path": "example_app/templates/registration/register.html", "code": "<h1>Register</h1>\n<form method='post'>\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type='submit'>Register</button>\n</form>"}, {"file": "login.html", "path": "example_app/templates/registration/login.html", "code": "<h1>Login</h1>\n<form method='post'>\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type='submit'>Login</button>\n</form>"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}], "15": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'example_app/static')]\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.urls import path\n\nurlpatterns = [\n    # Your URL patterns here\n]\n"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef about(request):\n    return render(request, 'about.html')\n"}, {"file": "templates/home.html", "path": "example_app/templates/home.html", "code": "<h1>Home Page</h1>\n<p>Welcome to our website!</p>\n"}, {"file": "templates/about.html", "path": "example_app/templates/about.html", "code": "<h1>About Us</h1>\n<p>Here you can find more information about us.</p>\n"}], "16": [{"file": "16-stdanswer.py", "path": "project/16-stdanswer.py", "code": "import os\nimport pandas as pd\n\n# File paths\ninput_file = \"Spring Semester Subjects.xlsx\"\noutput_file = \"Processed Subjects Table.xlsx\"\n\ndef check_file_exists(file_path):\n    return os.path.exists(file_path)\n\n\ndef check_file_format(file_path):\n    _, file_extension = os.path.splitext(file_path)\n    return file_extension == '.xlsx'\n\n\ndef validate_data(df):\n    required_columns = ['Subject', 'Credits', 'Instructor']\n    for column in required_columns:\n        if column not in df.columns:\n            raise ValueError(f\"Missing required column: {column}\")\n    return True\n\n\ndef process_subjects(input_file, output_file):\n    try:\n        df = pd.read_excel(input_file)\n        if not check_file_format(input_file):\n            raise ValueError(\"Input file is not an Excel file.\")\n        if not check_file_exists(input_file):\n            raise FileNotFoundError(f\"Input file '{input_file}' not found.\")\n        validate_data(df)\n        df.to_excel(output_file, index=False)\n    except Exception as e:\n        print(f\"Error processing subjects: {e}\")\n\n\ndef main():\n    process_subjects(input_file, output_file)\n\nif __name__ == \"__main__\":\n    main()"}], "20": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\nfrom pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = False\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\nLOGIN_URL = '/admin/login/'"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "models.py", "path": "example_app/models.py", "code": "from django.db import models\n\nclass Post(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return self.title\n\nclass Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name='comments')\n    author = models.CharField(max_length=100)\n    content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import Post, Comment\n\ndef post_list(request):\n    posts = Post.objects.all()\n    return render(request, 'post_list.html', {'posts': posts})\n\ndef post_detail(request, pk):\n    post = get_object_or_404(Post, pk=pk)\n    comments = post.comments.all()\n    return render(request, 'post_detail.html', {'post': post, 'comments': comments})\n"}, {"file": "templates/example_app/post_list.html", "path": "example_app/templates/example_app/post_list.html", "code": "<h1>Blog Posts</h1>\n<ul>\n  {% for post in posts %}\n    <li><a href=\"{{ post.get_absolute_url }}\">{{ post.title }}</a></li>\n  {% endfor %}\n</ul>"}, {"file": "templates/example_app/post_detail.html", "path": "example_app/templates/example_app/post_detail.html", "code": "<h1>{{ post.title }}</h1>\n<p>{{ post.content }}</p>\n<h2>Comments</h2>\n<ul>\n  {% for comment in comments %}\n    <li>{{ comment.author }}: {{ comment.content }}</li>\n  {% endfor %}\n</ul>"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}]}