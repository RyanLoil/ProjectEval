{"1": [{"file": "bmi_calculator/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator</title>\n    <style>\n        body {\n            font-family: sans-serif;\n        }\n        h1 {\n            text-align: center;\n        }\n        form {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n        label {\n            margin-bottom: 5px;\n        }\n        input[type='number'] {\n            width: 100px;\n        }\n        button {\n            padding: 10px 20px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            cursor: pointer;\n        }\n    </style>\n</head>\n<body>\n    <h1>BMI Calculator</h1>\n    <form method=\"POST\" action=\"/\">\n        {% csrf_token %}\n        <label for=\"height\">Height (cm):</label>\n        <input type=\"number\" id=\"height\" name=\"height\">\n        <label for=\"weight\">Weight (kg):</label>\n        <input type=\"number\" id=\"weight\" name=\"weight\">\n        <label for=\"units\">Units:</label>\n        <select id=\"units\" name=\"units\">\n            <option value=\"cm, kg\">centimeters, kilograms</option>\n        </select>\n        <button type=\"submit\">Calculate BMI</button>\n    </form>\n</body>\n</html> "}, {"file": "bmi_calculator/templates/result.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Result</title>\n    <style>\n        body {\n            font-family: sans-serif;\n        }\n        h1 {\n            text-align: center;\n        }\n        p {\n            margin: 20px;\n        }\n    </style>\n</head>\n<body>\n    <h1>BMI Result</h1>\n    <p>Your BMI is: <span id=\"bmi\"></span></p>\n    <!-- Add more information here based on BMI category -->\n</body>\n</html>"}], "7": [{"file": "accounts/models.py", "path": "apps/accounts/models.py", "code": "from django.db import models\n\nclass User(models.Model):\n    # ... user model definition"}, {"file": "dashboard/models.py", "path": "apps/dashboard/models.py", "code": "from django.db import models\nfrom accounts.models import User\n\nclass Transaction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    date = models.DateTimeField(auto_now_add=True)\n    description = models.TextField()\n    category = models.CharField(max_length=100)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n\n    # ... other properties and methods"}, {"file": "homepage/views.py", "path": "apps/homepage/views.py", "code": "from django.shortcuts import render\n\ndef homepage_view(request):\n    return render(request, 'homepage/index.html')"}, {"file": "reports_and_charts/views.py", "path": "apps/reports_and_charts/views.py", "code": "from django.shortcuts import render\n\ndef reports_and_charts_view(request):\n    return render(request, 'reports_and_charts/index.html')"}, {"file": "dashboard/views.py", "path": "apps/dashboard/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import Transaction\n\ndef transaction_list_view(request):\n    transactions = Transaction.objects.all()\n    return render(request, 'dashboard/transaction_list.html', context={'transactions': transactions})\n"}, {"file": "templates/homepage/index.html", "path": "templates/homepage/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Homepage</title>\n    <link rel=\"stylesheet\" href=\"style.css\"> \n</head>\n<body>\n    <h1>Welcome to the Homepage!</h1>\n    <p>This is where you will find general information about our application.</p>\n    <a href=\"/dashboard/\">Go to Dashboard</a>\n</body>\n\n</html>"}, {"file": "style.css", "path": "static/css/style.css", "code": ""}], "8": [{"file": "calendar/templates/calendar.html", "path": "apps/calendar/templates/calendar.html", "code": "<!-- Calendar View Template -->\n<div id=\"calendar-container\" class=\"calendar-container\">\n    </div>\n<script src=\"static/js/calendar.js\"></script>"}, {"file": "settings_app/templates/settings.html", "path": "apps/settings/templates/settings.html", "code": "<!-- Settings View Template -->\n<h1>Calendar Settings</h1>\n<form id=\"settings-form\" class=\"settings-form\">\n    <div>\n        <label for=\"notifications\">Notifications:</label>\n        <select id=\"notifications\" name=\"notifications\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"monthly\">Monthly</option>\n        </select>\n    </div>\n    <button type=\"submit\" class=\"save-button\">Save Changes</button>\n</form>"}, {"file": "event_app/views.py", "path": "apps/event_app/views.py", "code": "# Event View Functions\nfrom django.shortcuts import render, redirect, get_object_or_404\nfrom .models import Event\nfrom .forms import EventForm\ndef event_list(request):\n    events = Event.objects.all()\n    return render(request, 'event_app/event_list.html', {'events': events})\ndef create_event(request):\nif request.method == 'POST':\n    form = EventForm(request.POST)\n    if form.is_valid():\n        form.save()\n        return redirect('calendar_view')\nelse:\n    form = EventForm()\n    return render(request, 'event_app/create_event.html', {'form': form})\ndef update_event(request, event_id):\nevent = get_object_or_404(Event, pk=event_id)\nif request.method == 'POST':\n    form = EventForm(request.POST, instance=event)\n    if form.is_valid():\n        form.save()\n        return redirect('calendar_view')\nelse:\n    form = EventForm(instance=event)\n    return render(request, 'event_app/update_event.html', {'form': form})\ndef delete_event(request, event_id):\nevent = get_object_or_404(Event, pk=event_id)\nevent.delete()\nreturn redirect('calendar_view')"}, {"file": "calendar_app/models.py", "path": "apps/calendar_app/models.py", "code": "# This file defines the Calendar Model in Django.\nfrom django.db import models\nclass Event(models.Model):\n    title = models.CharField(max_length=200)\ndate = models.DateField()\n    time = models.TimeField()\ndescription = models.TextField()\n"}, {"file": "settings_app/views.py", "path": "apps/settings_app/views.py", "code": "# This file defines the Settings Page Views in Django\ndef account_management(request):\n    pass\ndef notifications_settings(request):\n    # Logic for user notification settings\n    pass\ndef change_calendar_preferences(request):\n    # Logic for calendar settings changes\n    pass\ndef sync_to_device(request):\n    pass\ndef privacy_settings(request):\n    pass"}, {"file": "event_app/forms.py", "path": "apps/event_app/forms.py", "code": "# The forms.py file defines the Django form for creating, updating events\nfrom django import forms\nfrom .models import Event\nclass EventForm(forms.ModelForm):\n    title = forms.CharField(max_length=200)\ndate = forms.DateField()\n    time = forms.TimeField()\ndescription = forms.TextField()\n    class Meta:\n        model = Event\n        fields = ['__all__']"}, {"file": "calendar_app/urls.py", "path": "apps/calendar_app/urls.py", "code": "# Defines the URL patterns for the Calendar app\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.event_list, name='calendar_view'),\n    path('create/', views.create_event, name='create_event'),\n    path('<int:event_id>/update/', views.update_event, name='update_event'),\n    path('<int:event_id>/delete/', views.delete_event, name='delete_event'),\n]"}, {"file": "django.urls", "path": "", "code": "from django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [ \n    path('admin/', admin.site.urls),\n    path('', include('calendar_app.urls')),\n]"}, {"file": "templates/base.html", "path": "", "code": "<html>\n<head>\n  <title>Calendar App</title>\n</head>\n<body>\n  <h1>Welcome to the Calendar App</h1>\n  <nav>\n    <a href=\"/\">Home</a>\n    <a href=\"/settings\">Settings</a>\n  </nav>\n  {% block content %}{% endblock%}\n</body>\n</html> "}], "9": [{"file": "example_app/templates/homepage.html", "path": "example_app/templates/homepage.html", "code": "<!DOCTYPE html>\n<html>\n\n    <head>\n        <title>Chatbot Homepage</title>\n        <!-- ... your CSS imports ... -->\n    </head>\n\n    <body>\n        <h1 id=\"homepage-title\" class=\"section-header\">Welcome to the Chatbot!</h1>\n \t   <!-- Page content goes here --> \n    </body>\n\n</html"}, {"file": "example_app/templates/features.html", "path": "example_app/templates/features.html", "code": "<!DOCTYPE html>\n<html>\n\n    <head>\n        <title>Chatbot Features</title>\n        <!-- ... your CSS imports ... -->\n    </head>\n\n    <body>\n        <h1 id=\"features-title\" class=\"section-header\">Chatbot Features</h1>\n \t   <!-- Page content goes here --> \n    </body>\n\n</html"}, {"file": "example_app/templates/demo.html", "path": "example_app/templates/demo.html", "code": "<!DOCTYPE html>\n<html>\n\n    <head>\n        <title>Chatbot Demo</title>\n        <!-- ... your CSS imports ... -->\n    </head>\n\n    <body>\n        <h1 id=\"demo-title\" class=\"section-header\">Chatbot Demo</h1>\n \t   <!-- Page content goes here --> \n    </body>\n\n</html"}, {"file": "example_app/templates/testimonials.html", "path": "example_app/templates/testimonials.html", "code": "<!DOCTYPE html>\n<html>\n\n    <head>\n        <title>Chatbot Testimonials</title>\n        <!-- ... your CSS imports ... -->\n    </head>\n\n    <body>\n        <h1 id=\"testimonials-title\" class=\"section-header\">Chatbot Testimonials</h1>\n \t   <!-- Page content goes here --> \n    </body>\n\n</html"}, {"file": "example_app/templates/faq.html", "path": "example_app/templates/faq.html", "code": "<!DOCTYPE html>\n<html>\n\n    <head>\n        <title>Chatbot FAQ</title>\n        <!-- ... your CSS imports ... -->\n    </head>\n\n    <body>\n        <h1 id=\"faq-title\" class=\"section-header\">Chatbot FAQs</h1>\n \t   <!-- Page content goes here --> \n    </body>\n\n</html"}, {"file": "example_app/views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef homepage(request):\n    return render(request, 'homepage.html')\ndef features(request):\n    return render(request, 'features.html')\ndef demo(request):\n    return render(request, 'demo.html')\ndef testimonials(request):\n    return render(request, 'testimonials.html')\ndef faq(request):\n    return render(request, 'faq.html')"}], "10": [{"file": "login.py", "path": "/myapp/views.py", "code": "from django.shortcuts import render\n from .models import User\n def login(request):\n     return render(request, 'login.html')\ndef signup(request):\n     return render(request, 'signup.html')"}, {"file": "dashboard.py", "path": "/myapp/views.py", "code": "from django.shortcuts import render\n def dashboard(request):\n     return render(request, 'dashboard.html')"}, {"file": "analysis_charts.py", "path": "/myapp/views.py", "code": " from django.shortcuts import render\ndef analysis_charts(request):\n     return render(request, 'analysis_charts.html')"}, {"file": "settings.py", "path": "/myapp/views.py", "code": "from django.shortcuts import render\ndef settings(request):\n     return render(request, 'settings.html')"}, {"file": "myapp/models.py", "code": " from django.db import models\nclass User(models.Model):\n    username = models.CharField(max_length=100)\n    email = models.EmailField()\n    password = models.CharField(max_length=255)\n def __str__(self):\n        return self.username"}, {"file": "templates/login.html", "description": "Login page template"}, {"file": "templates/signup.html", "description": "Sign up page template"}, {"file": "templates/dashboard.html", "description": "Dashboard page template"}, {"file": "templates/analysis_charts.html", "description": "Analysis and Charts page template"}, {"file": "templates/settings.html", "description": "Settings page template"}], "12": [{"file": "employee/models.py", "path": "app/employee/models.py", "code": "from django.db import models\n\nclass TravelExpense(models.Model):\n    \"# Fields for travel expense claim\"\n    \"id = models.AutoField(primary_key=True)\"\n    departure_location = models.CharField(max_length=255)\n    arrival_location = models.CharField(max_length=255)\n    purpose = models.CharField(max_length=255)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    submitted_date = models.DateTimeField(auto_now_add=True)\n    approved = models.BooleanField(default=False)\n\nclass LaborExpense(models.Model):\n    \"# Fields for labor expense claim\"\n    \"id = models.AutoField(primary_key=True)\"\n    employee = models.ForeignKey('Employee', on_delete=models.CASCADE)\n    task = models.CharField(max_length=255)\n    hours_worked = models.DecimalField(max_digits=5, decimal_places=2)\n    hourly_rate = models.DecimalField(max_digits=8, decimal_places=2)\n    total_amount = models.DecimalField(max_digits=10, decimal_places=2)\n    submitted_date = models.DateTimeField(auto_now_add=True)\n    approved = models.BooleanField(default=False)\n\nclass ManagementExpense(models.Model):\n    \"# Fields for management expense claim\"\n    \"id = models.AutoField(primary_key=True)\"\n    description = models.TextField()\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    submitted_date = models.DateTimeField(auto_now_add=True)\n    approved = models.BooleanField(default=False)\n\nclass EquipmentExpense(models.Model):\n    \"# Fields for equipment expense claim\"\n    \"id = models.AutoField(primary_key=True)\"\n    equipment_type = models.CharField(max_length=255)\n    description = models.TextField()\n    cost = models.DecimalField(max_digits=10, decimal_places=2)\n    submitted_date = models.DateTimeField(auto_now_add=True)\n    approved = models.BooleanField(default=False)"}, {"file": "employee/views.py", "path": "app/employee/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import TravelExpense, LaborExpense, ManagementExpense, EquipmentExpense\nfrom django.contrib.auth.decorators import login_required\ndef submit_travel_expense(request):\n    if request.method == 'POST':\n        # Process the form data and create a new TravelExpense object\n        \"\"\"\n        \"\"\"\n        return redirect('employee_dashboard')\n    else:\n        return render(request, 'employee/submit_travel_expense.html')\ndef submit_labor_expense(request):\n    if request.method == 'POST':\n        # Process the form data and create a new LaborExpense object\n         \"\"\"\n        \"\"\"\n        return redirect('employee_dashboard')\n    else:\n        return render(request, 'employee/submit_labor_expense.html')\ndef submit_management_expense(request):\n    if request.method == 'POST':\n        # Process the form data and create a new ManagementExpense object\n         \"\"\"\n        \"\"\"\n        return redirect('employee_dashboard')\n    else:\n        return render(request, 'employee/submit_management_expense.html')\ndef submit_equipment_expense(request):\n    if request.method == 'POST':\n        # Process the form data and create a new EquipmentExpense object\n         \"\"\"\n        \"\"\"\n        return redirect('employee_dashboard')\n    else:\n        return render(request, 'employee/submit_equipment_expense.html')\ndef track_claim_status(request):\n    # Provide claim status tracking view\n    expenses = TravelExpense.objects.all()\n    context = {'expenses': expenses}\n    return render(request, 'employee/track_expense_status.html', context)\n\n@login_required\ndef dashboard(request):\n    return render(request,'employee/employee_dashboard.html')"}, {"file": "employee/templates/employee_dashboard.html", "path": "app/templates/employee/employee_dashboard.html", "code": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Employee Dashboard</title>\n</head>\n<body>\n    <h1>Welcome to the Employee Dashboard</h1>\n    <ul>\n        <li><a href=\"{{ url_for('submit_travel_expense') }}\">Submit Travel Expense Claim</a></li>\n        <li><a href=\"{{ url_for('submit_labor_expense') }}\">Submit Labor Expense Claim</a></li>\n        <li><a href=\"{{ url_for('submit_management_expense') }}\">Submit Management Expense Claim</a></li>\n        <li><a href=\"{{ url_for('submit_equipment_expense') }}\">Submit Equipment Expense Claim</a></li>\n        <li><a href=\"{{ url_for('track_claim_status') }}\">Track Expense Claim Status</a></li>\n    </ul>\n</body>\n</html>"}, {"file": "employee/templates/submit_travel_expense.html", "path": "app/templates/employee/submit_travel_expense.html", "code": "\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Submit Travel Expense Claim</title>\n</head>\n<body>\n    <h1>Submit Travel Expense Claim</h1>\n    <form method=\"post\">\n        {% csrf_token %}\n        <label for=\"departure_location\">Departure Location:</label><br>\n        <input type=\"text\" id=\"departure_location\" name=\"departure_location\">\n        <br>\n        <label for=\"arrival_location\">Arrival Location:</label><br>\n        <input type=\"text\" id=\"arrival_location\" name=\"arrival_location\">\n        <br>\n        <label for=\"purpose\">Purpose:</label><br>\n        <input type=\"text\" id=\"purpose\" name=\"purpose\">\n        <br>\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>"}, {"file": "employee/templates/track_expense_status.html", "path": "app/templates/employee/track_expense_status.html", "code": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Track Expense Claim Status</title>\n</head>\n<body>\n    <h1>Track Your Expense Claims</h1>\n    <!--  Display expense claims here -->\n    <ul>\n        {% for expense in expenses %}\n            <li>{{ expense.expense_id }} - {{ expense.creation_date }} - Status: {{ expense.status }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "admin.py", "path": "app/admin.py", "code": "# -*- coding: utf-8 -*-\n from django.contrib import admin\nfrom .models import TravelExpense, LaborExpense, ManagementExpense, EquipmentExpense\n\nadmin.site.register(TravelExpense)\n admin.site.register(LaborExpense)\na dmin.site.register(ManagementExpense)\nadmin.site.register(EquipmentExpense)"}, {"file": "urls.py", "path": "app/urls.py", "code": "# -*- coding: utf-8 -*-\nfrom django.urls import path\nfrom . import views\n\napp_name = 'employee'\nurlpatterns = [\n    path('', views.dashboard, name='dashboard'),\n    path('submit_travel_expense/', views.submit_travel_expense, name='submit_travel_expense'),\n    path('submit_labor_expense/', views.submit_labor_expense, name='submit_labor_expense'),\n    path('submit_management_expense/', views.submit_management_expense, name='submit_management_expense'),\n    path('submit_equipment_expense/', views.submit_equipment_expense, name='submit_equipment_expense'),\n    path('track_claim_status/', views.track_claim_status, name='track_claim_status'),\n]"}, {"file": "settings.py", "path": "app/settings.py", "code": "# -*- coding: utf-8 -*-\nimport os\n\ndef basepath():\n    return os.path.dirname(os.path.abspath(__file__))"}], "13": [{"file": "customer_profile_app/models.py", "path": "somepath/somedir/customer_profile_app/models.py", "code": "from django.db import models\n\nclass Customer(models.Model):\n    id = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=255)\n    birthday = models.DateField()\n    age = models.IntegerField()\n    sex = models.CharField(max_length=10)\n    company = models.CharField(max_length=255, blank=True)\n    phone_number = models.CharField(max_length=20)\n    # ... other customer attributes\n\nclass PreferredProduct(models.Model):\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    product = models.ForeignKey(..., on_delete=models.CASCADE)\n    # ... additional fields as needed"}, {"file": "customer_profile_app/views.py", "path": "somepath/somedir/customer_profile_app/views.py", "code": "# This example illustrates a basic 'view' implementation... \nfrom django.shortcuts import render, redirect\nfrom .models import Customer, PreferredProduct # Import models if needed\n    \ndef view_current_customer(request):\n    # ... Handle retrieving the current customer based on login or session\n    customer = Customer(...)\n    context = {'customer': customer}\n    return render(request, 'customer_profile.html', context)"}, {"file": "customer_profile_app/templates/customer_profile.html", "path": "somepath/somedir/customer_profile_app/templates/customer_profile.html", "description": "<div class=\"container\">\n    <h1>Customer Profile</h1>\n    <p>Name: {{ customer.name }}</p>\n    <p>Birthday: {{ customer.birthday }}</p>\n    <p>Age: {{ customer.age }}</p>\n    <!-- ... Add more profile details here -->\n</div>"}, {"file": "productcatalog_app/models.py", "path": "somepath/somedir/productcatalog_app/models.py", "code": "from django.db import models\n\nclass Product(models.Model):\n    id = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=255)\n    category = models.CharField(max_length=100)\n    # ... other product attributes (price, description, images, etc.)"}, {"file": "productcatalog_app/views.py", "path": "somepath/somedir/productcatalog_app/views.py", "code": "# Example view to display all products\nfrom django.shortcuts import render\nfrom .models import Product\n    \ndef product_list(request):\n    products = Product.objects.all()\n    context = {'products': products}\n    return render(request, 'productcatalog/product_list.html', context)"}, {"file": "productcatalog_app/templates/productcatalog/product_list.html", "path": "somepath/somedir/productcatalog_app/templates/productcatalog/product_list.html", "description": "<ul>\n    {% for product in products %}\n      <li><a href=\"{{product.id}}\">{{product.name}}</a> - {{product.category}}</li>\n    {% endfor %}\n</ul>"}, {"file": "myapp/urls.py", "path": "somepath/somedir/myapp/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('customer_profile_app.urls')),  # Include app-specific URLs\n    path('products/', include('productcatalog_app.urls')), # ... similar for other apps\n    path('', include('purchasehistory_app.urls'))\n]"}, {"file": "settings.py", "path": "somepath/settings.py", "description": "#  Your Django project's settings file \nINSTALLED_APPS = [\n    # ... other apps\n    'customer_profile_app',\n    'productcatalog_app',\n ]"}], "16": [{"file": "index.html", "path": "app/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Subject Data Management</title>\n  <!-- Add external CSS or styles here -->\n</head>\n<body>\n    <h1>Subject Data Manager</h1>\n    <div id=\"fileUploadContainer\" class=\"container\">\n        <h2>Upload Excel File</h2>\n        <input type=\"file\" id=\"excelFileInput\" accept=\".xlsx,.xls\"> <br><br>\n        <button id=\"uploadButton\">Upload File</button>\n    </div>\n    <div id=\"outputContainer\" class=\"hidden\">\n        <h2>Subject List</h2>\n        <table id=\"subjectTable\"></table>\n    </div>\n  <!-- Add JavaScript file inclusion here -->\n</body>\n</html>"}, {"file": "script.js", "path": "app/static/js/script.js", "code": "// Add JavaScript logic for file upload handling,\n// processing data, and updating the UI below.\nconst uploadButton = document.getElementById(\"uploadButton\");\nconst excelFileInput = document.getElementById(\"excelFileInput\");\nconst outputContainer = document.getElementById(\"outputContainer\");\nconst subjectTable = document.getElementById(\"subjectTable\");\n\nexcelFileInput.addEventListener('change', function(event) {\n  // Process uploaded file and update the UI accordingly.\n} );\n\nuploadButton.addEventListener('click', function() {\n  // Trigger upload process here.\n});"}, {"file": "app.py", "path": "app/app.py", "code": "# App for Subject Data Management\nfrom flask import Flask, render_template, request, send_from_directory\nimport os \nfrom functions import read_subject_list, organize_subjects, export_to_excel,\n\napp = Flask(__name__) \n\napp.static_folder = 'static'  # Set static folder path for Flask app\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/upload', methods=['POST'])\ndef upload_file():\n    if 'excelFile' not in request.files:\n        return 'No file part'\n    file = request.files['excelFile']  \nif file.filename == '' :\n        return 'No selected file'\n    if file: \n        \n      # Call your function here to read Excel data from the uploaded file.\n      data =\n      read_subject_list(file)\n      organized_data =\n organize_subjects(data)\n      # Save or process the organized data as needed."}], "17": [{"file": "DataInput.py", "path": "application/datainput.py", "code": "import pandas as pd\n\ndef upload_gamedata(file_path):\n    \"\"\"\n    Uploads game data from an Excel file.\n    \"\"\"\n    return pd.read_excel(file_path)\n\ndef specify_result_column(df, column_name):\n    \"\"\"\n    Sets the 'result' column in the dataframe.\n    \"\"\"\n    df['result'] = df[column_name]\n    return df\n\ndef lag_period_selection(df, lag_periods):\n    \"\"\"\n    Creates lagged variables for the 'result' column.\n    \"\"\"\n    for i in range(lag_periods):\n        df[f'lag_{i+1}'] = df['result'].shift(i + 1)\n    return df\n\ndef identify_independent_variables(df, variable_columns):\n    \"\"\"\n    Selects the independent variables.\n    \"\"\"\n    df.drop(columns=variable_columns, inplace=True)\n    return df"}, {"file": "ModelTraining.py", "path": "application/modeltraining.py", "code": "import pandas as pd from sklearn.linear_model import LogisticRegression \ndef train_logistic_model(X, y):\n    \"\"\"\n    Trains a logistic regression model.\n    \"\"\"\n    model = LogisticRegression()\n    model.fit(X, y)\n    return model"}, {"file": "OutputAndSummary.py", "path": "application/outputandsummary.py", "code": "import pandas as pd \ndef generate_logistic_regression_report(model):\n    \"\"\"\n    Generates a logistic regression report.\n    \"\"\"\n    # Generate coefficients, accuracy metrics, significance levels, etc.\n   \ndef save_model_output_to_xlsx(model_summary, output_file):\n    \"\"\"\n    Saves the model summary to an Excel file.\n    \"\"\"\n    # Save model summary to output_file"}, {"file": "Logistic.xlsx", "path": "report/Logistic.xlsx", "description": "Output of the logistic regression training"}]}