{"2": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom example_app.views import ConvertCurrencyView, ExchangeRateTrendsView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', ConvertCurrencyView.as_view(), name='home'),\n    path('trends/', ExchangeRateTrendsView.as_view(), name='exchange_rate_trends'),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\napplication = get_wsgi_application()\n"}, {"file": "template/home.html", "path": "example_app/templates/home.html", "code": "<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <h1>Welcome to the Home Page</h1>\n    <p><a href=\"/trends/\">View Exchange Rates Trends</a></p>\n</body>\n</html>\n"}, {"file": "template/trends.html", "path": "example_app/templates/trends.html", "code": "<html>\n<head>\n    <title>Exchange Rate Trends</title>\n</head>\n<body>\n    <h1>Exchange Rates Trends</h1>\n    <p>This section will display the exchange rate trends.</p>\n</body>\n</html>\n"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef trends(request):\n    return render(request, 'trends.html')\n"}], "6": [{"file": "manage.py", "path": "", "code": "#!/usr/bin/env python\nimport os\nfrom django.core.management import execute_from_command_line\n\nif __name__ == '__main__':\nexecute_from_command_line(os.sys.argv)\n"}, {"file": "project/urls.py", "path": "", "code": "from django.urls import path, include\nfrom django.contrib import admin\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n    ]+\nstatic(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\n"}, {"file": "project/wsgi.py", "path": "", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\napplication = get_wsgi_application()\n"}, {"file": "example_app/models.py", "path": "example_app/", "code": "from django.db import models\n\nclass Todo(models.Model):\n    title = models.CharField(max_length=200)\n    completed = models.BooleanField(default=False)\n"}, {"file": "example_app/views.py", "path": "example_app/", "code": "from django.shortcuts import render, redirect\nfrom .models import Todo\n\ndef todo_list(request):\n    todos = Todo.objects.all()\n    return render(request, 'list.html', {'todos': todos})\ndef add_todo(request):\n    if request.method == 'POST':\n        title = request.POST['title']\n        Todo.objects.create(title=title)\n        return redirect('todo_list')\n    return render(request, 'add.html')\ndef complete_todo(request, pk):\n    todo = Todo.objects.get(pk=pk)\n    todo.completed = True\n    todo.save()\n    return redirect('todo_list')"}, {"file": "example_app/urls.py", "path": "example_app/", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.todo_list, name='todo_list'),\n    path('add/', views.add_todo, name='add_todo'),\n    path('<int:pk>/complete/', views.complete_todo, name='complete_todo'),\n]\n"}, {"file": "templates/list.html", "path": "example_app/templates/", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Todo List</title>\n</head>\n<body>\n    <h1>Your Todo List</h1>\n    <a href=\"{{url 'add_todo'}}\">Add new todo</a>\n    <ul>\n        {% for todo in todos %}\n            <li id=\"todo_{{forloop.counter}}\">\n                <strong>{{ todo.title }}</strong>\n                {% if todo.completed %}\n                    <span style=\"text-decoration:line-through\">Completed</span>\n                {% endif %}\n                 \n            </li>\n        {% endfor %}\n    </ul>\n</body>\n</html>\n"}, {"file": "templates/add.html", "path": "example_app/templates/", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Add Todo</title>\n</head>\n<body>\n<h1>Add a new todo</h1>\n<form method=\"POST\">\n    {% csrf_token %}\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" name=\"title\" required>\n    <button type=\"submit\">Add</button>\n</form>\n</body>\n</html>\n"}], "9": [{"file": "asgi.py", "path": "example_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_asgi_application()"}, {"file": "db.sqlite3", "path": "example_project/db.sqlite3", "code": ""}, {"file": "manage.py", "path": "example_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nfrom django.core.management import execute_from_command_line\n\nif __name__ == '__main__':\nexecute_from_command_line(os.sys.argv)"}, {"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your-secret-key'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'"}, {"file": "templates/base.html", "path": "example_project/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>{% block title %}Django Project{% endblock %}</title>\n</head>\n<body>\n    <h1>Main Content</h1>\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()"}], "11": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nfrom pathlib import Path\n\ndef BASE_DIR():\n    return os.path.dirname(os.path.abspath(__file__)) \n  \ndef DEBUG = False\n\nALLOWED_HOSTS = []\n SECRET_KEY =\n\n# Database\nDATABASES = {\n    'default':{ \n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': str(BASE_DIR() / 'db.sqlite3')\n    }\n}\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app', # your app name\n]\n LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\n USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n STATIC_URL = '/static/\nSTATIC_ROOT = os.path.join(BASE_DIR(), 'staticfiles') \n MEDIA_URL = '/media/\nMEDIA_ROOT = os.path.join(BASE_DIR(), 'media') \n MIDDLEWARE =\n [\n     'django.middleware.security.SecurityMiddleware',\n     'django.contrib.sessions.middleware.SessionMiddleware',\n     'django.middleware.common.CommonMiddleware',\n     'django.middleware.csrf.CsrfViewMiddleware',\n     'django.contrib.auth.middleware.AuthenticationMiddleware',\n     'django.contrib.messages.middleware.MessageMiddleware', \n     'django.middleware.clickjacking.XFrameOptionsMiddleware',\n ]\n#  SOCIAL_AUTH_GOOGLE_OAUTH2_KEY =\n # SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET =\nWSGI_APPLICATION = 'example_project.wsgi.application'\n \ndef  use_cdn(urls):\n    for scheme in ['https','http']: \n         if f'{scheme}://{request.get_host()}' not in urls:\n                urls = list(filter(lambda url: url not in urls , urls))\n   return [f'//exampledomain.{yourdomain}.com/{url}' for url in urls]  \ndef  use_cdn(urls):\n    for scheme in ['https','http']: \n         if f'{scheme}://{request.get_host()}' not in urls:\n                urls = list(filter(lambda url: url not in urls , urls))\n   return [f'//exampledomain.{yourdomain}.com/{url}' for url in urls] "}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nfrom django.views.generic import TemplateView\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')), \n]  \ndef sitemap():\n   return HttpResponse('''\n       <h1>Sitemap</h1>\n        ''' )"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "templates/index.html", "path": "example_app/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Django App</title>\n</head>\n<body>\n<h1>Welcome to my Django app!</h1>\n</body>\n</html>"}], "15": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'example_app/static')]\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.urls import path, include\nfrom . import views\n\nurlpatterns = [\n    path('home/', views.home, name='home'),\n]\n"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')"}, {"file": "templates/home.html", "path": "example_app/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Home Page</title>\n</head>\n<body>\n    <h1>Hello, World!</h1>\n</body>\n</html>"}, {"file": "static/css/styles.css", "path": "example_app/static/css/styles.css", "code": "h1 {\n    color: blue;\n}"}], "17": [{"file": "17-stdanswer.py", "path": "logistic_regression/17-stdanswer.py", "code": "import os\nimport pandas as pd\nimport statsmodels.api as sm\n\n# File paths\ninput_file = \"Gamedata.xlsx\"\noutput_file = \"Logistic.xlsx\"\n\ndef read_and_validate_data(input_file):\n    df = pd.read_excel(input_file)\n    if df.isnull().values.any():\n        raise ValueError(\"Missing values found in the dataset.\")\n    for column in df.columns:\n        if not pd.to_numeric(df[column], errors=\"coerce\").notnull().all():\n            raise ValueError(f\"Column \"{column}\" is not numeric.\")\n    return df\n\ndef add_lagged_dependent_variable(data, target_column):\n    data[target_column + '_lag'] = data[target_column].shift(1)\n    data.dropna(inplace=True)\n    return data\n\ndef prepare_features_and_target(data, target_column, lagged_column):\n    X = data.drop([target_column, lagged_column], axis=1)\n    y = data[target_column]\n    return X, y\n\ndef build_logistic_model(X, y):\n    model = sm.Logit(y, X)\n    result = model.fit()\n    return result\n\ndef save_summary_to_excel(result, output_file):\n    result.summary().to_excel(output_file, index=False)\n\ndef main(input_file, output_file):\n    data = read_and_validate_data(input_file)\n    target_column = \"Decision\"\n    lagged_column = target_column + '_lag'\n    data = add_lagged_dependent_variable(data, target_column)\n    X, y = prepare_features_and_target(data, target_column, lagged_column)\n    result = build_logistic_model(X, y)\n    save_summary_to_excel(result, output_file)\n\nif __name__ == \"__main__\":\n    main(input_file, output_file)"}, {"file": "Gamedata.xlsx", "path": "logistic_regression/Gamedata.xlsx", "code": ""}], "20": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n\nLOGIN_URL = '/admin/login/'"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "blog/models.py", "path": "example_app/blog/models.py", "code": "from django.db import models\n from django.contrib.auth.models import User\nclass Post(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n\n    def __str__(self):\n      return self.title\n"}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.urls import path, include\n from . import views\nurlpatterns = [\n     path('', views.BlogListView.as_view(), name='post_list'),\n     path('<int:pk>/', views.PostDetailView.as_view(), name='post_detail'),\n     # Add your other URL patterns here ...\n ]"}, {"file": "views.py", "path": "example_app/blog/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import Post\n from django.views.generic import ListView, DetailView\n class BlogListView(ListView):\n    model = Post \n   # template_name = 'blog/post_list.html'  #\n\n class PostDetailView(DetailView):\n    model = Post\n"}, {"file": "templates/blog/post_list.html", "path": "example_app/templates/blog/post_list.html", "code": "<h1>My Blog Posts</h1>\n {% for post in posts %} \n<article>\n <h2><a href=\"{{ post.get_absolute_url }}\">{{ post.title }}</a></h2>\n <p>{{ post.content|truncatewords:30 }}...</p>\n</article>\n{% endfor %}"}]}