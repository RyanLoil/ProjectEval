{"8": [{"file": "settings.py", "path": "project_name/settings.py", "code": "\nimport os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'project_name.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'project_name.wsgi.application'\nASGI_APPLICATION = 'project_name.asgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "project_name/urls.py", "code": "\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "example_app/views.py", "path": "project_name/example_app/views.py", "code": "\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef index(request):\n    return render(request, 'index.html', {\n        'title': 'Calendar App',\n    })\n\ndef calendarview(request):\n    return render(request, 'calendar.html')\n"}, {"file": "example_app/urls.py", "path": "project_name/example_app/urls.py", "code": "\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('calendar', views.calendarview, name='calendar'),\n]\n"}, {"file": "templates/index.html", "path": "project_name/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>{% block title %}Calendar App{% endblock %}</title>\n</head>\n<body>\n<h1>Hello, from the Calendar App!</h1>\n<p>This is simply a basic example.</p>\n<a href=\"/calendar\">Go to Calendar</a>\n</body>\n</html>"}, {"file": "templates/calendar.html", "path": "project_name/templates/calendar.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Calendar</title>\n</head>\n<body>\n<h1>Calender View</h1>\n     \n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script> \n     \n<div id=\"calendar\"> \n    </div> \n  \n</body>\n</html>\n"}], "10": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = '/static/'\n\nLOGIN_URL = '/login/'"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n    # Add more URL patterns here for other views in example_app\n]\n"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'example_app/index.html')\n\ndef login(request):\n    return render(request, 'example_app/login.html')\n"}, {"file": "templates/example_app/index.html", "path": "example_app/templates/example_app/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Example App</title>\n</head>\n<body>\n    <h1>This is the Index page</h1>\n    <a href=\"/login\">Login</a>\n</body>\n</html>"}], "12": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) \n\n SECRET_KEY = 'your_secret_key_here'\n\n DEBUG = True\n\n ALLOWED_HOSTS = []\n\n INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\n MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\n ROOT_URLCONF = 'example_project.urls'\n\n TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n WSGI_APPLICATION = 'example_project.wsgi.application'\n\n DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n LANGUAGE_CODE = 'en-us'\n\n TIME_ZONE = 'UTC'\n\n USE_I18N = True\n\n USE_L10N = True\n\n USE_TZ = False\n\n STATIC_URL = '/static/'\n\n LOGIN_URL = '/login/' "}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\n urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\n os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "admin.py", "path": "example_app/admin.py", "code": "from django.contrib import admin\n from .models import  Claim\n\n admin.site.register(Claim)"}, {"file": "models.py", "path": "example_app/models.py", "code": "from django.db import models\n\n class Claim(models.Model):\n     title = models.CharField(max_length=200)\n     description = models.TextField()\n     status = models.CharField(max_length=10, choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')],\n                          default='pending')\n  \n     created_at = models.DateTimeField(auto_now_add=True)\n     updated_at = models.DateTimeField(auto_now=True)\n\n     def __str__(self):\n         return self.title"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render, redirect\n from .models import Claim\n def claim_list(request):\n     claims = Claim.objects.all()\n     return render(request, 'claim_list.html', {'claims': claims})\n\ndef claim_detail(request, pk):\n     claim = Claim.objects.get(pk=pk)\n     return render(request, 'claim_detail.html', {'claim': claim})\n def create_claim(request):\n    if request.method == 'POST':\n        title = request.POST.get('title')\n        description = request.POST.get('description')\n        Claim.objects.create(title=title, description=description)\n        return redirect('claim_list')\n    else:\n       return render(request, 'create_claim.html')\n"}, {"file": "templates/claim_list.html", "path": "example_app/templates/claim_list.html", "code": "<h1>Claims List</h1>\n<ul>\n{% for claim in claims %}\n    <li><a href=\"{{ claim.get_absolute_url }}\">{{ claim.title }}</a></li>\n{% endfor %}\n</ul>"}, {"file": "templates/claim_detail_html", "path": "example_app/templates/claim_detail.html", "code": "<h1>{{ claim.title }}</h1>\n<p>{{ claim.description }}</p><br/>\nStatus: {{ claim.status}}"}], "15": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'example_app/static')]\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_app/urls.py", "code": "# example_app/urls.py\nfrom django.urls import path\n#\ndef index(request):\n#    return HttpResponse('Hello there!')\n\nurlpatterns = [\n    path('', include('apps.home.urls')),\n]\n"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "models.py", "path": "example_app/models.py", "code": "from django.db import models\n\nclass Task(models.Model):\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n    completed = models.BooleanField(default=False)\n\ndef __str__(self):\n     return self.title\n"}, {"file": "views.py", "path": "example_app/views.py", "code": "# example_app/views.py\nfrom django.http import HttpResponse\nfrom .models import Task\nfrom django.shortcuts import render\n\ndef index(request):\n    tasks = Task.objects.all()\n    return render(request, 'example_app/index.html', {'tasks': tasks})\n\ndef detail(request, task_id):\n    task = Task.objects.get(pk=task_id)\n    return render(request, 'example_app/detail.html', {'task': task})\n"}, {"file": "templates/example_app/index.html", "path": "example_app/templates/example_app/index.html", "code": "<h1>Tasks</h1>\n<ul>\n    {% for task in tasks %}\n    <li><a href=\"{{ task.get_absolute_url }}\">{{ task.title }}</a></li>\n    {% endfor %}\n</ul>"}, {"file": "templates/example_app/detail.html", "path": "example_app/templates/example_app/detail.html", "code": "<h1>{{ task.title }}</h1>\n<p>{{ task.description }}</p>\n<p>Completed: {{ task.completed }}</p>"}, {"file": "__init__.py", "path": "apps/home/__init__.py", "code": ""}], "17": [{"file": "17-stdanswer.py", "path": "logistic_regression/17-stdanswer.py", "code": "import os\nimport pandas as pd\nimport statsmodels.api as sm\n\n# File paths\ninput_file = \"Gamedata.xlsx\"\noutput_file = \"Logistic.xlsx\"\n\ndef read_and_validate_data(input_file):\n    df = pd.read_excel(input_file)\n    if df.isnull().values.any():\n        raise ValueError('Dataset contains missing values.')\n    for col in df.columns:\n        if not pd.api.types.is_numeric_dtype(df[col]):\n            raise ValueError(f'Column {col} is not numeric.')\n    return df\n\ndef add_lagged_dependent_variable(data, target_column):\n    lag = data.shift(1).copy()\n    # Rename lagged column for clarity\n    lag.rename(columns={target_column: f'{target_column}_lag'}, inplace=True)\n    data = pd.concat([data, lag], axis=1)\n    data.dropna(inplace=True)\n    return data\n\ndef prepare_features_and_target(data, target_column, lagged_column):\n    X = data.drop([target_column, lagged_column], axis=1)\n    y = data[target_column]\n    return X, y\n\ndef build_logistic_model(X, y):\n    model = sm.Logit(y, X).fit()\n    return model\n\ndef save_summary_to_excel(result, output_file):\n    with pd.ExcelWriter(output_file) as writer:\n        result.summary().to_excel(writer, sheet_name='LogisticRegressionSummary', index=False)\n\ndef main(input_file, output_file):\n    data = read_and_validate_data(input_file)\n    target_column = 'Win' # Replace with your actual target column name\n    lagged_dependent_variable = add_lagged_dependent_variable(data, target_column)\n    X, y = prepare_features_and_target(lagged_dependent_variable, target_column, f'{target_column}_lag')\n    model = build_logistic_model(X, y)\n    save_summary_to_excel(model, output_file)\n\nif __name__ == \"__main__\":\n    main(input_file, output_file)"}], "20": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n\nLOGIN_URL = '/admin/login/'"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "templates/blog/post_list.html", "path": "example_app/templates/blog/post_list.html", "code": "<html>\n<head>\n  <title>Blog Posts</title>\n</head>\n<body>\n<h1>Blog Posts</h1>\n\n<table>\n    <tr>\n        <th>Title</th>\n        <th>Author</th>\n        <th>Date</th>\n    </tr>\n    {% for post in posts %}\n      <tr>\n          <td><a href=\"{{post.get_absolute_url}}\">{{post.title}}</a></td>\n          <td>{{post.author}}</td>\n          <td>{{post.created_date}}</td>\n      </tr>\n    {% endfor %}\n</table>\n</body>\n</html>\n"}, {"file": "models.py", "path": "example_app/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Post(models.Model):\n  title = models.CharField(max_length=200)\n  content = models.TextField()\n  created_date = models.DateTimeField(auto_now_add=True)\n  author = models.ForeignKey(User, on_delete=models.CASCADE)\n\n  def __str__(self):\n    return self.title\n"}, {"file": "admin.py", "path": "example_app/admin.py", "code": "from django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import BlogPost\n\ndef blog_post_list(request):\n  posts = BlogPost.objects.all()\n  return render(request, 'blog/post_list.html', {'posts': posts})\n\ndif blog_post_detail(request, pk):\n  post = get_object_or_404(BlogPost, pk=pk)\n  return render(request, 'blog/blog_post_detail.html', {'post': post})"}]}