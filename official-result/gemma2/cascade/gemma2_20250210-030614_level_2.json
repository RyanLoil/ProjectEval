{"1": [{"file": "template_app/templates/homepagea.html", "path": "/template_app/templates/homepagea.html", "code": "<html><body>\n    <h1 id=\"title\" class=\"heading\">BMI Calculator</h1>\n    <p id=\"welcome-message\" class=\"content\">Welcome to the BMI calculator!</p>\n    <a href=\"/bmicalculator\" id=\"calculate-btn\" class=\"link\">Calculate Your BMI</a>\n</body></html"}, {"file": "template_app/templates/bmicalculatorpage.html", "path": "/template_app/templates/bmicalculatorpage.html", "code": "<html><body>\n    <h1 id=\"title\" class=\"heading\">BMI Calculator</h1>\n    <form action=\"/calculatebmi\" method=\"POST\">\n        <label for=\"height\" id=\"height-label\" class=\"label\">Height (cm/inches):</label>\n        <input type=\"number\" name=\"height\" id=\"height\" class=\"input\">\n        <br>\n        <label for=\"weight\" id=\"weight-label\" class=\"label\">Weight (kg/lbs):</label>\n        <input type=\"number\" name=\"weight\" id=\"weight\" class=\"input\">\n        <br>\n        <button type=\"submit\" id=\"calculate-btn\" class=\"button\">Calculate BMI</button>\n    </form>\n    <p id=\"bmi-result\" class=\"result\">Your calculated BMI:  (placeholder)</p>\n    <p id=\"bmi-category\" class=\"result\">BMI Category: (placeholder)</p>\n    <a href=\"/\" id=\"back-btn\" class=\"link\">Go back to homepage</a>\n</body></html"}, {"file": "template_app/views.py", "path": "/template_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'homepagea.html')\n\ndef bmicalculator(request):\nif request.method == 'POST':\n        height = float(request.POST['height'])\n        weight = float(request.POST['weight'])\n        # Calculate BMI here\n        bmi_result = bmi_calculation(height, weight)\n        bmi_category = bmi_interpretation(bmi_result)\n        return render(request, 'bmicalculatorpage.html', {'bmi_result': bmi_result, 'bmi_category': bmi_category})\nelse:\n        return render(request, 'bmicalculatorpage.html')\ndef calculate_bmi(height, weight):\n    return round((weight / height ** 2), 2)\ndef bmi_interpretation(bmi):\n   # Implement BMI category interpretation logic here,\nexample: \nif bmi < 18.5:\n        return 'Underweight'\nelse:\n    if bmi >= 18.5 and bmi < 25:\n        return 'Normal Weight'\nelse\n    if bmi >= 25 and bmi < 30:\n        return 'Overweight'\nelse:\n        return 'Obese'"}, {"file": "template_app/urls.py", "path": "/template_app/urls.py", "code": "# URL patterns for Template App\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('bmicalculator/', views.bmicalculator, name='bmicalculator'),\n]\n"}], "5": [{"file": "home/views.py", "path": "somepath/somedir/home/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n  return render(request, 'home/index.html')\n\ndef about(request):\n  return render(request, 'about/about.html')\n\ndef convert(request):\n  return render(request, 'convert/convert.html')"}, {"file": "convert/views.py", "path": "somepath/somedir/convert/views.py", "code": "from django.shortcuts import render\nfrom markdown2 import Markdown\n\ndef convert(request):\n    if request.method == 'POST':\n        markdown_text = request.POST['markdown_input']\n        converter = Markdown()\n        html_output = converter.convert(markdown_text)\n        return render(request, 'convert/convert.html', {'html_output': html_output})\n    else:\n        return render(request, 'convert/convert.html')"}, {"file": "about/views.py", "path": "somepath/somedir/about/views.py", "code": "from django.shortcuts import render\n\ndef about_us(request):\n    return render(request, 'about/about.html')"}, {"file": "templates/home/index.html", "path": "somepath/somedir/templates/home/index.html", "code": "<html>\n<head>\n  <title>Home Page</title>\n</head>\n<body>\n  <h1>Welcome to our website!</h1>\n  <p>This is the home page.</p>\n</body>\n</html>"}, {"file": "templates/convert/convert.html", "path": "somepath/somedir/templates/convert/convert.html", "code": "<html>\n<head>\n  <title>Convert Page</title>\n</head>\n<body>\n  <h1>Markdown Converter</h1>\n  <form method='POST'>\n    {% csrf_token %}\n    <textarea id='markdown_input' name='markdown_input'></textarea><br>\n    <button type='submit'>Convert</button>\n  </form>\n  <div id='output'>\n    {% if html_output %}\n      <h2>HTML Output:</h2>\n      <pre>{{ html_output }}</pre>\n    {% endif %}\n  </div>\n</body>\n</html>"}, {"file": "templates/about/about.html", "path": "somepath/somedir/templates/about/about.html", "code": "<html>\n<head>\n  <title>About Page</title>\n</head>\n<body>\n  <h1>About Us</h1>\n  <p>This is the about page.</p>\n</body>\n</html>"}, {"file": "settings.py", "path": "somepath/somedir/settings.py", "code": "DEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS =[\n    'convert',\n    # ... other apps\n]\n\nROOT_URLCONF = 'your_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            os.path.join(BASE_DIR, 'templates'),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                # ... other context processors\n            ],\n        },\n    },\n]\nWSGI_APPLICATION = 'your_project.wsgi.application'"}, {"file": "/example_app/urls.py", "path": "somepath/somedir/example_app/urls.py", "code": "from django.urls import path\nfrom . import views\nurlpatterns = [\n    path('home/', views.home, name='home'),\n    path('about/', views.about, name='about'),\n    path('convert/', views.convert, name='convert'),\n]"}], "13": [{"file": "my_project/manage.py", "path": "my_project/manage.py", "code": "#!/usr/bin/env python\n\nimport os\nfrom pathlib import Path\nimport sys\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nsys.path.append(str(BASE_DIR / 'my_project'))\n\nfrom django.core.management import execute_from_command_line\n\nif __name__ == '__main__':\nexecute_from_command_line(sys.argv)"}, {"file": "my_app/settings.py", "path": "my_project/my_app/settings.py", "code": "# settings.py is where you configure your Django project.\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'my_app',\n]\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates', \n        'DIRS': [ os.path.join(BASE_DIR, 'templates') ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]"}, {"file": "my_app/views.py", "path": "my_project/my_app/views.py", "code": "# Implement your views here\nfrom django.shortcuts import render\ndef index(request):\n    return render(request, 'home/index.html') "}, {"file": "my_app/models.py", "path": "my_project/my_app/models.py", "code": "# Implement your models here\nfrom django.db import models"}, {"file": "my_project/urls.py", "path": "my_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('my_app.urls')),\n]"}, {"file": "home/templates/home/index.html", "path": "my_project/my_app/templates/home/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Django Project</title>\n</head>\n<body>\n    <h1>Hello, World from My Django Project!</h1>\n\n</body>\n\n</html>"}, {"file": "my_app/urls.py", "path": "my_project/my_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}], "14": [{"file": "hello_world/templates/index.html", "path": "hello_world/templates/index.html", "code": "<h1 id=\"main-heading\" class=\"primary-title\">Hello World!</h1>"}, {"file": "hello_world/views.py", "path": "hello_world/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'index.html')\n"}, {"file": "urls.py", "path": "urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]\n"}, {"file": "settings.py", "path": "/example_app/settings.py", "code": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'hello_world',\n]\n\nROOT_URLCONF = 'example_app.urls'\nSETTINGS_MODULE = 'example_app.settings' "}, {"file": "scrapy/manage.py", "path": "scrapy/manage.py", "code": "# -*- coding: utf-8 -*-\n\ndef call_command(name, *args):\ndo print f\"Calling command '{name}' with args {args}\"\n\nif name == 'runserver':\nd import os\ndo print(\"running server!\")\n\n# ..."}], "15": [{"file": "manage.py", "path": "manage.py", "code": "#!/usr/bin/env python\nimport os\nfrom django.core.management import execute_from_command_line\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n    execute_from_command_line(sys.argv)\nif __name__ == '__main__':\n    main()"}, {"file": "somepath/mysite/__init__.py", "path": "somepath/mysite/__init__.py", "code": "from django.urls import path, include\nfrom django.contrib import admin\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n]"}, {"file": "somepath/mysite/settings.py", "path": "somepath/mysite/settings.py", "code": "import os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '...your_secret_key...\n\nDEBUG = True\nALLOWED_HOSTS = []\n\n# Application definition\nINSTALLED_APPS =\n    [\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.messages',\n        'django.contrib.staticfiles',\n        'home',\n        'hello_world',\n    ]\n\n# https://django-debug-toolbar.readthedocs.io/en/latest/\ndef DEBUG = True\nINSTALLED_APPS = [ ...]\nMIDDLEWARE = [ \n     ... \n   \"debug_toolbar.middleware.DebugToolbarMiddleware\", \n ]\n# URL configuration\nfrom django.urls import path, include\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('home.urls'),),\n]"}, {"file": "somepath/mysite/urls.py", "path": "somepath/mysite/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('home.urls')),\n]"}, {"file": "somepath/home/views.py", "path": "somepath/home/views.py", "code": "from django.shortcuts import render\nfrom .models import Home\ndef hello_world(request): \n    return render(request, 'home/index.html')"}, {"file": "somepath/home/urls.py", "path": "somepath/home/urls.py", "code": "from django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.hello_world, name='home'),\n]"}, {"file": "somepath/home/templates/home/index.html", "path": "somepath/home/templates/home/index.html", "code": "<html>\n  <head>\n    <title>Home Page</title>\n  </head>\n  <body>\n    <h1>Welcome to Our Home Page</h1>\n  </body>\n</html>"}, {"file": "somepath/hello_world/views.py", "path": "somepath/hello_world/views.py", "code": "from django.shortcuts import render\ndef hello_world(request): \n    return render(request, 'hello_world/index.html')"}, {"file": "somepath/hello_world/urls.py", "path": "somepath/hello_world/urls.py", "code": "from django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.hello_world, name='hello_world'),\n]"}, {"file": "somepath/hello_world/templates/hello_world/index.html", "path": "somepath/hello_world/templates/hello_world/index.html", "code": "<html>\n  <head>\n    <title>Hello World</title>\n  </head>\n  <body>\n    <h1>Hello, World!</h1>\n  </body>\n</html>"}], "18": [{"file": "Main_Menu.py", "path": "src/main_menu.py", "code": "\nfrom modules.game_logic import GameLogic\n  \ndef start_game():\n    # TODO: Implement game starting logic, including initializing state and launching the initial scene\n  \n  def instructions():\n    print('---- Instructions ----')\n    # TODO: Display detailed game instructions\n  \n  def exit_game(close):\n    if close:\n      # Handle graceful shutdown, saving game progress (optional) \n      print('Exiting the game...') \n    else:\n      exit(0)\n   \n  \nif __name__ == \"__main__\":\n    while True:  \n      print('\n[MAIN MENU]\n')\n      print('1. Start Game')\n      print('2. Instructions')\n      print('3. Exit Game')\n\n      choice = input('Enter your choice (1-3): ') \n\n      if choice == '1':  \n        start_game() \n      elif choice == '2': \n        instructions()\n      elif choice == '3': \n       exit_game(True)  \n    # Invalid input handling\n"}, {"file": "GameEnvironment.py", "path": "src/game_environment.py", "code": "\ndef move_player(direction):\n  print(f'Moving player {direction}...') \n\ndef look_around():\n  print('---- Current Room ----')\n  print('Description: This is a general description of the room.')\n  print('Items: (List any available items)') \n\ndef pick_up(item):\n    # TODO: Implement item picking logic and update player inventory \n\ndef check_inventory():\n   \n"}, {"file": "GameLogic.py", "path": "src/game_logic.py", "code": "\ndef parse_command(command):\n  # TODO: Implement command parsing functionality based on user input \n  print(f'Parsed command: {command}')\n\ndef update_game_state():\n   \n"}], "20": [{"file": "blog/models.py", "path": "./blog/models.py", "code": "from django.db import models\n\nclass Category(models.Model):\n    name = models.CharField(max_length=200)\n\n    def __str__(self):\n        return self.name\n\nclass Post(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    author = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return self.title\n\nclass Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE)\n    author = models.CharField(max_length=100)\n    content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return f'Comment by {self.author} on {self.post}'"}, {"file": "blog/admin.py", "path": "./blog/admin.py", "code": "# -*- coding: utf-8 -*-\nfrom django.contrib import admin\nfrom .models import Post, Category, Comment\n\nadmin.site.register(Post)\nadmin.site.register(Category)\nadmin.site.register(Comment)"}, {"file": "templates/blog/home.html", "path": "./templates/blog/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Blog</title>\n</head>\n<body>\n    <h1 id=\"main-heading\">My Latest Blogs</h1>\n    <ul id=\"posts-list\">\n        {% for post in posts %}\n            <li id=\"post_{{ post.id }}\">\n                <h2><a href=\"{{ post.get_absolute_url }}\">{{ post.title }}</a></h2>\n                <p>{{ post.content|first:100 }}...</p>\n            </li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "app/settings.py", "path": "./app/settings.py", "code": "import os\nfrom django.core.management import call_command\nfrom .database import dbc, database_router, configure_db\nfrom .api import configure_api\n\ndef configure_django(settings):\n    settings.TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            'DIRS': [os.path.join(settings.BASE_DIR, 'templates')],\n            'APP_DIRS': True,\n            'OPTIONS': {\n                'context_processors': [\n                    'django.template.context_processors.debug',\n                    'django.template.context_processors.request',\n                    'django.contrib.auth.context_processors.auth',\n                    'django.template.context_processors.media',\n                ],\n            },\n        },\n    ]\n\ndef configure_static(settings):\n    settings.STATIC_URL = '/static/'\n    settings.STATICFILES_DIRS = [os.path.join(settings.BASE_DIR, 'static')]\n\ndef configure_media(settings):\n    # Configure media URLs and directories (e.g., images)\n    # settings.MEDIA_URL will hold the URL prefix for accessing uploaded files.\n    # settings.MEDIA_ROOT should point to a directory where files are stored.\n\n    path = os.path.join(settings.BASE_DIR, 'media')\n    configure_db(db_configs=dbc)\n    configure_api(settings=settings)\n\ndef configure_urls(settings):\n    # ... define your project's URLs here\n\nsettings = __import__('django').apps.AppConfig('app'), settings = configure_django(settings), settings = configure_static(settings), settings = configure_media(settings), settings = configure_urls(settings),\nreturn settings"}]}