{"11": [{"file": "app/tests/test_home.py", "path": "project/app/tests/test_home.py", "code": "from django.test import LiveServerTestClient\nclass TestHomePage(LiveServerTestClient):\n    def setUp(self):\n        super().setUp()\nself.client = self.live_server_client(\n            base_url=f'{settings.FRONTEND_URL}' # replace with the actual frontend url\n        )\n\n    def test_display_welcome_message(self, welcome_message_id):\n        response = self.client.get('/')\n        assert response.status_code == 200\n        welcome_element = response.html.find(\n            f'#{welcome_message_id}' # id of the welcome message element\n        )\n        assert welcome_element\n\n    def test_navigation_button(self, navigation_button_id, generator_id):\n        response = self.client.get('/')\n        assert response.status_code == 200\n        nav_button = response.html.find(\n            f'#{navigation_button_id}' # id of the navigation button element\n        )\n        assert nav_button\nnav_button.click()\n        time.sleep(1)\natom_generator = response.html.find(\n            f'#{generator_id}' # id of the password generator element\n        )\n        assert atom_generator\n"}, {"file": "app/tests/test_about.py", "path": "project/app/tests/test_about.py", "code": "from django.test import LiveServerTestClient\nclass TestAboutPage(LiveServerTestClient):\n    def setUp(self):\n        super().setUp()\nself.client = self.live_server_client(\n            base_url=f'{settings.FRONTEND_URL}' # replace with the actual frontend url\n        )\n\n    def test_about_link(self, about_link_id):\n        response = self.client.get('/')\n        about_link = response.html.find(\n            f'#{about_link_id}' # id of the about link element\n        )\n        assert about_link\n\n    def test_description(self, description_id):\n        response = self.client.get('/about')\n        assert response.status_code == 200\ndesc_element = response.html.find(\n            f'#{description_id}' # id of the description element\n        )\n        assert desc_element\n"}], "15": [{"file": "project/settings.py", "path": "project/", "code": "FROM django.apps import AppConfig\nclass MyAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'\n\nSEARCH_PATHS = ('templates',)\n"}, {"file": "project/urls.py", "path": "project/", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]\n"}, {"file": "myapp/urls.py", "path": "myapp/", "code": "from django.urls import re_path\nfrom myapp.views import home\n\nurlpatterns = [\n    re_path(r'^$', home, name='home'),\n]\n"}, {"file": "myapp/views.py", "path": "myapp/", "code": "from django.http import HttpResponse\ndef home(request):\n    return HttpResponse('Helloword')\n"}, {"file": "templates/base.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <meta charset='UTF-8'>\n    <title>My App</title>\n  </head>\n  <body>\n    <button id='goBtn' class='go-btn' onclick=\"location.href='{% url 'home' %}'\">Go</button>\n  </body>\n</html>"}, {"file": "templates/helloword.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <meta charset='UTF-8'>\n    <title>Hellloword</title>\n  </head>\n  <body>\n    <h1 id='header'> Helloword </h1>\n  </body>\n</html>"}], "18": [{"file": "main.py", "path": "BashCrawl/main.py", "code": "```python\nimport sys, random\nclass Game:\n    def __init__(self):\n        self.world = [[0]*5 + [1]*2 + [0]*3 for _ in range(6)] # 5x6 world map with a starting point\n    def print_map(self):\n        for row in self.world:\n            print(' '.join('#' if cell == 1 else '.' for cell in row))\n    def move_player(self, direction):\n        dx = [0, -1, 0, 1][direction]\n        dy = [1, 0, -1, 0]\n        nx, ny = self.player[0] + dx, self.player[1] + dy\n        if 0 <= nx < len(self.world) and 0 <= ny < len(self.world[0]) and self.world[ny][nx] == 0:\n            self.world[ny][nx], self.world[self.player[1]][self.player[0]] = self.world[self.player[1]][self.player[0]], 1\n            self.player = (nx, ny)\n        else:\n            print('Invalid move')\n    def __del__(self):\n        print_map(self)\nif __name__ == '__main__':\ngame = Game()\ngame.print_map()\nwhile True:\n    direction = int(input('Enter move (w/a/s/d): '))\n    game.move_player(direction % 4)\n```"}, {"file": "play.sh", "path": "BashCrawl/play.sh", "code": "```bash\n#!/bin/bash\npython3 $1.py\n```"}], "20": [{"file": "manage.py", "path": "myproject/", "code": "from django.contrib import admin\n\nmport models\n\ndef main():\n   print('Running managing.py...')\n\nif __name__ == '__main__':\n    main()"}, {"file": "settings.py", "path": "myproject/", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = ' YOUR_SECRET_KEY '\n\nDATABASES = {\n   'default': {\n      'ENGINE': 'django.db.backends.sqlite3',\n      'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n   }\n}\n"}, {"file": "urls.py", "path": "myproject/", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n   path('admin/', admin.site.urls),\n   path('', include('blog.urls')),\n]\n"}, {"file": "__init__.py", "path": "myproject/", "code": ""}, {"file": "models.py", "path": "myproject/blog/", "code": "from django.db import models\n\nclass Post(models.Model):\n   title = models.CharField(max_length=200)\n   content = models.TextField()\n   publishing_date = models.DateTimeField('date published')\n\nclass Meta:\n    ordering = ('-publishing_date',)"}, {"file": "__init__.py", "path": "myproject/blog/", "code": ""}, {"file": "views.py", "path": "myproject/blog/", "code": "from django.shortcuts import render\nfrom .models import Post\n\ndef post_list(request):\n   posts = Post.objects.all() \n   return render(request, 'blog/post_list.html', {'posts':posts}) \n\ndef post_detail(request, pk):\n   post = get_object_or_404(Post, pk=pk) \n   return render(request, 'blog/post_detail.html', {'post':post})"}, {"file": "base.html", "path": "myproject/blog/templates/base.html", "code": "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n     <meta charset='UTF-8' />\n     <title>{% block title %}My Blog{% endblock %}</title>\n  </head>\n  <body>\n    <header class='site-header'>Site header</header>\n    {% block content %}\n    {% endblock %}\n    <footer class='site-footer'>Site footer</footer>\n  </body>\n</html>"}, {"file": "post_list.html", "path": "myproject/blog/templates/blog/post_list.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n  <div class='container page'>   \n    {% for post in posts %}   \n      <h1><a href='{% url \u2018post_detail\u2019 post.pk %}'>{{ post.title }}</a></h1>\n      <p>{{ post.publishing_date }}</p>\n      {{ post.content|truncatewords:30 }}\n    {% endfor %}\n  </div>\n{% endblock %}"}, {"file": "post_detail.html", "path": "myproject/blog/templates/blog/post_detail.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n  <div class='container page'>   \n    <h1>{{ post.title }}</h1>\n    <p>{{ post.publishing_date }}</p>\n    <p>{{ post.content }}</p>\n  </div>\n{% endblock %}"}]}