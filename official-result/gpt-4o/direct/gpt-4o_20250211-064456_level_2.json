{"1": [{"file": "manage.py", "path": "bmi_calculator/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_calculator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "__init__.py", "path": "bmi_calculator/__init__.py", "code": ""}, {"file": "settings.py", "path": "bmi_calculator/settings.py", "code": "from pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calculator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_calculator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_calculator.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"}, {"file": "urls.py", "path": "bmi_calculator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calculator.urls')),\n]\n"}, {"file": "wsgi.py", "path": "bmi_calculator/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_calculator.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "calculator/__init__.py", "code": ""}, {"file": "models.py", "path": "calculator/models.py", "code": ""}, {"file": "views.py", "path": "calculator/views.py", "code": "from django.shortcuts import render\n\n\ndef home_page(request):\n    return render(request, 'calculator/home.html')\n\n\ndef bmi_calculator_page(request):\n    context = {}\n    if request.method == 'POST':\n        height = float(request.POST.get('height', 0))\n        weight = float(request.POST.get('weight', 0))\n        height_unit = request.POST.get('height_unit')\n        weight_unit = request.POST.get('weight_unit')\n\n        if height_unit == 'in':\n            height = height * 2.54\n        if weight_unit == 'lbs':\n            weight = weight / 2.205\n\n        bmi = weight / ((height / 100) ** 2)\n\n        if bmi < 18.5:\n            category = 'Underweight'\n        elif 18.5 <= bmi < 24.9:\n            category = 'Normal weight'\n        elif 25 <= bmi < 29.9:\n            category = 'Overweight'\n        else:\n            category = 'Obesity'\n\n        context = {\n            'bmi': round(bmi, 2),\n            'category': category,\n        }\n\n    return render(request, 'calculator/bmi_calculator.html', context)\n"}, {"file": "urls.py", "path": "calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home_page, name='home'),\n    path('bmi_calculator/', views.bmi_calculator_page, name='bmi_calculator'),\n]\n"}, {"file": "home.html", "path": "templates/calculator/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home Page</title>\n    <link rel=\"stylesheet\" href=\"/static/styles.css\">\n</head>\n<body>\n    <div id=\"introduction-section\" class=\"section\">\n        <h1 id=\"intro-title\" class=\"title\">Welcome to the BMI Calculator</h1>\n        <p id=\"intro-description\" class=\"description\">Here you can calculate your Body Mass Index and understand your body weight category.</p>\n        <button id=\"navigate-btn\" class=\"navigation-button\" onclick=\"window.location.href='{% url 'bmi_calculator' %}'\">Go to Calculator</button>\n    </div>\n</body>\n</html>\n"}, {"file": "bmi_calculator.html", "path": "templates/calculator/bmi_calculator.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator</title>\n    <link rel=\"stylesheet\" href=\"/static/styles.css\">\n</head>\n<body>\n    <div id=\"calculator-section\" class=\"section\">\n        <h1 id=\"calculator-title\" class=\"title\">BMI Calculator</h1>\n        <form id=\"bmi-form\" method=\"post\">\n            {% csrf_token %}\n            <div class=\"input-group\">\n                <label for=\"height\">Height:</label>\n                <input id=\"height\" name=\"height\" type=\"number\" step=\"any\" class=\"input-field\">\n                <select name=\"height_unit\" id=\"height-unit\" class=\"unit-select\">\n                    <option value=\"cm\">cm</option>\n                    <option value=\"in\">inches</option>\n                </select>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"weight\">Weight:</label>\n                <input id=\"weight\" name=\"weight\" type=\"number\" step=\"any\" class=\"input-field\">\n                <select name=\"weight_unit\" id=\"weight-unit\" class=\"unit-select\">\n                    <option value=\"kg\">kg</option>\n                    <option value=\"lbs\">lbs</option>\n                </select>\n            </div>\n            <button id=\"submit-btn\" type=\"submit\" class=\"submit-button\">Calculate BMI</button>\n            <button id=\"reset-btn\" type=\"reset\" class=\"reset-button\">Reset</button>\n        </form>\n\n        {% if bmi %}\n        <div id=\"result-section\" class=\"result\">\n            <p id=\"bmi-result\" class=\"bmi\">Your BMI: <strong>{{ bmi }}</strong></p>\n            <p id=\"bmi-category\" class=\"category\">Category: <strong>{{ category }}</strong></p>\n        </div>\n        {% endif %}\n    </div>\n</body>\n</html>\n"}, {"file": "styles.css", "path": "static/styles.css", "code": "body { font-family: Arial, sans-serif; }\n.section { margin: 20px; padding: 20px; border: 1px solid #ccc; }\n.title { font-size: 24px; margin-bottom: 10px; }\n.description { font-size: 16px; }\n.navigation-button, .submit-button, .reset-button { padding: 10px 20px; border: none; background: #007BFF; color: #fff; cursor: pointer; }\n.navigation-button:hover, .submit-button:hover, .reset-button:hover { background: #0056b3; }\n.input-group { margin-bottom: 15px; }\n.input-field, .unit-select { padding: 5px; margin-left: 10px; }\n.result { margin-top: 20px; }\n.bmi, .category { font-size: 18px; }\n"}], "2": [{"file": "manage.py", "path": "currency_converter/manage.py", "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\"Couldn't import Django.\") from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "currency_converter/currency_converter/__init__.py", "code": ""}, {"file": "settings.py", "path": "currency_converter/currency_converter/settings.py", "code": "from pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'your-secret-key'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter'\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'currency_converter.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'currency_converter.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "currency_converter/currency_converter/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('converter.urls')),\n]"}, {"file": "wsgi.py", "path": "currency_converter/currency_converter/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter.settings')\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "currency_converter/converter/__init__.py", "code": ""}, {"file": "admin.py", "path": "currency_converter/converter/admin.py", "code": "from django.contrib import admin"}, {"file": "apps.py", "path": "currency_converter/converter/apps.py", "code": "from django.apps import AppConfig\n\nclass ConverterConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'converter'"}, {"file": "models.py", "path": "currency_converter/converter/models.py", "code": "from django.db import models\n\n# Create your models here if needed."}, {"file": "tests.py", "path": "currency_converter/converter/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "views.py", "path": "currency_converter/converter/views.py", "code": "from django.shortcuts import render\n\n\ndef home_page(request):\n    return render(request, 'converter/home.html')\n\ndef currency_details_page(request):\n    return render(request, 'converter/currency_details.html')\n\ndef settings_page(request):\n    return render(request, 'converter/settings.html')"}, {"file": "urls.py", "path": "currency_converter/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home_page, name='home'),\n    path('details/', views.currency_details_page, name='currency_details'),\n    path('settings/', views.settings_page, name='settings'),\n]"}, {"file": "home.html", "path": "currency_converter/templates/converter/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Currency Converter</title>\n</head>\n<body>\n    <h1 id=\"title-home\" class=\"title\">Currency Converter</h1>\n    <form id=\"conversion-form\" class=\"form\">\n        <label for=\"base-currency\" id=\"label-base-currency\" class=\"label\">Base Currency:</label>\n        <select id=\"base-currency\" class=\"select\">\n            <!-- Options go here -->\n        </select>\n        <label for=\"target-currency\" id=\"label-target-currency\" class=\"label\">Target Currency:</label>\n        <select id=\"target-currency\" class=\"select\">\n            <!-- Options go here -->\n        </select>\n        <label for=\"amount\" id=\"label-amount\" class=\"label\">Amount:</label>\n        <input type=\"number\" id=\"amount\" class=\"input\" min=\"0\" step=\"any\">\n        <button type=\"button\" id=\"convert-button\" class=\"button\">Convert</button>\n    </form>\n    <div id=\"conversion-result\" class=\"result\">\n        <!-- Conversion result will be displayed here -->\n    </div>\n    <div id=\"exchange-rate-info\" class=\"info\">\n        <!-- Exchange rate info will be displayed here if present -->\n    </div>\n</body>\n</html>"}, {"file": "currency_details.html", "path": "currency_converter/templates/converter/currency_details.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Currency Details</title>\n</head>\n<body>\n    <h1 id=\"title-details\" class=\"title\">Currency Details</h1>\n    <div id=\"currency-information\" class=\"info\">\n        <!-- Detailed currency info displayed here -->\n    </div>\n    <div id=\"historical-exchange-rates\" class=\"historical\">\n        <!-- Historical exchange rates displayed here -->\n    </div>\n</body>\n</html>"}, {"file": "settings.html", "path": "currency_converter/templates/converter/settings.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Settings</title>\n</head>\n<body>\n    <h1 id=\"title-settings\" class=\"title\">Settings</h1>\n    <form id=\"settings-form\" class=\"form\">\n        <label for=\"default-base-currency\" id=\"label-default-base-currency\" class=\"label\">Default Base Currency:</label>\n        <select id=\"default-base-currency\" class=\"select\">\n            <!-- Options go here -->\n        </select>\n        <label for=\"default-target-currency\" id=\"label-default-target-currency\" class=\"label\">Default Target Currency:</label>\n        <select id=\"default-target-currency\" class=\"select\">\n            <!-- Options go here -->\n        </select>\n        <label for=\"update-frequency\" id=\"label-update-frequency\" class=\"label\">Update Frequency:</label>\n        <select id=\"update-frequency\" class=\"select\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"hourly\">Hourly</option>\n        </select>\n    </form>\n</body>\n</html>"}], "3": [{"file": "manage.py", "path": "password_generator/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\") from exc\n    execute_from_command_line(sys.argv)"}, {"file": "__init__.py", "path": "password_generator/password_generator/__init__.py", "code": ""}, {"file": "settings.py", "path": "password_generator/password_generator/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'generator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'password_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'password_generator.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('generator.urls')),\n]"}, {"file": "wsgi.py", "path": "password_generator/password_generator/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "password_generator/generator/__init__.py", "code": ""}, {"file": "admin.py", "path": "password_generator/generator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "apps.py", "path": "password_generator/generator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass GeneratorConfig(AppConfig):\n    name = 'generator'"}, {"file": "models.py", "path": "password_generator/generator/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "password_generator/generator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "views.py", "path": "password_generator/generator/views.py", "code": "from django.shortcuts import render, redirect\nimport random\nimport string\n\n\ndef home(request):\n    return render(request, 'generator/home.html')\n\n\ndef password_options(request):\n    return render(request, 'generator/password_options.html')\n\n\ndef generated_password(request):\n    length = int(request.GET.get('length', 12))\n    include_uppercase = request.GET.get('uppercase') == 'on'\n    include_lowercase = request.GET.get('lowercase') == 'on'\n    include_numbers = request.GET.get('numbers') == 'on'\n    include_symbols = request.GET.get('symbols') == 'on'\n\n    characters = ''\n    if include_uppercase:\n        characters += string.ascii_uppercase\n    if include_lowercase:\n        characters += string.ascii_lowercase\n    if include_numbers:\n        characters += string.digits\n    if include_symbols:\n        characters += string.punctuation\n\n    if not characters:\n        characters = string.ascii_letters\n\n    generated_password = ''.join(random.choice(characters) for _ in range(length))\n    return render(request, 'generator/generated_password.html', {'password': generated_password})\n\n\ndef about(request):\n    return render(request, 'generator/about.html')"}, {"file": "urls.py", "path": "password_generator/generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('options/', views.password_options, name='password_options'),\n    path('generated/', views.generated_password, name='generated_password'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "home.html", "path": "password_generator/generator/templates/generator/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <div class=\"welcome-message\" id=\"welcomeMessage\">\n        <h1>Welcome to the Password Generator</h1>\n        <p>Click the button below to start creating a secure password.</p>\n    </div>\n    <div class=\"navigation-button\" id=\"navigationButton\">\n        <button onclick=\"window.location.href='/options/';\">Go to Password Generator</button>\n    </div>\n</body>\n</html>"}, {"file": "password_options.html", "path": "password_generator/generator/templates/generator/password_options.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Password Options</title>\n</head>\n<body>\n    <form action=\"/generated/\" method=\"get\">\n        <div class=\"length-input\" id=\"lengthInput\">\n            <label for=\"length\">Password Length:</label>\n            <input type=\"number\" id=\"length\" name=\"length\" value=\"12\" min=\"1\" max=\"100\">\n        </div>\n        <div class=\"include-uppercase\" id=\"includeUppercase\">\n            <input type=\"checkbox\" id=\"uppercase\" name=\"uppercase\" checked>\n            <label for=\"uppercase\">Include Uppercase Letters</label>\n        </div>\n        <div class=\"include-lowercase\" id=\"includeLowercase\">\n            <input type=\"checkbox\" id=\"lowercase\" name=\"lowercase\" checked>\n            <label for=\"lowercase\">Include Lowercase Letters</label>\n        </div>\n        <div class=\"include-numbers\" id=\"includeNumbers\">\n            <input type=\"checkbox\" id=\"numbers\" name=\"numbers\" checked>\n            <label for=\"numbers\">Include Numbers</label>\n        </div>\n        <div class=\"include-symbols\" id=\"includeSymbols\">\n            <input type=\"checkbox\" id=\"symbols\" name=\"symbols\" checked>\n            <label for=\"symbols\">Include Symbols</label>\n        </div>\n        <div class=\"generate-button\" id=\"generateButton\">\n            <button type=\"submit\">Generate Password</button>\n        </div>\n    </form>\n</body>\n</html>"}, {"file": "generated_password.html", "path": "password_generator/generator/templates/generator/generated_password.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Generated Password</title>\n    <script>\n        function copyToClipboard() {\n            var copyText = document.getElementById(\"passwordOutput\").innerText;\n            navigator.clipboard.writeText(copyText).then(() => {\n                alert('Password copied to clipboard!');\n            });\n        }\n    </script>\n</head>\n<body>\n    <div class=\"display-password\" id=\"passwordOutput\">\n        <p>Your Generated Password: <strong>{{ password }}</strong></p>\n    </div>\n    <div class=\"copy-to-clipboard\" id=\"copyToClipboard\">\n        <button onclick=\"copyToClipboard()\">Copy to Clipboard</button>\n    </div>\n</body>\n</html>"}, {"file": "about.html", "path": "password_generator/generator/templates/generator/about.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>About</title>\n</head>\n<body>\n    <div class=\"description\" id=\"description\">\n        <h1>About the Password Generator</h1>\n        <p>This website allows you to generate secure passwords based on customizable options. Choose the desired length and types of characters to include, and get a unique password that meets your needs.</p>\n    </div>\n</body>\n</html>"}], "4": [{"file": "Dockerfile", "path": "qrcode_project/Dockerfile", "code": "FROM python:3.9-slim\n\nRUN mkdir /app\nWORKDIR /app\n\nCOPY . /app/\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCMD [ \"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\" ]"}, {"file": "docker-compose.yml", "path": "qrcode_project/docker-compose.yml", "code": "version: '3.8'\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - .:/app\n    command: python /app/manage.py runserver 0.0.0.0:8000"}, {"file": "requirements.txt", "path": "qrcode_project/requirements.txt", "code": "Django==4.1.7\nqrcode[pil]"}, {"file": "manage.py", "path": "qrcode_project/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qrcode_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "apps.py", "path": "qrcode_project/qrgenerator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass QrGeneratorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'qrgenerator'"}, {"file": "__init__.py", "path": "qrcode_project/qrcode_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "qrcode_project/qrgenerator/__init__.py", "code": ""}, {"file": "asgi.py", "path": "qrcode_project/qrcode_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qrcode_project.settings')\n\napplication = get_asgi_application()"}, {"file": "settings.py", "path": "qrcode_project/qrcode_project/settings.py", "code": "import os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$your_random_secret_key'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qrgenerator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qrcode_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qrcode_project.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "qrcode_project/qrcode_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qrgenerator.urls')),\n]"}, {"file": "wsgi.py", "path": "qrcode_project/qrcode_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qrcode_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "admin.py", "path": "qrcode_project/qrgenerator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "qrcode_project/qrgenerator/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "qrcode_project/qrgenerator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "views.py", "path": "qrcode_project/qrgenerator/views.py", "code": "from django.shortcuts import render\nimport qrcode\nfrom django.http import JsonResponse, HttpResponse\nfrom io import BytesIO\n\n# Create your views here.\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef generate_qr_code(request):\n    if request.method == 'POST':\n        data = request.POST.get('data', '')\n        size = request.POST.get('size', 10)\n        error_correction = request.POST.get('error_correction', 'medium').upper()[0]\n        border = request.POST.get('border', 4)\n        fill_color = request.POST.get('fill_color', 'black')\n        back_color = request.POST.get('back_color', 'white')\n\n        if error_correction not in ['L', 'M', 'Q', 'H']:\n            return JsonResponse({'error': 'Invalid error correction level.'}, status=400)\n        \n        qr = qrcode.QRCode(\n            version=1,\n            error_correction={\n                'L': qrcode.constants.ERROR_CORRECT_L,\n                'M': qrcode.constants.ERROR_CORRECT_M,\n                'Q': qrcode.constants.ERROR_CORRECT_Q,\n                'H': qrcode.constants.ERROR_CORRECT_H,\n            }[error_correction],\n            box_size=int(size),\n            border=int(border),\n        )\n\n        qr.add_data(data)\n        qr.make(fit=True)\n\n        img = qr.make_image(fill_color=fill_color, back_color=back_color)\n        buffer = BytesIO()\n        img.save(buffer, \"PNG\")\n\n        return HttpResponse(buffer.getvalue(), content_type=\"image/png\")\n    else:\n        return JsonResponse({'error': 'Invalid request method.'}, status=405)\n\ndef about(request):\n    return render(request, 'about.html')"}, {"file": "urls.py", "path": "qrcode_project/qrgenerator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.generate_qr_code, name='generate_qr_code'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "home.html", "path": "qrcode_project/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QR Code Generator - Home</title>\n</head>\n<body>\n    <section id=\"introduction\" class=\"introduction\">\n        <h1>Welcome to the QR Code Generator</h1>\n        <p>Generate your custom QR codes quickly and easily.</p>\n    </section>\n\n    <section id=\"navigation\" class=\"navigation\">\n        <button onclick=\"window.location.href='/generate/'\" class=\"nav-button\">Generate QR Code</button>\n    </section>\n</body>\n</html>"}, {"file": "generate.html", "path": "qrcode_project/templates/generate.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QR Code Generator</title>\n    <style>\n        #qrCodeContainer {\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n    <form id=\"qrCodeForm\" class=\"qrCodeForm\">\n        <label for=\"data\">Enter text or URL:</label>\n        <input type=\"text\" id=\"data\" name=\"data\" required>\n\n        <label for=\"size\">Box Size (max 128):</label>\n        <input type=\"number\" id=\"size\" name=\"size\" value=\"10\" min=\"1\" max=\"128\" required>\n\n        <label for=\"error_correction\">Error Correction:</label>\n        <select id=\"error_correction\" name=\"error_correction\">\n            <option value=\"small\">Low</option>\n            <option value=\"medium\" selected>Medium</option>\n            <option value=\"large\">High</option>\n        </select>\n\n        <label for=\"border\">Border Size (max 10):</label>\n        <input type=\"number\" id=\"border\" name=\"border\" value=\"4\" min=\"1\" max=\"10\" required>\n\n        <label for=\"fill_color\">Fill Color:</label>\n        <input type=\"color\" id=\"fill_color\" name=\"fill_color\" value=\"#000000\">\n\n        <label for=\"back_color\">Background Color:</label>\n        <input type=\"color\" id=\"back_color\" name=\"back_color\" value=\"#ffffff\">\n\n        <button type=\"button\" onclick=\"generateQRCode()\" class=\"generate-button\">Generate</button>\n    </form>\n\n    <div id=\"qrCodeContainer\" class=\"qrCodeContainer\">\n        <img id=\"qrCodeImage\" class=\"qrCodeImage\" alt=\"Generated QR Code\">\n        <a id=\"downloadLink\" class=\"downloadLink\" href=\"#\" download=\"qrcode.png\">Download QR Code</a>\n    </div>\n\n    <script>\n        function generateQRCode() {\n            const formData = new FormData(document.getElementById('qrCodeForm'));\n\n            fetch('/generate/', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    'X-CSRFToken': '{{ csrf_token }}'\n                }\n            })\n            .then(response => response.blob())\n            .then(imageBlob => {\n                const imageUrl = URL.createObjectURL(imageBlob);\n                const qrCodeImage = document.getElementById('qrCodeImage');\n                const downloadLink = document.getElementById('downloadLink');\n                qrCodeImage.src = imageUrl;\n                downloadLink.href = imageUrl;\n            })\n            .catch(error => console.error('Error generating QR code:', error));\n        }\n    </script>\n</body>\n</html>"}, {"file": "about.html", "path": "qrcode_project/templates/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About Us</title>\n</head>\n<body>\n    <section id=\"description\" class=\"description\">\n        <h2>About This Website</h2>\n        <p>This QR Code Generator helps you create custom QR codes effortlessly.</p>\n    </section>\n\n    <section id=\"privacyPolicy\" class=\" privacyPolicy\">\n        <h2>Privacy Policy</h2>\n        <p>[Your Privacy Policy Details Here]</p>\n    </section>\n\n    <section id=\"termsOfService\" class=\"termsOfService\">\n        <h2>Terms of Service</h2>\n        <p>[Your Terms of Service Neatly Here]</p>\n    </section>\n\n    <section id=\"commonQuestions\" class=\"commonQuestions\">\n        <h2>Common Questions</h2>\n        <p>[A list or paragraph of FAQs if wanted to be included]</p>\n    </section>\n</body>\n</html>"}], "5": [{"file": "settings.py", "path": "markdown_converter/settings.py", "code": "from pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'markdown_converter.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'markdown_converter.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"}, {"file": "urls.py", "path": "markdown_converter/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom converter import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "wsgi.py", "path": "markdown_converter/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'markdown_converter.settings')\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "markdown_converter/__init__.py", "code": ""}, {"file": "apps.py", "path": "converter/apps.py", "code": "from django.apps import AppConfig\n\nclass ConverterConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'converter'\n"}, {"file": "models.py", "path": "converter/models.py", "code": ""}, {"file": "views.py", "path": "converter/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'converter/home.html')\n\n\ndef convert(request):\n    return render(request, 'converter/convert.html')\n\n\ndef about(request):\n    return render(request, 'converter/about.html')\n"}, {"file": "home.html", "path": "converter/templates/converter/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n    <link rel=\"stylesheet\" href=\"/static/css/styles.css\">\n</head>\n<body>\n    <div id=\"welcome-message\" class=\"welcome\">\n        <h1>Welcome to the Markdown to HTML Converter</h1>\n    </div>\n    <div id=\"introduction\" class=\"intro\">\n        <p>This tool allows you to convert Markdown text into HTML format easily.</p>\n    </div>\n    <div id=\"navigation-links\" class=\"navigation\">\n        <a href=\"/convert/\">Convert</a>\n        <a href=\"/about/\">About</a>\n    </div>\n</body>\n</html>\n"}, {"file": "convert.html", "path": "converter/templates/converter/convert.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Convert</title>\n    <link rel=\"stylesheet\" href=\"/static/css/styles.css\">\n</head>\n<body>\n    <div id=\"markdown-input\" class=\"markdown-input\">\n        <label for=\"markdown-text\">Input Markdown:</label>\n        <textarea id=\"markdown-text\" class=\"markdown-text\"></textarea>\n    </div>\n    <div id=\"convert-button\" class=\"convert\">\n        <button onclick=\"convertMarkdownToHTML()\">Convert</button>\n    </div>\n    <div id=\"html-output\" class=\"html-output\">\n        <h2>HTML Output:</h2>\n        <div id=\"output\" class=\"output\"></div>\n    </div>\n    <div id=\"upload-file\" class=\"upload\">\n        <label for=\"file-upload\">Upload Markdown File:</label>\n        <input type=\"file\" id=\"file-upload\" class=\"file-upload\">\n    </div>\n    <div id=\"download-html\" class=\"download\">\n        <button>Download HTML</button>\n    </div>\n    <script>\n        function convertMarkdownToHTML() {\n            // Implementation for converting Markdown to HTML goes here\n        }\n    </script>\n</body>\n</html>\n"}, {"file": "about.html", "path": "converter/templates/converter/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About</title>\n    <link rel=\"stylesheet\" href=\"/static/css/styles.css\">\n</head>\n<body>\n    <div id=\"team-info\" class=\"team\">\n        <h2>About the Team</h2>\n        <p>Details about the development team...</p>\n    </div>\n    <div id=\"faq-section\" class=\"faq\">\n        <h2>FAQ</h2>\n        <p>Frequently asked questions...</p>\n    </div>\n</body>\n</html>\n"}, {"file": "styles.css", "path": "converter/static/css/styles.css", "code": ".welcome { text-align: center; margin-top: 20px; }\n.intro { margin: 20px; }\n.navigation { margin-top: 20px; text-align: center; }\n.navigation a { margin: 0 10px; }\n.markdown-input, .html-output, .upload, .download { margin: 20px; }\n.markdown-text { width: 100%; height: 200px; }\n.convert { text-align: center; margin-top: 20px; }\n.output { border: 1px solid #ccc; padding: 10px; background-color: #f9f9f9; }\n"}], "6": [{"file": "manage.py", "path": "todolist/manage.py", "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todolist.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "settings.py", "path": "todolist/todolist/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'todolist.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'todolist.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "todolist/todolist/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "todolist/todolist/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todolist.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "todolist/todolist/__init__.py", "code": ""}, {"file": "models.py", "path": "todolist/app/models.py", "code": "from django.db import models\n\nclass TodoList(models.Model):\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return self.name\n\nclass Task(models.Model):\n    todo_list = models.ForeignKey(TodoList, on_delete=models.CASCADE)\n    title = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    completed = models.BooleanField(default=False)\n\n    def __str__(self):\n        return self.title\n"}, {"file": "views.py", "path": "todolist/app/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import TodoList, Task\n\n\ndef home_view(request):\n    todos = TodoList.objects.all()\n    return render(request, 'home.html', {'todos': todos})\n\n\ndef todo_list_view(request, list_id):\n    tasks = Task.objects.filter(todo_list_id=list_id)\n    return render(request, 'todo_list.html', {'tasks': tasks})\n\n\ndef add_task_view(request, list_id):\n    if request.method == 'POST':\n        Task.objects.create(\n            todo_list_id=list_id,\n            title=request.POST.get('title'),\n            description=request.POST.get('description'),\n        )\n        return redirect('todo_list', list_id=list_id)\n    return render(request, 'add_task.html', {'list_id': list_id})\n\n\ndef edit_task_view(request, task_id):\n    task = Task.objects.get(id=task_id)\n    if request.method == 'POST':\n        task.title = request.POST.get('title')\n        task.description = request.POST.get('description')\n        task.completed = 'completed' in request.POST\n        task.save()\n        return redirect('todo_list', list_id=task.todo_list_id)\n    return render(request, 'edit_task.html', {'task': task})\n"}, {"file": "urls.py", "path": "todolist/app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home_view, name='home'),\n    path('todo_list/<int:list_id>/', views.todo_list_view, name='todo_list'),\n    path('add_task/<int:list_id>/', views.add_task_view, name='add_task'),\n    path('edit_task/<int:task_id>/', views.edit_task_view, name='edit_task'),\n]\n"}, {"file": "home.html", "path": "todolist/templates/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <h1 id='dashboard-header' class='header'>Dashboard</h1>\n    <ul id='todo-lists' class='list'>\n        {% for todo in todos %}\n            <li id='todo-{{ todo.id }}' class='list-item'><a href='{% url 'todo_list' todo.id %}'>{{ todo.name }}</a></li>\n        {% endfor %}\n    </ul>\n    <a id='add-list-button' class='button' href='#'>Add New List</a>\n</body>\n</html>\n"}, {"file": "todo_list.html", "path": "todolist/templates/todo_list.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Todo List</title>\n</head>\n<body>\n    <h1 id='tasks-header' class='header'>Tasks</h1>\n    <ul id='tasks' class='list'>\n        {% for task in tasks %}\n            <li id='task-{{ task.id }}' class='list-item'>{{ task.title }} - {{ task.description }} <a href='#'>Edit</a></li>\n        {% endfor %}\n    </ul>\n    <a id='add-task-button' class='button' href='#'>Add New Task</a>\n</body>\n</html>\n"}, {"file": "add_task.html", "path": "todolist/templates/add_task.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Add Task</title>\n</head>\n<body>\n    <h1 id='add-task-header' class='header'>Add Task</h1>\n<form id='add-task-form' class='form' method='post'>\n    {% csrf_token %}\n    <label for='title' id='title-label' class='label'>Title:</label>\n    <input type='text' id='title' class='input' name='title'>\n    <label for='description' id='description-label' class='label'>Description:</label>\n    <textarea id='description' class='textarea' name='description'></textarea>\n    <button type='submit' id='submit-task-button' class='button'>Add Task</button>\n</form>\n</body>\n</html>\n"}, {"file": "edit_task.html", "path": "todolist/templates/edit_task.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Edit Task</title>\n</head>\n<body>\n    <h1 id='edit-task-header' class='header'>Edit Task</h1>\n<form id='edit-task-form' class='form' method='post'>\n    {% csrf_token %}\n    <label for='title' id='title-label' class='label'>Title:</label>\n    <input type='text' id='title' class='input' name='title' value='{{ task.title }}'>\n    <label for='description' id='description-label' class='label'>Description:</label>\n    <textarea id='description' class='textarea' name='description'>{{ task.description }}</textarea>\n    <label>\n        <input type='checkbox' id='completed' class='checkbox' name='completed' {% if task.completed %} checked {% endif %}>\n        Mark as Completed\n    </label>\n    <button type='submit' id='submit-edit-button' class='button'>Save Changes</button>\n</form>\n</body>\n</html>\n"}, {"file": "__init__.py", "path": "todolist/app/__init__.py", "code": ""}, {"file": "apps.py", "path": "todolist/app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'\n"}, {"file": "__init__.py", "path": "todolist/todolist/settings/__init__.py", "code": ""}], "7": [{"file": "manage.py", "path": "budget_control/manage.py", "code": "import os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"budget_control.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "budget_control/budget_control/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'budget_app',  # Your custom app\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'budget_control.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'budget_control.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "budget_control/budget_control/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('budget_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "budget_control/budget_control/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"budget_control.settings\")\n\napplication = get_wsgi_application()\n"}, {"file": "apps.py", "path": "budget_control/budget_app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BudgetAppConfig(AppConfig):\n    name = 'budget_app'\n"}, {"file": "models.py", "path": "budget_control/budget_app/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Category(models.Model):\n    name = models.CharField(max_length=100)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n\nclass Transaction(models.Model):\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    timestamp = models.DateField()\n    description = models.TextField(null=True, blank=True)\n\nclass Balance(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    updated_at = models.DateTimeField(auto_now=True)\n"}, {"file": "urls.py", "path": "budget_control/budget_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('balance-tracker/', views.balance_tracker, name='balance_tracker'),\n    path('reports/', views.reports, name='reports'),\n    path('settings/', views.settings, name='settings'),\n    path('help/', views.help, name='help'),\n]\n"}, {"file": "views.py", "path": "budget_control/budget_app/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'budget_app/home.html')\n\n\ndef dashboard(request):\n    return render(request, 'budget_app/dashboard.html')\n\n\ndef balance_tracker(request):\n    return render(request, 'budget_app/balance_tracker.html')\n\n\ndef reports(request):\n    return render(request, 'budget_app/reports.html')\n\n\ndef settings(request):\n    return render(request, 'budget_app/settings.html')\n\n\ndef help(request):\n    return render(request, 'budget_app/help.html')\n"}, {"file": "home.html", "path": "budget_control/budget_app/templates/budget_app/home.html", "code": "<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"login-area\" class=\"login-area\">\n        <a id=\"login-link\" class=\"login-link\" href=\"/login\">Login</a>\n        <a id=\"signup-link\" class=\"signup-link\" href=\"/signup\">Sign Up</a>\n        <a id=\"support-link\" class=\"support-link\" href=\"/support\">Support</a>\n    </div>\n</body>\n</html>\n"}, {"file": "dashboard.html", "path": "budget_control/budget_app/templates/budget_app/dashboard.html", "code": "<html>\n<head>\n    <title>Dashboard</title>\n</head>\n<body>\n    <div id=\"dashboard-overview\" class=\"dashboard-overview\">\n        <!-- Dashboard overview content -->\n    </div>\n</body>\n</html>\n"}], "8": [{"file": "settings.py", "path": "mycalendarproject/mycalendarproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calendarapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'mycalendarproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mycalendarproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\nMEDIA_URL = '/media/'\n\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')"}, {"file": "urls.py", "path": "mycalendarproject/mycalendarproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calendarapp.urls')),  # Include the calendar app's URLs\n]"}, {"file": "models.py", "path": "mycalendarproject/calendarapp/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    date = models.DateTimeField()\n    \n    def __str__(self):\n        return self.name"}, {"file": "views.py", "path": "mycalendarproject/calendarapp/views.py", "code": "from django.shortcuts import render, redirect, get_object_or_404\nfrom django.utils import timezone\nfrom .models import Event\n\n# Home Page\ndef home(request):\n    current_date = timezone.now()\n    return render(request, 'calendarapp/home.html', {'current_date': current_date})\n\n# Calendar Page\ndef calendar_view(request):\n    events = Event.objects.all()\n    return render(request, 'calendarapp/calendar.html', {'events': events})\n\n# Add Event\ndef add_event(request):\n    if request.method == 'POST':\n        event_name = request.POST.get('name')\n        event_description = request.POST.get('description')\n        event_date = request.POST.get('date')\n        Event.objects.create(name=event_name, description=event_description, date=event_date)\n        return redirect('home')\n    return render(request, 'calendarapp/add_event.html')\n\n# Event Details Page\ndef event_details(request, event_id):\n    event = get_object_or_404(Event, id=event_id)\n    return render(request, 'calendarapp/event_details.html', {'event': event})\n\n# Edit Event\ndef edit_event(request, event_id):\n    event = get_object_or_404(Event, id=event_id)\n    if request.method == 'POST':\n        event.name = request.POST.get('name')\n        event.description = request.POST.get('description')\n        event.date = request.POST.get('date')\n        event.save()\n        return redirect('event_details', event_id=event.id)\n    return render(request, 'calendarapp/edit_event.html', {'event': event})\n\n# Delete Event\ndef delete_event(request, event_id):\n    event = get_object_or_404(Event, id=event_id)\n    if request.method == 'POST':\n        event.delete()\n        return redirect('calendar')\n    return render(request, 'calendarapp/delete_event.html', {'event': event})\n\n# Search Events\ndef search_events(request):\n    query = request.GET.get('q')\n    events = Event.objects.filter(name__icontains=query)\n    return render(request, 'calendarapp/search_results.html', {'events': events})\n\n# List All Events\ndef list_all_events(request):\n    events = Event.objects.all()\n    return render(request, 'calendarapp/list_all_events.html', {'events': events})"}, {"file": "urls.py", "path": "mycalendarproject/calendarapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar_view, name='calendar'),\n    path('add_event/', views.add_event, name='add_event'),\n    path('event/<int:event_id>/', views.event_details, name='event_details'),\n    path('edit/<int:event_id>/', views.edit_event, name='edit_event'),\n    path('delete/<int:event_id>/', views.delete_event, name='delete_event'),\n    path('search/', views.search_events, name='search_events'),\n    path('list_all/', views.list_all_events, name='list_all_events'),\n]"}, {"file": "home.html", "path": "mycalendarproject/templates/calendarapp/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <h1 id=\"home-title\" class=\"home-title\">Home Page</h1>\n    <p id=\"current-date\" class=\"current-date\">Current Date: {{ current_date }}</p>\n    <a id=\"calendar-link\" class=\"calendar-link\" href=\"{% url 'calendar' %}\">Access Calendar</a>\n</body>\n</html>"}, {"file": "calendar.html", "path": "mycalendarproject/templates/calendarapp/calendar.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Calendar</title>\n</head>\n<body>\n    <h1 id=\"calendar-title\" class=\"calendar-title\">Calendar</h1>\n    <ul>\n        {% for event in events %}\n        <li id=\"event-{{ event.id }}\" class=\"event\">\n            <a id=\"event-link-{{ event.id }}\" class=\"event-link\" href=\"{% url 'event_details' event.id %}\">{{ event.name }}</a> - {{ event.date }}\n        </li>\n        {% endfor %}\n    </ul>\n    <a id=\"add-event-link\" class=\"add-event-link\" href=\"{% url 'add_event' %}\">Add Event</a>\n</body>\n</html>"}, {"file": "event_details.html", "path": "mycalendarproject/templates/calendarapp/event_details.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Event Details</title>\n</head>\n<body>\n    <h1 id=\"event-name\" class=\"event-name\">{{ event.name }}</h1>\n    <p id=\"event-description\" class=\"event-description\">Description: {{ event.description }}</p>\n    <p id=\"event-date\" class=\"event-date\">Date: {{ event.date }}</p>\n    <a id=\"edit-event-link\" class=\"edit-event-link\" href=\"{% url 'edit_event' event.id %}\">Edit</a>\n    <form id=\"delete-event-form\" class=\"delete-event-form\" method=\"post\" action=\"{% url 'delete_event' event.id %}\">\n        {% csrf_token %}\n        <button type=\"submit\" id=\"delete-event-button\" class=\"delete-event-button\">Delete</button>\n    </form>\n    <a id=\"back-to-calendar-link\" class=\"back-to-calendar-link\" href=\"{% url 'calendar' %}\">Back to Calendar</a>\n</body>\n</html>"}, {"file": "add_event.html", "path": "mycalendarproject/templates/calendarapp/add_event.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Add Event</title>\n</head>\n<body>\n    <h1 id=\"add-event-title\" class=\"add-event-title\">Add Event</h1>\n    <form id=\"add-event-form\" class=\"add-event-form\" method=\"post\" action=\"\">\n        {% csrf_token %}\n        <label for=\"name\" id=\"name-label\" class=\"name-label\">Event Name:</label>\n        <input type=\"text\" id=\"name\" class=\"name\" name=\"name\" required><br>\n        <label for=\"description\" id=\"description-label\" class=\"description-label\">Description:</label>\n        <textarea id=\"description\" class=\"description\" name=\"description\" required></textarea><br>\n        <label for=\"date\" id=\"date-label\" class=\"date-label\">Date:</label>\n        <input type=\"datetime-local\" id=\"date\" class=\"date\" name=\"date\" required><br>\n        <button type=\"submit\" id=\"submit-event-button\" class=\"submit-event-button\">Add Event</button>\n    </form>\n</body>\n</html>"}], "9": [{"file": "manage.py", "path": "my_project/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "my_project/my_project/settings.py", "code": "from pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app'\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'my_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'my_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "my_project/my_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('app.urls')),\n]"}, {"file": "wsgi.py", "path": "my_project/my_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "my_project/my_project/__init__.py", "code": ""}, {"file": "apps.py", "path": "my_project/app/apps.py", "code": "from django.apps import AppConfig\n\nclass AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'"}, {"file": "views.py", "path": "my_project/app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef features(request):\n    return render(request, 'features.html')\n\ndef pricing(request):\n    return render(request, 'pricing.html')\n\ndef about_us(request):\n    return render(request, 'about_us.html')\n\ndef support(request):\n    return render(request, 'support.html')"}, {"file": "urls.py", "path": "my_project/app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about-us/', views.about_us, name='about_us'),\n    path('support/', views.support, name='support'),\n]"}, {"file": "home.html", "path": "my_project/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"product-overview\" class=\"overview\">\n        <h1>AI Chatbot Overview</h1>\n        <p>Display a brief overview of the AI Chatbot's capabilities and benefits.</p>\n    </div>\n</body>\n</html>"}, {"file": "features.html", "path": "my_project/templates/features.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Features</title>\n</head>\n<body>\n    <div id=\"key-features\" class=\"features\">\n        <h1>Key Features</h1>\n        <ul>\n            <li>Feature 1</li>\n            <li>Feature 2</li>\n            <li>Feature 3</li>\n        </ul>\n    </div>\n</body>\n</html>"}, {"file": "pricing.html", "path": "my_project/templates/pricing.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Pricing</title>\n</head>\n<body>\n    <div id=\"pricing-plans\" class=\"pricing\">\n        <h1>Pricing Plans</h1>\n        <ul>\n            <li>Plan 1: $10/month</li>\n            <li>Plan 2: $20/month</li>\n            <li>Plan 3: $30/month</li>\n        </ul>\n    </div>\n    <div id=\"contact-sales\" class=\"contact\">\n        <h2>Contact Sales</h2>\n        <form>\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\">\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\">\n            <input type=\"submit\" value=\"Submit\">\n        </form>\n    </div>\n</body>\n</html>"}, {"file": "about_us.html", "path": "my_project/templates/about_us.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About Us</title>\n</head>\n<body>\n    <div id=\"company-background\" class=\"background\">\n        <h1>About Us</h1>\n        <p>Show information about the company and team behind the AI Chatbot.</p>\n    </div>\n</body>\n</html>"}, {"file": "support.html", "path": "my_project/templates/support.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Support</title>\n</head>\n<body>\n    <div id=\"faq\" class=\"faq\">\n        <h1>FAQ</h1>\n        <ul>\n            <li>Question 1: Answer</li>\n            <li>Question 2: Answer</li>\n            <li>Question 3: Answer</li>\n        </ul>\n    </div>\n    <div id=\"support-message\" class=\"support\">\n        <h2>Support Message</h2>\n        <form>\n            <label for=\"issue\">Describe your issue:</label>\n            <textarea id=\"issue\" name=\"issue\"></textarea>\n            <input type=\"submit\" value=\"Submit\">\n        </form>\n    </div>\n</body>\n</html>"}], "10": [{"file": "settings.py", "path": "project_dir/settings.py", "code": "from pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'your_secret_key'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app_name',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'project_dir.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'project_dir.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"}, {"file": "urls.py", "path": "project_dir/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('app_name.urls')),\n]\n"}, {"file": "wsgi.py", "path": "project_dir/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project_dir.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "apps.py", "path": "app_name/apps.py", "code": "from django.apps import AppConfig\n\nclass AppNameConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app_name'\n"}, {"file": "models.py", "path": "app_name/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Meal(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=100)\n    calories = models.IntegerField()\n    date = models.DateField(auto_now_add=True)\n\nclass Activity(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=100)\n    calories_burned = models.IntegerField()\n    date = models.DateField(auto_now_add=True)\n"}, {"file": "views.py", "path": "app_name/views.py", "code": "from django.shortcuts import render, redirect\nfrom django.contrib.auth import login, authenticate, logout\nfrom django.contrib.auth.forms import UserCreationForm\nfrom .models import Meal, Activity\n\ndef home(request):\n    if request.user.is_authenticated:\n        return redirect('dashboard')\n    return render(request, 'app_name/home.html')\n\ndef signup_view(request):\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('login')\n    else:\n        form = UserCreationForm()\n    return render(request, 'app_name/signup.html', {'form': form})\n\ndef login_view(request):\n    if request.method == 'POST':\n        username = request.POST['username']\n        password = request.POST['password']\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect('dashboard')\n    return render(request, 'app_name/login.html')\n\ndef dashboard(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    meals = Meal.objects.filter(user=request.user)\n    activities = Activity.objects.filter(user=request.user)\n    return render(request, 'app_name/dashboard.html', {'meals': meals, 'activities': activities})\n"}, {"file": "urls.py", "path": "app_name/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('signup/', views.signup_view, name='signup'),\n    path('login/', views.login_view, name='login'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n]\n"}, {"file": "home.html", "path": "templates/app_name/home.html", "code": "<div id='home-page' class='page'>\n    <h1 id='welcome-message' class='message'>Welcome to the App!</h1>\n    <ul id='features-list' class='list'>\n        <li>Create an account</li>\n        <li>Log your meals and activities</li>\n        <li>Track your calorie intake</li>\n    </ul>\n    <a href='{% url 'signup' %}' id='signup-link' class='link'>Sign Up</a>\n    <a href='{% url 'login' %}' id='login-link' class='link'>Log In</a>\n</div>\n"}, {"file": "signup.html", "path": "templates/app_name/signup.html", "code": "<div id='signup-page' class='page'>\n    <h2>Create Account</h2>\n    <form method='post'>\n        {% csrf_token %}\n        {{ form.as_p }}\n        <button type='submit' id='signup-submit' class='submit'>Sign Up</button>\n    </form>\n</div>\n"}, {"file": "login.html", "path": "templates/app_name/login.html", "code": "<div id='login-page' class='page'>\n    <h2>Log In</h2>\n    <form method='post'>\n        {% csrf_token %}\n        <input type='text' name='username' placeholder='Username' id='username-field' class='input'/>\n        <input type='password' name='password' placeholder='Password' id='password-field' class='input'/>\n        <button type='submit' id='login-submit' class='submit'>Log In</button>\n    </form>\n</div>\n"}, {"file": "dashboard.html", "path": "templates/app_name/dashboard.html", "code": "<div id='dashboard-page' class='page'>\n    <h1 id='dashboard-title' class='title'>Dashboard</h1>\n    <h2 id='daily-calorie-intake' class='section-title'>Daily Calorie Intake</h2>\n    {% for meal in meals %}\n        <div id='meal-{{ meal.id }}' class='meal-item'>\n            <span class='meal-name'>{{ meal.name }}</span>\n            <span class='meal-calories'>{{ meal.calories }} kcal</span>\n        </div>\n    {% endfor %}\n    <h2 id='recent-meals-title' class='section-title'>Recent Meals</h2>\n    <h2 id='recent-activities-title' class='section-title'>Recent Activities</h2>\n    {% for activity in activities %}\n        <div id='activity-{{ activity.id }}' class='activity-item'>\n            <span class='activity-name'>{{ activity.name }}</span>\n            <span class='activity-calories'>{{ activity.calories_burned }} kcal</span>\n        </div>\n    {% endfor %}\n    <a href='{% url 'home' %}' id='home-link' class='link'>Home</a>\n</div>\n"}, {"file": "manage.py", "path": "project_dir/manage.py", "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project_dir.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()\n"}], "11": [{"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "from pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'your-secret-key'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom myapp import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\napplication = get_wsgi_application()"}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef about(request):\n    return render(request, 'about.html')"}, {"file": "home.html", "path": "myproject/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title id=\"page-title\">Home</title>\n</head>\n<body>\n    <h1 id=\"welcome-message\" class=\"welcome-class\">Welcome to the Website!</h1>\n    <form id=\"status-form\" class=\"status-form-class\">\n        <label for=\"status-select\">Select Status:</label>\n        <select id=\"status-select\" name=\"status\" class=\"status-select-class\">\n            <option value=\"select\">Select</option>\n            <option value=\"pass\">Pass</option>\n            <option value=\"fail\">Fail</option>\n        </select>\n        <button type=\"submit\" id=\"submit-button\" class=\"submit-button-class\">Submit</button>\n    </form>\n    <br>\n    <label for=\"review-notes\">Review Notes:</label><br>\n    <textarea id=\"review-notes\" class=\"review-notes-class\"></textarea>\n</body>\n</html>"}, {"file": "about.html", "path": "myproject/templates/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title id=\"about-title\">About</title>\n</head>\n<body>\n    <h1 id=\"about-header\" class=\"about-class\">About This Website</h1>\n    <p id=\"about-description\" class=\"about-description-class\">This page contains information about the website's functions and other important details.</p>\n</body>\n</html>"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}], "12": [{"file": "manage.py", "path": "expense_project/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "expense_project/expense_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'home',\n    'employee_portal',\n    'admin_portal',\n    'budget_control',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'expense_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'expense_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "expense_project/expense_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('home/', include('home.urls')),\n    path('employee/', include('employee_portal.urls')),\n    path('admin_portal/', include('admin_portal.urls')),\n    path('budget_control/', include('budget_control.urls')),\n]"}, {"file": "wsgi.py", "path": "expense_project/expense_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "expense_project/expense_project/__init__.py", "code": ""}, {"file": "urls.py", "path": "expense_project/home/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.view_home, name='view_home'),\n    path('signup/', views.sign_up, name='sign_up'),\n    path('login/', views.log_in, name='log_in'),\n]"}, {"file": "views.py", "path": "expense_project/home/views.py", "code": "from django.shortcuts import render, redirect\n\n\ndef view_home(request):\n    return render(request, 'home/view_home.html')\n\n\ndef sign_up(request):\n    return render(request, 'home/sign_up.html')\n\n\ndef log_in(request):\n    return render(request, 'home/log_in.html')"}, {"file": "view_home.html", "path": "expense_project/templates/home/view_home.html", "code": "<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"homePage\" class=\"home-page\">\n        <h1 id=\"welcomeMessage\" class=\"welcome-message\">Welcome to the Expense Management System</h1>\n        <a id=\"loginLink\" class=\"login-link\" href=\"{% url 'log_in' %}\">Log In</a>\n        <a id=\"signupLink\" class=\"signup-link\" href=\"{% url 'sign_up' %}\">Sign Up</a>\n    </div>\n</body>\n</html>"}, {"file": "sign_up.html", "path": "expense_project/templates/home/sign_up.html", "code": "<html>\n<head>\n    <title>Sign Up</title>\n</head>\n<body>\n    <form id=\"signUpForm\" class=\"signup-form\">\n        <!-- Sign Up Form Fields -->\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>"}, {"file": "log_in.html", "path": "expense_project/templates/home/log_in.html", "code": "<html>\n<head>\n    <title>Log In</title>\n</head>\n<body>\n    <form id=\"loginForm\" class=\"login-form\">\n        <!-- Log In Form Fields -->\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>"}, {"file": "apps.py", "path": "expense_project/home/apps.py", "code": "from django.apps import AppConfig\n\n\nclass HomeConfig(AppConfig):\n    name = 'home'"}, {"file": "__init__.py", "path": "expense_project/home/__init__.py", "code": ""}, {"file": "apps.py", "path": "expense_project/employee_portal/apps.py", "code": "from django.apps import AppConfig\n\n\nclass EmployeePortalConfig(AppConfig):\n    name = 'employee_portal'"}, {"file": "urls.py", "path": "expense_project/employee_portal/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('submit_claim/', views.submit_claim, name='submit_claim'),\n    path('view_status/', views.view_claim_status, name='view_claim_status'),\n    path('edit_claim/', views.edit_submitted_claim, name='edit_submitted_claim'),\n]"}, {"file": "views.py", "path": "expense_project/employee_portal/views.py", "code": "from django.shortcuts import render\n\n\ndef submit_claim(request):\n    return render(request, 'employee_portal/submit_claim.html')\n\n\ndef view_claim_status(request):\n    return render(request, 'employee_portal/view_claim_status.html')\n\n\ndef edit_submitted_claim(request):\n    return render(request, 'employee_portal/edit_submitted_claim.html')"}, {"file": "submit_claim.html", "path": "expense_project/templates/employee_portal/submit_claim.html", "code": "<html>\n<head>\n    <title>Submit Claim</title>\n</head>\n<body>\n    <form id=\"submitClaimForm\" class=\"submit-claim-form\">\n        <!-- Claim Form Fields -->\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>"}, {"file": "view_claim_status.html", "path": "expense_project/templates/employee_portal/view_claim_status.html", "code": "<html>\n<head>\n    <title>View Claim Status</title>\n</head>\n<body>\n    <div id=\"claimStatus\" class=\"claim-status\">\n        <!-- Claim Status Display -->\n    </div>\n</body>\n</html>"}, {"file": "edit_submitted_claim.html", "path": "expense_project/templates/employee_portal/edit_submitted_claim.html", "code": "<html>\n<head>\n    <title>Edit Submitted Claim</title>\n</head>\n<body>\n    <form id=\"editClaimForm\" class=\"edit-claim-form\">\n        <!-- Edit Claim Form Fields -->\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>"}, {"file": "__init__.py", "path": "expense_project/employee_portal/__init__.py", "code": ""}, {"file": "apps.py", "path": "expense_project/admin_portal/apps.py", "code": "from django.apps import AppConfig\n\n\nclass AdminPortalConfig(AppConfig):\n    name = 'admin_portal'"}, {"file": "urls.py", "path": "expense_project/admin_portal/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('approve_claim/', views.approve_claim, name='approve_claim'),\n    path('reject_claim/', views.reject_claim, name='reject_claim_with_reason'),\n    path('view_claim_details/', views.view_claim_details, name='view_claim_details'),\n    path('search_filter_claims/', views.search_and_filter_claims, name='search_and_filter_claims'),\n]"}, {"file": "views.py", "path": "expense_project/admin_portal/views.py", "code": "from django.shortcuts import render\n\n\ndef approve_claim(request):\n    return render(request, 'admin_portal/approve_claim.html')\n\n\ndef reject_claim(request):\n    return render(request, 'admin_portal/reject_claim.html')\n\n\ndef view_claim_details(request):\n    return render(request, 'admin_portal/view_claim_details.html')\n\n\ndef search_and_filter_claims(request):\n    return render(request, 'admin_portal/search_filter_claims.html')"}, {"file": "approve_claim.html", "path": "expense_project/templates/admin_portal/approve_claim.html", "code": "<html>\n<head>\n    <title>Approve Claim</title>\n</head>\n<body>\n    <div id=\"approveClaim\" class=\"approve-claim\">\n        <!-- Claim Approval Interface -->\n    </div>\n</body>\n</html>"}, {"file": "reject_claim.html", "path": "expense_project/templates/admin_portal/reject_claim.html", "code": "<html>\n<head>\n    <title>Reject Claim</title>\n</head>\n<body>\n    <form id=\"rejectClaimForm\" class=\"reject-claim-form\">\n        <!-- Reason for Rejection -->\n        <button type=\"submit\">Submit</button>\n    </form>\n</body>\n</html>"}, {"file": "view_claim_details.html", "path": "expense_project/templates/admin_portal/view_claim_details.html", "code": "<html>\n<head>\n    <title>View Claim Details</title>\n</head>\n<body>\n    <div id=\"claimDetails\" class=\"claim-details\">\n        <!-- Detailed Claim Information -->\n    </div>\n</body>\n</html>"}, {"file": "search_filter_claims.html", "path": "expense_project/templates/admin_portal/search_filter_claims.html", "code": "<html>\n<head>\n    <title>Search and Filter Claims</title>\n</head>\n<body>\n    <div id=\"filterClaims\" class=\"filter-claims\">\n        <!-- Filter Interface -->\n    </div>\n</body>\n</html>"}, {"file": "__init__.py", "path": "expense_project/admin_portal/__init__.py", "code": ""}, {"file": "apps.py", "path": "expense_project/budget_control/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BudgetControlConfig(AppConfig):\n    name = 'budget_control'"}, {"file": "urls.py", "path": "expense_project/budget_control/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('analyze_balances/', views.analyze_expense_balances, name='analyze_expense_balances'),\n    path('generate_reports/', views.generate_reports, name='generate_reports'),\n    path('set_budget_limits/', views.set_budget_limits, name='set_budget_limits'),\n    path('send_budget_alerts/', views.send_budget_alerts, name='send_budget_alerts'),\n]"}, {"file": "views.py", "path": "expense_project/budget_control/views.py", "code": "from django.shortcuts import render\n\n\ndef analyze_expense_balances(request):\n    return render(request, 'budget_control/analyze_expense_balances.html')\n\n\ndef generate_reports(request):\n    return render(request, 'budget_control/generate_reports.html')\n\n\ndef set_budget_limits(request):\n    return render(request, 'budget_control/set_budget_limits.html')\n\n\ndef send_budget_alerts(request):\n    return render(request, 'budget_control/send_budget_alerts.html')"}, {"file": "analyze_expense_balances.html", "path": "expense_project/templates/budget_control/analyze_expense_balances.html", "code": "<html>\n<head>\n    <title>Analyze Expense Balances</title>\n</head>\n<body>\n    <div id=\"analyzeBalances\" class=\"analyze-balances\">\n        <!-- Analysis Interface -->\n    </div>\n</body>\n</html>"}, {"file": "generate_reports.html", "path": "expense_project/templates/budget_control/generate_reports.html", "code": "<html>\n<head>\n    <title>Generate Reports</title>\n</head>\n<body>\n    <div id=\"generateReports\" class=\"generate-reports\">\n        <!-- Report Generation Interface -->\n    </div>\n</body>\n</html>"}, {"file": "set_budget_limits.html", "path": "expense_project/templates/budget_control/set_budget_limits.html", "code": "<html>\n<head>\n    <title>Set Budget Limits</title>\n</head>\n<body>\n    <form id=\"setBudgetLimitsForm\" class=\"set-budget-limits-form\">\n        <!-- Budget Limit Fields -->\n        <button type=\"submit\">Set Limits</button>\n    </form>\n</body>\n</html>"}, {"file": "send_budget_alerts.html", "path": "expense_project/templates/budget_control/send_budget_alerts.html", "code": "<html>\n<head>\n    <title>Send Budget Alerts</title>\n</head>\n<body>\n    <div id=\"budgetAlerts\" class=\"budget-alerts\">\n        <!-- Alert Management Interface -->\n    </div>\n</body>\n</html>"}, {"file": "__init__.py", "path": "expense_project/budget_control/__init__.py", "code": ""}], "13": [{"file": "manage.py", "path": "myproject/manage.py", "code": "# manage.py\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError('Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?') from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "# settings.py\nimport os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'customer_management',\n    'product_management',\n    'purchase_records',\n    'preferred_products',\n    'sales_analysis',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "# urls.py\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('customers/', include('customer_management.urls')),\n    path('products/', include('product_management.urls')),\n    path('purchases/', include('purchase_records.urls')),\n    path('preferred-products/', include('preferred_products.urls')),\n    path('sales-analysis/', include('sales_analysis.urls')),\n]\n"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "# wsgi.py\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": "# __init__.py\n"}, {"file": "admin.py", "path": "myproject/customer_management/admin.py", "code": "# admin.py\nfrom django.contrib import admin\nfrom .models import Customer\n\nadmin.site.register(Customer)\n"}, {"file": "apps.py", "path": "myproject/customer_management/apps.py", "code": "# apps.py\nfrom django.apps import AppConfig\n\nclass CustomerManagementConfig(AppConfig):\n    name = 'customer_management'\n"}, {"file": "models.py", "path": "myproject/customer_management/models.py", "code": "# models.py\nfrom django.db import models\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=100)\n    birthday = models.DateField()\n    age = models.IntegerField()\n    sex = models.CharField(max_length=10)\n    company = models.CharField(max_length=100)\n    phone_number = models.CharField(max_length=15)\n\n    def __str__(self):\n        return self.name\n"}, {"file": "urls.py", "path": "myproject/customer_management/urls.py", "code": "# urls.py\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('add/', views.add_customer, name='add_customer'),\n    path('edit/<int:id>/', views.edit_customer, name='edit_customer'),\n    path('delete/<int:id>/', views.delete_customer, name='delete_customer'),\n    path('<int:id>/', views.view_customer, name='view_customer'),\n]\n"}, {"file": "views.py", "path": "myproject/customer_management/views.py", "code": "# views.py\nfrom django.shortcuts import render, get_object_or_404\nfrom .models import Customer\n\ndef add_customer(request):\n    # Logic for adding customer\n    return render(request, 'customer_management/add_customer.html')\n\ndef edit_customer(request, id):\n    # Logic for editing customer\n    customer = get_object_or_404(Customer, pk=id)\n    return render(request, 'customer_management/edit_customer.html', {'customer': customer})\n\ndef delete_customer(request, id):\n    # Logic for deleting customer\n    customer = get_object_or_404(Customer, pk=id)\n    return render(request, 'customer_management/delete_customer.html', {'customer': customer})\n\ndef view_customer(request, id):\n    # Logic for viewing customer\n    customer = get_object_or_404(Customer, pk=id)\n    return render(request, 'customer_management/view_customer.html', {'customer': customer})\n"}, {"file": "add_customer.html", "path": "myproject/customer_management/templates/customer_management/add_customer.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Add Customer</title>\n</head>\n<body>\n    <form id=\"add-customer-form\" class=\"customer-form\">\n        <!-- Form Fields for Name, Birthday, Age, etc. -->\n    </form>\n</body>\n</html>\n"}, {"file": "edit_customer.html", "path": "myproject/customer_management/templates/customer_management/edit_customer.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Edit Customer</title>\n</head>\n<body>\n    <form id=\"edit-customer-form\" class=\"customer-form\">\n        <!-- Form Fields for Name, Birthday, Age, etc. -->\n    </form>\n</body>\n</html>\n"}, {"file": "delete_customer.html", "path": "myproject/customer_management/templates/customer_management/delete_customer.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Delete Customer</title>\n</head>\n<body>\n    <div id=\"delete-customer-container\" class=\"delete-container\">\n        <!-- Logic to confirm deletion -->\n    </div>\n</body>\n</html>\n"}, {"file": "view_customer.html", "path": "myproject/customer_management/templates/customer_management/view_customer.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>View Customer</title>\n</head>\n<body>\n    <div id=\"view-customer-info\" class=\"customer-info\">\n        <!-- Display Customer Information -->\n    </div>\n</body>\n</html>\n"}], "14": [{"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef hello_world(request):\n    return render(request, 'hello_world.html')"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.hello_world, name='hello_world'),\n]"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "manage.py", "path": "myproject/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "hello_world.html", "path": "myproject/templates/hello_world.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hello World</title>\n    <style>\n        #hello-world-text {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            font-family: Arial, sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"hello-world-text\" class=\"responsive-text\">\n        Hello World\n    </div>\n</body>\n</html>"}], "15": [{"file": "manage.py", "path": "hello_world/manage.py", "code": "import os\nimport sys\n\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hello_world.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "settings.py", "path": "hello_world/hello_world/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main'\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'hello_world.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'hello_world.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "hello_world/hello_world/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom main import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('helloworld/', views.hello_world, name='hello_world'),\n]\n"}, {"file": "wsgi.py", "path": "hello_world/hello_world/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hello_world.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "apps.py", "path": "hello_world/main/apps.py", "code": "from django.apps import AppConfig\n\n\nclass MainConfig(AppConfig):\n    name = 'main'\n"}, {"file": "views.py", "path": "hello_world/main/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'home.html')\n\n\ndef hello_world(request):\n    return render(request, 'hello_world.html')\n"}, {"file": "home.html", "path": "hello_world/main/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <h1 id=\"home-title\" class=\"title\">Home Page</h1>\n    <button id=\"to-helloworld-btn\" class=\"btn\"><a href=\"{% url 'hello_world' %}\">Go to HelloWorld Page</a></button>\n</body>\n</html>\n"}, {"file": "hello_world.html", "path": "hello_world/main/templates/hello_world.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>HelloWorld</title>\n</head>\n<body>\n    <h1 id=\"hello-world-title\" class=\"title\">HelloWorld Page</h1>\n    <p id=\"hello-world-message\" class=\"message\">HelloWorld</p>\n</body>\n</html>\n"}, {"file": "models.py", "path": "hello_world/main/models.py", "code": ""}, {"file": "admin.py", "path": "hello_world/main/admin.py", "code": ""}, {"file": "tests.py", "path": "hello_world/main/tests.py", "code": ""}, {"file": "__init__.py", "path": "hello_world/main/__init__.py", "code": ""}, {"file": "__init__.py", "path": "hello_world/hello_world/__init__.py", "code": ""}], "16": [{"file": "file_validator.py", "path": "project_module/input_validation/file_validator.py", "code": "import os\nimport pandas as pd\n\nclass FileValidator:\n    REQUIRED_HEADERS = ['#', 'Name', 'Weekday', 'Time']\n    VALID_TIME_PERIODS = ['First period', 'Second period', 'Third period', 'Fourth period']\n\n    def check_file_existence(self, file_path):\n        \"\"\"Ensure that 'Spring Semester Subjects.xlsx' file exists.\"\"\"\n        return os.path.exists(file_path)\n\n    def validate_headers(self, df):\n        \"\"\"Verify that the file headers are ['#', 'Name', 'Weekday', 'Time'].\"\"\"\n        return list(df.columns) == self.REQUIRED_HEADERS\n\n    def validate_time_column(self, df):\n        \"\"\"Check if the 'Time' column contains only ['First period', 'Second period', 'Third period', 'Fourth period'].\"\"\"\n        return df['Time'].isin(self.VALID_TIME_PERIODS).all()\n\n    def validate_data_integrity(self, df):\n        \"\"\"Ensure that all columns have the correct and complete data without any missing fields.\"\"\"\n        return not df.isnull().values.any()\n\n    def validate_null_value(self, df):\n        \"\"\"Check if there are any missing value in the table.\"\"\"\n        return df.isnull().sum().sum() == 0\n"}, {"file": "data_transformer.py", "path": "project_module/data_transformation/data_transformer.py", "code": "import pandas as pd\n\nclass DataTransformer:\n    def transform_to_two_dimension_table(self, df):\n        \"\"\"Convert the list of subjects into a two-dimensional table format.\"\"\"\n        return df.pivot(index='Weekday', columns='Time', values='Name')\n\n    def data_mapping(self, df):\n        \"\"\"Map data correctly into the two-dimensional table based on weekday and time period.\"\"\"\n        return self.transform_to_two_dimension_table(df)\n"}, {"file": "output_creator.py", "path": "project_module/output_creation/output_creator.py", "code": "import pandas as pd\n\nclass OutputCreator:\n    def create_output_excel_file(self, file_path):\n        \"\"\"Generate a new Excel file for the transformed two-dimensional subject table.\"\"\"\n        writer = pd.ExcelWriter(file_path, engine='xlsxwriter')\n        return writer\n\n    def save_table_to_excel(self, writer, df):\n        \"\"\"Save the two-dimensional table data into the newly created Excel file.\"\"\"\n        df.to_excel(writer, sheet_name='Transformed Subjects')\n        writer.save()\n"}, {"file": "main.py", "path": "project_module/main.py", "code": "import pandas as pd\nfrom input_validation.file_validator import FileValidator\nfrom data_transformation.data_transformer import DataTransformer\nfrom output_creation.output_creator import OutputCreator\n\nINPUT_FILE = 'Spring Semester Subjects.xlsx'\nOUTPUT_FILE = 'Transformed_Spring_Semester_Subjects.xlsx'\n\nif __name__ == '__main__':\n    validator = FileValidator()\n    transformer = DataTransformer()\n    creator = OutputCreator()\n\n    if not validator.check_file_existence(INPUT_FILE):\n        raise FileNotFoundError(f\"{INPUT_FILE} does not exist.\")\n\n    df = pd.read_excel(INPUT_FILE)\n\n    if not validator.validate_headers(df):\n        raise ValueError(\"File headers are incorrect.\")\n    if not validator.validate_time_column(df):\n        raise ValueError(\"Time column contains invalid periods.\")\n    if not validator.validate_data_integrity(df):\n        raise ValueError(\"Data integrity validation failed.\")\n    if not validator.validate_null_value(df):\n        raise ValueError(\"File contains missing values.\")\n\n    transformed_df = transformer.data_mapping(df)\n\n    writer = creator.create_output_excel_file(OUTPUT_FILE)\n    creator.save_table_to_excel(writer, transformed_df)\n    print(f\"Output saved to {OUTPUT_FILE}\")\n"}], "17": [{"file": "main.py", "path": "src/main.py", "code": "from data_preparation import prepare_data\nfrom model_creation import create_logistic_model, generate_model_summary\nfrom output import write_summary\n\n# Main function to run the project\nif __name__ == '__main__':\n    dataset = prepare_data()\n    model = create_logistic_model(dataset)\n    summary = generate_model_summary(model)\n    write_summary(summary)\n"}, {"file": "data_preparation.py", "path": "src/data_preparation.py", "code": "import pandas as pd\n\ndef prepare_data():\n    # Load the dataset\n    df = pd.read_excel('Gamedata.xlsx')\n    # Check for null values\n    if df.isnull().values.any():\n        raise ValueError('Dataset contains null values, process cannot continue.')\n    # Lag the dependent variable\n    df['result_lag'] = df['result'].shift(1)\n    # Drop first row with NaN in lagged column\n    df = df.dropna()\n    # Prepare independent variables\n    X = df.drop(columns=['result'])\n    y = df['result_lag']\n    return X, y\n"}, {"file": "model_creation.py", "path": "src/model_creation.py", "code": "from sklearn.linear_model import LogisticRegression\nimport statsmodels.api as sm\n\ndef create_logistic_model(X, y):\n    model = sm.Logit(y, X)\n    result = model.fit()\n    return result\n\ndef generate_model_summary(model):\n    return model.summary()\n"}, {"file": "output.py", "path": "src/output.py", "code": "def write_summary(summary):\n    with open('Logistic.xlsx', 'w') as f:\n        f.write(str(summary))\n"}, {"file": "requirements.txt", "path": "requirements.txt", "code": "pandas\nopenpyxl\nscikit-learn\nstatsmodels\n"}, {"file": "index.html", "path": "html/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Model Summary</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n</head>\n<body>\n    <div id=\"main-container\" class=\"container\">\n        <h1 id=\"title\" class=\"title\">Logistic Model Summary</h1>\n        <div id=\"summary\" class=\"summary\">\n            <p>Output the model summary to 'Logistic.xlsx'.</p>\n        </div>\n    </div>\n</body>\n</html>\n"}, {"file": "style.css", "path": "html/style.css", "code": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\n.container {\n    padding: 20px;\n}\n\n.title {\n    color: #333;\n}\n\n.summary {\n    background-color: #f4f4f4;\n    padding: 10px;\n    border-radius: 5px;\n}\n"}], "18": [{"file": "index.html", "path": "src/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Game Interface</title>\n    <link rel=\"stylesheet\" href=\"styles/style.css\">\n</head>\n<body>\n    <div id=\"main-menu\" class=\"menu\">\n        <button id=\"start-game\" class=\"menu-button\">Start Game</button>\n        <button id=\"instructions\" class=\"menu-button\">Instructions</button>\n        <button id=\"exit-game\" class=\"menu-button\">Exit Game</button>\n    </div>\n    <div id=\"game-environment\" class=\"environment\" style=\"display:none;\">\n        <button id=\"move-player\" class=\"game-button\">Move Player</button>\n        <button id=\"look-around\" class=\"game-button\">Look Around</button>\n        <button id=\"pick-item\" class=\"game-button\">Pick Item</button>\n        <button id=\"check-inventory\" class=\"game-button\">Check Inventory</button>\n    </div>\n    <div id=\"help-support\" class=\"help\" style=\"display:none;\">\n        <button id=\"display-help\" class=\"help-button\">Display Help</button>\n    </div>\n    <script src=\"scripts/app.js\"></script>\n</body>\n</html>"}, {"file": "style.css", "path": "src/styles/style.css", "code": "body {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f4f4f4;\n    margin: 0;\n}\n.menu, .environment, .help {\n    text-align: center;\n}\n.menu-button, .game-button, .help-button {\n    display: block;\n    margin: 10px;\n    padding: 10px 20px;\n    font-size: 16px;\n    cursor: pointer;\n}\n.menu-button:hover, .game-button:hover, .help-button:hover {\n    background-color: #ddd;\n}"}, {"file": "app.js", "path": "src/scripts/app.js", "code": "document.getElementById('start-game').addEventListener('click', startGame);\ndocument.getElementById('instructions').addEventListener('click', showInstructions);\ndocument.getElementById('exit-game').addEventListener('click', exitGame);\ndocument.getElementById('move-player').addEventListener('click', movePlayer);\ndocument.getElementById('look-around').addEventListener('click', lookAround);\ndocument.getElementById('pick-item').addEventListener('click', pickItem);\ndocument.getElementById('check-inventory').addEventListener('click', checkInventory);\ndocument.getElementById('display-help').addEventListener('click', displayHelp);\n\nfunction startGame() {\n    console.log('Game started');\n    toggleVisibility('main-menu', 'game-environment');\n}\n\nfunction showInstructions() {\n    alert('Game Instructions: Use the buttons to interact with the game.');\n}\n\nfunction exitGame() {\n    if (confirm('Are you sure you want to exit the game?')) {\n        window.close();\n    }\n}\n\nfunction movePlayer() {\n    console.log('Player moved');\n}\n\nfunction lookAround() {\n    console.log('Looking around');\n}\n\nfunction pickItem() {\n    console.log('Item picked up');\n}\n\nfunction checkInventory() {\n    console.log('Checking inventory');\n}\n\nfunction displayHelp() {\n    console.log('Displaying help');\n    toggleVisibility('game-environment', 'help-support');\n}\n\nfunction toggleVisibility(hideId, showId) {\n    document.getElementById(hideId).style.display = 'none';\n    document.getElementById(showId).style.display = 'block';\n}"}], "20": [{"file": "manage.py", "path": "myblog/manage.py", "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myblog.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "myblog/myblog/__init__.py", "code": ""}, {"file": "settings.py", "path": "myblog/myblog/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key-here'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'blog',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myblog.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myblog.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myblog/myblog/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n]"}, {"file": "wsgi.py", "path": "myblog/myblog/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myblog.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myblog/blog/__init__.py", "code": ""}, {"file": "admin.py", "path": "myblog/blog/admin.py", "code": "from django.contrib import admin\nfrom .models import BlogPost, Category, Comment\n\nadmin.site.register(BlogPost)\nadmin.site.register(Category)\nadmin.site.register(Comment)"}, {"file": "apps.py", "path": "myblog/blog/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BlogConfig(AppConfig):\n    name = 'blog'"}, {"file": "models.py", "path": "myblog/blog/models.py", "code": "from django.db import models\nfrom django.utils import timezone\n\n\nclass Category(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n\nclass BlogPost(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    created_at = models.DateTimeField(default=timezone.now)\n    updated_at = models.DateTimeField(auto_now=True)\n    category = models.ForeignKey(Category, related_name='posts', on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n\n\nclass Comment(models.Model):\n    post = models.ForeignKey(BlogPost, related_name='comments', on_delete=models.CASCADE)\n    author = models.CharField(max_length=100)\n    text = models.TextField()\n    created_at = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return f'Comment by {self.author}'"}, {"file": "views.py", "path": "myblog/blog/views.py", "code": "from django.shortcuts import render, get_object_or_404, redirect\nfrom .models import BlogPost, Category, Comment\n\n\ndef home(request):\n    latest_posts = BlogPost.objects.order_by('-created_at')[:5]\n    return render(request, 'blog/home.html', {'latest_posts': latest_posts})\n\n\ndef blog_post_detail(request, post_id):\n    post = get_object_or_404(BlogPost, id=post_id)\n    if request.method == 'POST':\n        author = request.POST.get('author')\n        text = request.POST.get('text')\n        Comment.objects.create(post=post, author=author, text=text)\n    return render(request, 'blog/blog_post_detail.html', {'post': post})\n\n\ndef add_post(request):\n    if request.method == 'POST':\n        title = request.POST.get('title')\n        content = request.POST.get('content')\n        category_id = request.POST.get('category')\n        category = get_object_or_404(Category, id=category_id)\n        BlogPost.objects.create(title=title, content=content, category=category)\n        return redirect('home')\n    categories = Category.objects.all()\n    return render(request, 'blog/add_post.html', {'categories': categories})\n\n\ndef manage_post(request, post_id):\n    post = get_object_or_404(BlogPost, id=post_id)\n    if request.method == 'POST':\n        post.title = request.POST.get('title')\n        post.content = request.POST.get('content')\n        post.save()\n        return redirect('home')\n    categories = Category.objects.all()\n    return render(request, 'blog/manage_post.html', {'post': post, 'categories': categories})\n\n\ndef manage_comments(request, comment_id):\n    comment = get_object_or_404(Comment, id=comment_id)\n    if request.method == 'POST':\n        comment.delete()\n        return redirect('blog_post_detail', post_id=comment.post.id)\n    return render(request, 'blog/manage_comments.html', {'comment': comment})\n\n\ndef categories(request):\n    categories = Category.objects.all()\n    return render(request, 'blog/categories.html', {'categories': categories})\n\n\ndef filter_by_category(request, category_id):\n    category = get_object_or_404(Category, id=category_id)\n    posts = BlogPost.objects.filter(category=category)\n    return render(request, 'blog/filter_by_category.html', {'category': category, 'posts': posts})\n\n\ndef about(request):\n    return render(request, 'blog/about.html')\n\n\ndef contact(request):\n    if request.method == 'POST':\n        # Handle contact form submission\n        pass\n    return render(request, 'blog/contact.html')\n\n\ndef archive(request):\n    posts = BlogPost.objects.order_by('-created_at')\n    return render(request, 'blog/archive.html', {'posts': posts})\n"}, {"file": "urls.py", "path": "myblog/blog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('post/<int:post_id>/', views.blog_post_detail, name='blog_post_detail'),\n    path('add/', views.add_post, name='add_post'),\n    path('manage/<int:post_id>/', views.manage_post, name='manage_post'),\n    path('manage/comments/<int:comment_id>/', views.manage_comments, name='manage_comments'),\n    path('categories/', views.categories, name='categories'),\n    path('category/<int:category_id>/', views.filter_by_category, name='filter_by_category'),\n    path('about/', views.about, name='about'),\n    path('contact/', views.contact, name='contact'),\n    path('archive/', views.archive, name='archive'),\n]"}, {"file": "home.html", "path": "myblog/templates/blog/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home - My Blog</title>\n</head>\n<body>\n    <header>\n        <h1>Welcome to My Blog</h1>\n    </header>\n    <section id=\"latest-blogs\" class=\"section-latest-blogs\">\n        <h2>Latest Blogs</h2>\n        <ul>\n            {% for post in latest_posts %}\n            <li><a href=\"{% url 'blog_post_detail' post.id %}\">{{ post.title }}</a> - {{ post.created_at }}</li>\n            {% endfor %}\n        </ul>\n    </section>\n    <section id=\"search-bar\" class=\"section-search\">\n        <h2>Search</h2>\n        <form method=\"get\" action=\"{% url 'home' %}\">\n            <input type=\"text\" name=\"q\" placeholder=\"Search blog...\">\n            <input type=\"submit\" value=\"Search\">\n        </form>\n    </section>\n</body>\n</html>"}, {"file": "blog_post_detail.html", "path": "myblog/templates/blog/blog_post_detail.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{{ post.title }} - My Blog</title>\n</head>\n<body>\n    <article id=\"blog-post\" class=\"article-blog-post\">\n        <h1>{{ post.title }}</h1>\n        <p>{{ post.content }}</p>\n    </article>\n    <section id=\"comments-section\" class=\"section-comments\">\n        <h2>Comments</h2>\n        <ul>\n            {% for comment in post.comments.all %}\n            <li>{{ comment.author }}: {{ comment.text }} <form action=\"{% url 'manage_comments' comment.id %}\" method=\"post\">{% csrf_token %}<button type=\"submit\">Delete</button></form></li>\n            {% endfor %}\n        </ul>\n        <h3>Add a Comment</h3>\n        <form method=\"post\">\n            {% csrf_token %}\n            <input type=\"text\" name=\"author\" placeholder=\"Your name\">\n            <textarea name=\"text\" placeholder=\"Your comment\"></textarea>\n            <input type=\"submit\" value=\"Add Comment\">\n        </form>\n    </section>\n</body>\n</html>"}, {"file": "add_post.html", "path": "myblog/templates/blog/add_post.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Add Post - My Blog</title>\n</head>\n<body>\n    <h1>Add New Post</h1>\n    <form method=\"post\">\n        {% csrf_token %}\n        <input type=\"text\" name=\"title\" placeholder=\"Title\">\n        <textarea name=\"content\" placeholder=\"Content\"></textarea>\n        <select name=\"category\">\n            {% for category in categories %}\n            <option value=\"{{ category.id }}\">{{ category.name }}</option>\n            {% endfor %}\n        </select>\n        <input type=\"submit\" value=\"Add Post\">\n    </form>\n</body>\n</html>"}, {"file": "manage_post.html", "path": "myblog/templates/blog/manage_post.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Manage Post - My Blog</title>\n</head>\n<body>\n    <h1>Manage Post: {{ post.title }}</h1>\n    <form method=\"post\">\n        {% csrf_token %}\n        <input type=\"text\" name=\"title\" value=\"{{ post.title }}\" placeholder=\"Title\">\n        <textarea name=\"content\" placeholder=\"Content\">{{ post.content }}</textarea>\n        <select name=\"category\">\n            {% for category in categories %}\n            <option value=\"{{ category.id }}\"{% if category.id == post.category.id %} selected{% endif %}>{{ category.name }}</option>\n            {% endfor %}\n        </select>\n        <input type=\"submit\" value=\"Update Post\">\n    </form>\n</body>\n</html>"}, {"file": "manage_comments.html", "path": "myblog/templates/blog/manage_comments.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Manage Comment - My Blog</title>\n</head>\n<body>\n    <h1>Manage Comment</h1>\n    <p>Are you sure you want to delete this comment?</p>\n    <form method=\"post\">\n        {% csrf_token %}\n        <button type=\"submit\">Yes, Delete</button>\n    </form>\n</body>\n</html>"}, {"file": "categories.html", "path": "myblog/templates/blog/categories.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Categories - My Blog</title>\n</head>\n<body>\n    <h1>Blog Categories</h1>\n    <ul>\n        {% for category in categories %}\n        <li><a href=\"{% url 'filter_by_category' category.id %}\">{{ category.name }}</a></li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "filter_by_category.html", "path": "myblog/templates/blog/filter_by_category.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{{ category.name }} - My Blog</title>\n</head>\n<body>\n    <h1>Posts in category: {{ category.name }}</h1>\n    <ul>\n        {% for post in posts %}\n        <li><a href=\"{% url 'blog_post_detail' post.id %}\">{{ post.title }}</a> - {{ post.created_at }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "about.html", "path": "myblog/templates/blog/about.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>About - My Blog</title>\n</head>\n<body>\n    <h1>About the Author</h1>\n    <p>This is where the author or team description will go.</p>\n</body>\n</html>"}, {"file": "contact.html", "path": "myblog/templates/blog/contact.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Contact - My Blog</title>\n</head>\n<body>\n    <h1>Contact Us</h1>\n    <form method=\"post\">\n        {% csrf_token %}\n        <input type=\"text\" name=\"name\" placeholder=\"Your Name\">\n        <input type=\"email\" name=\"email\" placeholder=\"Your Email\">\n        <textarea name=\"message\" placeholder=\"Your Message\"></textarea>\n        <input type=\"submit\" value=\"Send Message\">\n    </form>\n</body>\n</html>"}, {"file": "archive.html", "path": "myblog/templates/blog/archive.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Archive - My Blog</title>\n</head>\n<body>\n    <h1>Archived Posts</h1>\n    <ul>\n        {% for post in posts %}\n        <li><a href=\"{% url 'blog_post_detail' post.id %}\">{{ post.title }}</a> - {{ post.created_at }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}]}