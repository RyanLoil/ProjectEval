{"1": [{"file": "manage.py", "path": "manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "bmi_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'thisisasecretkey'  # Replace with a strong, random key in production\n\nDEBUG = True  # Set to False in production\n\nALLOWED_HOSTS = ['*']  # Configure allowed hosts appropriately in production\n\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'bmi_calculator',  # Add your app here\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"static\"),\n]\n"}, {"file": "urls.py", "path": "bmi_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('bmi_calculator.urls')),  # Include app-level URLs\n]"}, {"file": "wsgi.py", "path": "bmi_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "bmi_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "bmi_calculator/__init__.py", "code": ""}, {"file": "apps.py", "path": "bmi_calculator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BmiCalculatorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'bmi_calculator'"}, {"file": "models.py", "path": "bmi_calculator/models.py", "code": "from django.db import models\n\n# No models needed for this simple calculator, but you'd put them here if you needed to store data persistently."}, {"file": "views.py", "path": "bmi_calculator/views.py", "code": "from django.shortcuts import render\n\ndef calculate_bmi(request):\n    bmi = None\n    message = ''\n    if request.method == 'POST':\n        try:\n          weight_kg = float(request.POST.get('weight'))\n          height_m = float(request.POST.get('height')) / 100  # Convert cm to meters\n\n          if weight_kg > 0 and height_m > 0:\n              bmi = weight_kg / (height_m * height_m)\n              bmi = round(bmi, 2)  # Round to two decimal places\n\n              if bmi < 18.5:\n                  message = 'Underweight'\n              elif 18.5 <= bmi < 25:\n                  message = 'Normal weight'\n              elif 25 <= bmi < 30:\n                  message = 'Overweight'\n              else:\n                  message = 'Obese'\n          else:\n             message = 'Please enter valid weight and height.'\n\n        except (ValueError, TypeError):\n          message = 'Invalid input. Please enter numeric values for weight and height.'\n\n\n    return render(request, 'bmi_calculator/bmi_form.html', {'bmi': bmi, 'message': message})\n"}, {"file": "urls.py", "path": "bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.calculate_bmi, name='calculate_bmi'),\n]"}, {"file": "admin.py", "path": "bmi_calculator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "bmi_form.html", "path": "templates/bmi_calculator/bmi_form.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator</title>\n    <link rel=\"stylesheet\" href=\"/static/css/style.css\">  \n</head>\n<body>\n    <div class=\"container\">\n      <h1 id=\"main-heading\" class=\"heading\">BMI Calculator</h1>\n        <form method=\"post\" action=\"{% url 'calculate_bmi' %}\" id=\"bmi-form\" class=\"bmi-form\">\n            {% csrf_token %}\n            <div class=\"form-group\">\n                <label for=\"weight\">Weight (kg):</label>\n                <input type=\"number\" name=\"weight\" id=\"weight\" class=\"form-control\" step=\"0.1\" required>\n            </div>\n             <div class=\"form-group\">\n                <label for=\"height\">Height (cm):</label>\n                <input type=\"number\" name=\"height\" id=\"height\" class=\"form-control\" step=\"0.1\" required>\n            </div>\n            <button type=\"submit\" id=\"calculate-button\" class=\"btn btn-primary\">Calculate BMI</button>\n        </form>\n\n        {% if bmi is not None %}\n           <div id=\"result\" class=\"result\">\n                <p id=\"bmi-value\" class=\"bmi-value\">Your BMI: {{ bmi }}</p>\n                <p id=\"bmi-message\" class=\"bmi-message\">{{ message }}</p>\n            </div>\n        {% endif %}\n         {% if message and bmi is None %}\n            <div id=\"error-message\" class=\"error-message\">\n               <p>{{ message }}</p>\n            </div>\n         {% endif %}\n    </div>\n</body>\n</html>"}, {"file": "style.css", "path": "static/css/style.css", "code": "body {\n    font-family: sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    background-color: #f0f0f0;\n}\n\n.container {\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    width: 300px;\n}\n\n.heading {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.form-group {\n    margin-bottom: 15px;\n}\n\n.form-group label {\n    display: block;\n    margin-bottom: 5px;\n}\n\n.form-control {\n    width: 93%;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n\n.btn {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 10px; /* Add margin to separate from input fields */\n}\n\n.btn:hover {\n    background-color: #0056b3;\n}\n\n.result {\n    margin-top: 20px;\n    text-align: center;\n    font-weight: bold;\n}\n\n.error-message {\n    margin-top: 20px;\n    text-align: center;\n    color: red;\n\n}\n\n.bmi-value {\n    font-size: 1.2em;\n    margin-bottom: 5px;\n}\n"}]}