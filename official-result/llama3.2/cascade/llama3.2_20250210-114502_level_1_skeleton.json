{"1": "```\n[\n  {\n    \"file\": \"views.py\",\n    \"path\": \"root_dir/application_name/views.py\",\n    \"code\": \"\"\"\nfrom django.http import HttpResponse\nfrom .forms import LoginForm, RegisterForm\nfrom .models import User\n\ndef login(request):\n    # Login function logic\n\ndef register(request):\n    # Register function logic\n\"\"\"\n  },\n  {\n    \"file\": \"templates/index.html\",\n    \"path\": \"/root_dir/application_name/templates/index.html\",\n    \"description\":\"Login index template\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"root_dir/application_name/views.py\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render, redirect\nfrom .forms import BMIForm\n\ndef calculate_bmi(request):\n    # Calculate BMI function logic\n\ndef display_result(request):\n    # Display result function logic\n\"\"\"\n  },\n  {\n    \"file\": \"templates/bmi_calculator.html\",\n    \"path\": \"/root_dir/application_name/templates/bmi_calculator.html\",\n    \"description\":\"\",\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"root_dir/application_name/views.py\",\n    \"code\": \"\"\"\nfrom django.contrib.auth import login, authenticate\nfrom .forms import LoginForm\n\ndef validate_user_credentials(request):\n    # Validate user credentials function logic\n\ndef redirect_to_bmi_calculator(request):\n    return render(request, 'bmi_calculator.html')\n\"\"\"\n  },\n  {\n    \"file\": \"templates/login.html\",\n    \"path\": \"/root_dir/application_name/templates/login.html\",\n    \"description\":\"\",\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"root_dir/application_name/views.py\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render, redirect\nfrom .forms import RegisterForm\n\ndef validate_register_data(request):\n    # Validate register data function logic\n\ndef store_user_data(request):\n    # Store user data in database function logic\n\ndef redirect_to_login_page(request):\n    return render(request, 'login.html')\n\"\"\"\n  },\n  {\n    \"file\": \"templates/register.html\",\n    \"path\": \"/root_dir/application_name/templates/register.html\",\n    \"description\":\"\",\n  }\n]\n```", "2": "```\n[\n    {\n        \"path\": \"home/views.py\",\n        \"code\": \"\"\"from django.http import HttpResponse\nfrom yourapp import get_currency_data, render_header\n\ndef home_view(request):\n    return HttpResponse(get_currency_data())\"\"\"\n    },\n    {\n        \"file\":\"convert/forms.py\",\"path\":\"yourapp/convert forms.py\",\n        \"description\":\"For handling conversion form submissions\"\n    },\n    {\n        \"path\": \"convert/views.py\",\n        \"code\": \"\"\"from django.http import HttpResponse\nfrom yourapp.forms import handle_form_submission, calculate_conversion_rate\n\ndef convert_view(request):\n    return HttpResponse(handle_form_submission())\"\"\"\n    },\n    {\n        \"file\":\"about/views.py\",\"path\":\"yourapp/about views.py\",\n        \"description\":\"For retrieving and rendering about data\"\n    },\n    {\n        \"path\": \"templates/\",\n        \"code\": \"\"\"{% extends 'base.html' %}\n\n{% block content %}\n    {% include 'header.html' %}\n    <!-- your about page content here -->\n{% endblock %}\n\"\"\"\n    }\n]\n```", "3": "```\n[\n  {\n    \"file\": \"project_templates.py\",\n    \"path\": \"somepath/somedir/ProjectTemplates.py\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"somepath/somedir/urls.py\"\n  },\n  {\n    \"name\": \"settings_api\",\n    \"file\": \"settings_api.json\"\n  },\n  {\n    \"url\": \"/admin\",\n    \"port\": \"8000\"\n  },\n  {\n    \"template\": \"base_template.html\"\n  }\n]\n```\n\nor\n\n```\n[\n  {\n    \"path\": \"templates/base.html\"\n  },\n  {\n    \"file\":\"django_app template.txt\"\n  },\n  {\n    \"name\": \"app.json\",\n    \"description\":\"Application definition\"\n  }\n]\n```", "4": "```\n[\n  {\n    \"file\": \"home/views.py\",\n    \"path\": \"home/\", \n    \"code\": \"\"\"\nimport qrcode\nfrom django.shortcuts import HttpResponse\n\ndef get_started(request):\n    # generate a qr code and return it as response\n    qrc = qrcode.QRCode(\n        version=1,\n        error_correction=qrcode.constants.ERROR_CORRECT_L,\n        box_size=10,\n        border=4,\n    )\n    data = \"\"\n    qrc.add_data(data)\n    qrc.make(fit=True)\n    img = qrc.make_image(fillcolor=\"black\", back_color=\"white\")\n    # return the qr code as HttpResponse\n    return HttpResponse(img SaveMode)\n  },\n  {\n    \"file\": \"generator/views.py\",\n    \"path\": \"generator/\",\n   \"code\": \"\"\"\nfrom django.shortcuts import HttpResponse, render  \ndef add_data_to_code(request):\n   # get data from request, do some encoding, store QRCode\n   qrc = qrcode.QRCode(\n       version=1,\n       error_correction=qrcode.constants.ERROR_CORRECT_L,\n       box_size=10,\n       border=4,\n   )\n    data = \"\"\n   qrc.add_data(data)\n    qrc.make(fit=True)\n   img = qrc.make_image(fillcolor=\"black\", back_color=\"white\")\n  # return a HttpResponse with the encoded QRCode\n    return HttpResponse(img, content_type='image/png')\n    \"\"\"\n},\n{\n \"file\": \"pricing/views.py\",\n \"path\": \"pricing/\",\n\"code\":\"def free_version_limit(request):\\\\nreturn HttpResponse('Limitations of our qr code generator')\\\\n\"},\n{\n \"file\": \"support/views.py\",\n \"path\": \"support/\",\n\"code\":\n \"\"\"\nfrom django.shortcuts import render\ndef view_faq(request):\n    return render(request,'supportFAQ.html')\n \"\"\"},\n  {\n   \"file\": \"blog/views.py\" ,\n   \"path\": \"blog/\", \n   \"code\":\n\"\"\"\nfrom django.shortcuts import HttpResponse,render \ndef industry(request):\n  # return a HTML page with some content , maybe with more templates to get everything\n    return render(request,'industryNews.html')\n \"\"\"\n},\n{\n \"file\":\" industry News.html\",\n     \"description\":\"A website for QR code news. 2023 \"\n}, {\n  \"file\": \" tutorials/ tutorial1.html\"   ,\n   \"path\":\"tutorials/\",\n\n    \"code\":\n\"\"\">\n\n<!DOCTYPE html>\n<html> <head>\n<title>A step-by-step Guide to generating a qr code generator\n</title>\n</head>  \n\n<body>\n<h2>Step 2: Step by step guide of Using our qrcode </h >. </ h2>\n</ body>\n</ html >\n\"\"\"\n},\n   {\"file\": \" tutorials/tutorial3.html\"  ,\"description\":\"Our Blog\"}\n]\n```", "5": "[\n    {\n        \"file\": \"views.py\",\n        \"path\": \"someapp/views.py\",\n        \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom .models import Page\n\ndef landing_page(request):\n    page = Page.objects.get(page='index')\n    return render(request, 'landing_page.html', {'page': page})\n\ndef markdown_editor(request):\n    # editor implementation\n    pass\n\ndef convert_to_html(request, markdown):\n    html = markdown.markdown.render()\n    return render(request, 'index.html', {'html': html})\n    \"\"\"\n    },\n    {\n        \"file\": \"templates/landing_page.html\",\n        \"path\": \"someapp/templates/landing_page.html\",\n        \"code\": \"<p>{{ page }}</p>\"\n    },\n    {\n        \"file\": \"models.py\",\n        \"path\": \"someapp/models.py\",\n        \"code\": \"\"\"\nfrom django.db import models\n\nclass Page(models.Model):\n    page = models.CharField(max_length=255)\n    \"\"\"\n    }\n]", "6": "```\n[\n  {\n    \"file\": \"views.py\",\n    \"path\": \"someapp/login/views.py\",\n    \"code\": \"from django.shortcuts import render, redirect\\\\nfrom django.contrib.auth.decorators import login_required\\\\n\\\\n@login_required\\\\ndef logout(request):\\\\n    # Logout logic here\\\\n    return render(request, 'login.html', {'message': 'Logged out successfully'})\\\\ndef register(request):\\\\n    # Register logic here\\\\n    return render(request, 'register.html', {})\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"someapp/dashboard/views.py\",\n    \"code\": \"from django.shortcuts import render, redirect\\\\nfrom .models import Todo\\\\n\\\\ndef create_todo(request, pk):\\\\n    # Create todo logic here\\\\n    return render(request, 'todo_detail.html')\\\\ndef view_todos(request)\\\\n    # View todos logic here\\\\n    return render(request, 'todos.html')\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"someapp/todo_detail/views.py\",\n    \"code\": \"from django.shortcuts import render\\\\nimport someapp.todo.models as todo_model\\\\n\\\\ndef edit_todo(request, pk):\\\\n    # Edit todo logic here\\\\n    return render(request, 'edit_todo.html')\\\\ndef delete_todo(request, pk):\\\\n    # Delete todo logic here\\\\n    return HttpResponse('Todo deleted successfully')\"\n  },\n  {\n    \"file\": None,\n    \"path\": \"someapp/chart_analysis/views.py\",\n    \"description\": \"Chart analysis views\"\n  }\n]\n```", "7": "{\n  [\n    {\n      \"file\": \"/example_app/templates/index.html\",\n      \"path\": \"templates/index.html\",\n      \"code\": \"<html>Display home page of the budget control application</html>\"\n    },\n    {\n      \"file\": \"/example_app/templates/login.html\",\n      \"path\": \"templates/login.html\",\n      \"code\": \"<html>Handle user login functionality</html>\"\n    }\n  ],\n  [\n    {\n      \"file\": \"/example_app/templates/dashboard.html\",\n      \"path\": \"templates/dashboard.html\",\n      \"code\": \"<div>Render chart to display balance changes over time</div>\"\n    }\n  ],\n  [\n    {\n      \"file\": \"/example_application/templates/expenses.py\",\n      \"path\": \"templates/expenses.py\",\n      \"code\": \"\"\"\nimport django Templates\nfrom example_app.forms import ExpenseForm, UpdateExpenseForm\n\nclass ExpensesView(TemplateView):\n    template_name = 'expenses.html'\n\ndef addexpense(request):\n    if request.method == 'POST':\n        form = UpdateExpenseForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('balances')\n    else:\n        form = UpdateExpenseForm()\n    return render(request, 'expenses.html', {'form': form})\n\"\"\"\n    }\n  ],\n  [\n    {\n      \"file\": \"/example_application/templates/income.py\",\n      \"path\": \"templates/income.py\",\n      \"code\": \"\"\"\nimport django Templates\nfrom example_app.forms import IncomeForm\n\nclass Incom view(TemplateView):\n    template_name = 'income.html'\n\ndef addincom request):\n    if request.method == 'POST':\n        form = IncomeForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('balances')\n    else:\n        form = IncomeForm()\n    return render(request, 'income.html', {'form': form})\n\"\"\"\n    }\n  ],\n  [\n    {\n      \"file\": \"/example_app/templates/settings.py\",\n      \"path\": \"settings.py\",\n      \"code\": \"\"\"\nimport os\nfrom django.conf import settings\n\nsettings UPDATE_BUDGET_SETTINGS = [\n    ('year', 'month'),\n    # Other setting pairs...\n] \n\"\"\"\n    }\n  ]\n}", "8": "```\n[\n  {\n    \"file\": \"admin.py\",\n    \"path\": \"someapp/admin.py\",\n    \"code\": \"\"\"\nfrom django.contrib import admin\nfrom .models import yourmodel\n\nadmin.site.register(yourmodel)\n\"\"\"\n  },\n  {\n    \"file\": \"apps.py\",\n    \"path\": \"someapp/app.py\",\n    \"code\": \"\"\"\nfrom django.contrib import apps\n\napps.config('root')\n\nclass YourAppConfig(apps.AppConfiguration):\n    name = 'your_app'\n    verbose_name = 'Your App'\n\napps.config('root', config_class=YourAppConfig)\n\"\"\"\n  },\n  {\n    \"file\": \"models.py\",\n    \"path\": \"someapp/models.py\",\n    \"code\": \"\"\"\nfrom django.db import models\n\nclass YourModel(models.Model):\n    field1 = models.CharField(max_length=255)\n    field2 = models.IntegerField()\n\"\"\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"someapp/views.py\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom .models import YourModel\n\ndef your_view(request):\n    instance = YourModel.objects.get(id=1)\n    return render(request, 'template.html', {'instance': instance})\n\"\"\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"someapp/urls.py\",\n    \"code\": \"\"\"\nfrom django.urls import path\nfrom .views import your_view\n\nurlpatterns = [\n    path('', your_view),\n]\n\"\"\"\n  },\n  {\n    \"description\": \"Base template with main layout\"\n    \"file\": \"base.html\"\n  }\n]\n```", "9": "```\n[\n  {\n    \"file\":\"views.py\",\n    \"path\":\"someapp/someview/views.py\",\n    \"code\":\"from django.shortcuts import render\\\\n\\\\ndef home(request):\\\\n    return render(request, 'index.html')\\\\ndef features(request):\\\\n    return render(request, 'features.html')\\\\ndef how_it_works(request):\\\\n    return render(request, 'how-it-works.html')\\\\ndef pricing(request):\\\\n    return render(request, 'pricing.html')\\\\ndef about(request):\\\\n    return render(request, 'about.html')\"\n  },\n  {\n    \"file\":\"templates/index.html\",\n    \"path\":\"someapp/index.html\",\n    \"code\":\" <!-- Index page -->\"\n  },\n  {\n    \"file\":\"templates/features.html\",\n    \"path\":\"someapp/features.html\",\n    \"code\": \"\"\"\n          <!DOCTYPE html>\n          <html>\n              <head>\n                  <title>Features</title>\n              </head>\n              <body>\n                  <!-- Feature list and details -->\n              </body>\n          </html>\n          \"\"\"\n  },\n  {\n    \"file\":\"templates/how-it-works.html\",\n    \"path\":\"someapp/how-it-works.html\",\n    \"code\": \"\"\"\n          <!DOCTYPE html>\n          <html>\n              <head>\n                  <title>How it Works</title>\n              </head>\n              <body>\n                  <!-- Flow diagram and testimonial quote -->\n              </body>\n          </html>\n          \"\"\"\n  },\n  {\n    \"file\":\"templates/pricing.html\",\n    \"path\":\"someapp/pricing.html\",\n    \"code\": \"\"\"\n          <!DOCTYPE html>\n          <html>\n              <head>\n                  <title>Pricing</title>\n              </head>\n              <body>\n                  <!-- Tier list and payment processing -->\n              </body>\n          </html>\n          \"\"\"\n  },\n  {\n    \"file\":\"templates/about.html\",\n    \"path\":\"someapp/about.html\",\n    \"code\": \"\"\"\n          <!DOCTYPE html>\n          <html>\n              <head>\n                  <title>About</title>\n              </head>\n              <body>\n                  <!-- Company info and vision statements -->\n              </body>\n          </html>\n          \"\"\"\n  },\n  \n  {\n    \"file\":\"models.py\",\n    \"path\":\"someapp/models.py\",\n    \"code\":\"from django.db import models\\\\n\\\\nclass Feature(models.Model):\\\\n    name = models.CharField(max_length=255)\\\\ndef __str__(self):\\\\n    return self.name\"\n  },\n  \n  {\n    \"file\":\"forms.py\",\n    \"path\":\"someapp/forms.py\",\n    \"code\":\"from django import forms\\\\nfrom .models import Feature\\\\n\\\\nclass FeatureForm(forms.ModelForm):\\\\n    class Meta:\\\\n        model = Feature\\\\n        fields = ('name',)\"\n  },\n  \n  {\n    \"file\":\"models.py\",\n    \"path\":\"someotherapp/models.py\",\n    \"code\":\"from django.db import models\\\\n\\\\nclass User(models.Model):\\\\n    name = models.CharField(max_length=255)\\\\ndef __str__(self):\\\\n    return self.name\"\n  }\n]\n```", "10": "{\"template\":[{\"file\":\"management/commands.py\",\"path\":\"somepath/app management/commands.py\",\"code\":\"from django.core.management.commands import *\n\nclass Command(BaseCommand):\n    help = 'My custom management command'\n\"], {\"file\":\"models.py\",\"path\":\"somepath/models.py\",\"code\":\"\"}, {\"file\":\"serializers.py\",\"path\":\"somepath/serializers.py\",\"code\uff1a\u300cserializer\u00ab\"},{\"file\":\"/app.aspx\", \"description\":\"HTML template not found\"}, {\"file\":\"views.py\",\"path\":\"somepath/views.py\",\"code\":\"from rest_framework.response import Response; }\"]", "11": "[\n  {\n    \"file\": \"homeviews.py\",\n    \"path\": \"home/views/\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom .forms import PasswordGeneratorForm\n\ndef display_welcome_message(request):\n    \"\"\"Display welcome message\"\"\"\n    return render(request, 'welcome.html')\n\ndef navigation_button(request):\n    \"\"\"Navigation button to password generator page\"\"\"\n    return render(request, 'nav.html')\n\nclass HomeView(View):\n    def get(self, request):\n        return DisplayWelcomeMessage_view.as_view()(request)\n    \"\"\"\n  },\n  {\n    \"file\": \"aboutviews.py\",\n    \"path\": \"home/views/\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom .forms import PasswordGeneratorForm\n\ndef about_link(request):\n    \"\"\"Link to the about page\"\"\"\n    return render(request, 'about.html')\n\nclass AboutView(View):\n    def get(self, request):\n        return Description_view.as_view()(request)\n    \"\"\"\n  }\n]", "12": "```json\n{\n  \"page\": \"Login\",\n  \"functions\": [\n    {\n      \"file\":\"users/forms.py\",\"path\":\"/example_app/user Authentication/forms.py\",\"code\":\"##user authentication forms\"\"\"\nfrom django import forms\n\nclass LoginForm(forms.Form):\n    username = forms.CharField(max_length=255)\n    password = forms.CharField(max_length=255, widget=forms.PasswordInput)\n\"\"\"\n    {\n      \"function\": \"get_user_details\",\n      \"description\": \"Retrieve user details for login\"\n    },\n    {\n      \"function\": \"authenticate_user\",\n      \"description\": \"Authenticate user credentials\"\n    },\n    {\n      \"function\": \"go_to_dashboard\",\n      \"description\": \"Redirect to dashboard page after successful authentication\"\n    }\n  ],\n  \"page\": \"Claims Submission\",\n  \"functions\": [\n    {\n      \"file\":\"claims/forms.py\",\"path\":\"/example_app/claims(forms.py\",\"code\":\"##claims forms\"\"\"\nfrom django import forms\n\nclass ClaimForm(forms.Form):\n    claim_type = forms.CharField(max_length=255)\n    amount = forms.DecimalField(max_digits=10, decimal_places=2)\n\"\"\"\n    {\n      \"function\": \"get_expense_type_options\",\n      \"description\": \"Retrieve expense type options for claims submission\"\n    },\n    {\n      \"function\": \"display_claims_form\",\n      \"description\": \"Display form for submitting new claims\"\n    },\n    {\n      \"function\": \"submit_claim\",\n      \"description\": \"Submit claim data to server-side API\"\n    }\n  ],\n  \"page\": \"Claims Dashboard\",\n  \"functions\": [\n    {\n      \"file\":\"dashboard/views.py\",\"path\":\"/example_app/claims-dashboard/views.py\",\"code\":\"##claims dashboard views\"\"\"\nfrom django.shortcuts import render\nfrom .models import Claim\n\ndef display_all_claims(request):\n    claims = Claim.objects.all()\n    return render(request, 'claims.html', {'claims': claims})\n\"\"\"\n    {\n      \"function\": \"display_all_claims\",\n      \"description\": \"Display all submitted and approved claims\"\n    },\n    {\n      \"function\": \"mark_claim_as_approved\",\n      \"description\": \"Mark claim as approved by administrator\"\n    },\n    {\n      \"function\": \"mark_claim_as_rejected\",\n      \"description\": \"Mark claim as rejected by administrator\"\n    }\n  ],\n  \"page\": \"Budget Analysis\",\n  \"functions\": [\n    {\n      \"file\":\"budget Analyzers.py\",\"path\":\"/example_app/analyser.py\",\"code\":\"##budget analysis views\"\"\"\nfrom django.shortcuts import render\nimport matplotlib.pyplot as plt\n\ndef get_budget_balance(request):\n    # retrieve and display budget balance\n    return render(request, 'balance.html')\n\"\"\"\n    {\n      \"function\": \"get_budget_balance\",\n      \"description\": \"Retrieve current budget balance and display on chart\"\n    },\n    {\n      \"function\": \"analyze_budget_expenses\",\n      \"description\": \"Analyze expenses by expense type and category\"\n    }\n  ],\n  \"page\": \"Admin Dashboard\",\n  \"functions\": [\n    {\n      \"file\":\"admin/views.py\",\"path\":\"/example_app/admin-dashboard/views.py\",\"code\":\"##admin dashboard views\"\"\"\nfrom django.shortcuts import render\nfrom .models import Claim\n\ndef display_all_claims(request):\n    #retrieve and display all claims with status\n    return render(request, 'claims.html')\n\"\"\"\n    {\n      \"function\": \"display_all_claims\",\n      \"description\": \"Display all submitted claims with status\"\n    },\n    {\n      \"function\": \"approve_claim\",\n      \"description\": \"Approve claim marked as pending by administrator\"\n    },\n    {\n      \"function\": \"reject_claim\",\n      \"description\": \"Reject claim marked as approved or rejected by administrator\"\n    },\n    {\n      \"function\": \"generate_report\",\n      \"description\": \"Generate report on claims submission and approval status\"\n    }\n  ]\n}\n```\n\n```json\n{\n  \"page\": \"Claims Dashboard\",\n  \"functions\": [\n    {\n      \"file\":\"dashboard/templates/claims.html\",\"path\":\"/example_app/claims-dashboard/templates/claims.html\",\"code\":\"##claims template\"\"\"\n{% extends 'base.html' %}\n\n{% block content %}\n  {% for claim in claims %}\n    {{ claim.claim_type }} -{{ claim.amount }}\n  {% endfor %}\n{% endsblock %}\n\"\"\"\n```", "13": "```\n[\n  {\n    \"file\":\"settings.py\",\n    \"path\":\"example_app/settings.py\",\n    \"code\":\"\\\\n\"\n  },\n  {\n    \"file\":\"urls.py\",\n    \"path\":\"example_app/urls.py\",\n    \"code\":\"\\\\\\\\n\"\n  },\n  {\n    \"file\":\"wsgi.py\",\n    \"path\":\"example_app/wsgi.py\",\n    \"code\":\"\\\\\\\\n\"\n  },\n  {\n    \"file\":\"templates/base.html\",\n    \"path\":\"example_app/templates/base.html\",\n    \"code\":\"\\\\n\"\n  },\n  {\n    \"file\":\"models/customer.py\",\n    \"path\":\"example_app/models/customer.py\",\n    \"code\":\"from django.db import models\\\\nclass Customer(models.Model):\\\\n    name = models.CharField(max\u9650='255')\\\\n    email = models.EmailField()\\\\n\"\n  },\n  {\n    \"file\":\"views/customer_view.py\",\n    \"path\":\"example_app/views/customer_view.py\",\n    \"code\":\"from django.shortcuts import render\\\\nfrom .models import Customer\\\\ndef customer_view(request, pk):\\\\n    customer = Customer.objects.get(pk=pk)\\\\n    return render(request, 'customer_detail.html', {'customer': customer})\"\n  },\n  {\n    \"file\":\"views/customer_list_view.py\",\n    \"path\":\"example_app/views/customer_list_view.py\",\n    \"code\":\"from django.shortcuts import render\\\\nfrom .models import Customer\\\\ndef get_customers(request):\\\\n    customers = Customer.objects.all()\\\\n    return render(request, 'customers.html', {'customers': customers})\"\n  },\n  {\n    \"file\":\"views/product_view.py\",\n    \"path\":\"example_app/views/product_view.py\",\n    \"code\":\"from django.shortcuts import render\\\\nfrom .models import Product\\\\ndef product_view(request, pk):\\\\n    product = Product.objects.get(pk=pk)\\\\n    return render(request, 'product_detail.html', {'product': product})\"\n  },\n  {\n    \"file\":\"views/product_list_view.py\",\n    \"path\":\"example_app/views/product_list_view.py\",\n    \"code\":\"from django.shortcuts import render\\\\nfrom .models import Product\\\\ndef get_products(request):\\\\n    products = Product.objects.all()\\\\n    return render(request, 'products.html', {'products': products})\"\n  },\n  {\n    \"file\":\"views/purchase_views.py\",\n    \"path\":\"example_app/views purchase_views.py\",\n    \"code\":\"from django.shortcuts import render\\\\nfrom .models import Purchase\\\\ndef get_purchases(request)\\\\n    purchases = \\\\n\"\n  },\n  {\n    \"file\":\"forms/customer_form.py\",\n    \"path\":\"example_app/forms/customer_form.py\",\n    \"code\":\"from django import forms\\\\nclass CustomerForm(forms.ModelForm):\\\\n    class Meta:\\\\n        model = Customer\\\\n         fields = '__all__'\"\n  },\n  {\n    \"file\":\"forms/product_form.py\",\n    \"path\":\"example_app/forms/product_form.py\",\n    \"code\":\"from django import forms\\\\nclass ProductForm(forms.ModelForm):\\\\n    class Meta:\\\\n        model = Product\\\\n         fields = '__all__'\"\n  },\n  {\n    \"file\":\"forms/purchase_form.py\",\n    \"path\":\"example_app/forms/purchase_form.py\",\n    \"code\":\"from django import forms\\\\nclass PurchaseForm(forms.ModelForm):\\\\n    class Meta:\\\\n        model = Purchase\\\\n         fields = '__all__'\"\n  }\n]\n```", "14": "```\n{\n  \"template\": [\n    {\"file\": \"__init__.py\", \"path\": \"/example_app/\", \"code\":\"\"}\n  ]\n}\n```", "15": "```\n[\n  {\n    \"file\": \"hello/views.py\",\n    \"path\": \"someapp/hello/views.py\",\n    \"code\": \"\"\"from django.shortcuts import redirect, render\nfrom django.urls import reverse\ndef hello_world(request):\n    url = reverse('helloredirect')\n    return redirect(url)\n\"\"\"\n  },\n  {\n    \"file\": \"hello/urls.py\",\n    \"path\": \"someapp/hello/urls.py\",\n    \"code\": \"\"\"from django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.hello_world, name='helloredirect'),\n]\n\"\"\"\n  }\n]\n```", "16": "```\n[\n  {\n    \"file\": \"main.py\",\n    \"path\": \"somepath/somedir/main.py\",\n    \"code\": \"\"\"\nimport { readExcelFile, processSubjectsData, writeToExcelFile } from './submodule'\n\n\"\"\"\n  },\n  {\n    \"file\": \"readExcelFile.py\",\n    \"path\": \"somepath/somedir/readExcelFile.py\",\n    \"code\": \"\"\"\nfrom .excelReadHelper import excelReadHelper\nimport { mapTimeValues, convertSubjectFormat } from '../submodule'\n\nexcelReadData = excelReadHelper()\nprocessSubjectsData(excelReadData)\n\"\"\"\n  },\n  {\n    \"file\": \"excelReadHelper.py\",\n    \"path\": \"somepath/somedir/excelReadHelper.py\",\n    \"code\": \"\"\"\ndef readRowValues(row, headers):\n    # implementation\n    pass\n\ndef parseHeaderLabels(headers):\n    return headers\n\"\"`\n  },\n  {\n    \"file\": \"mapTimeValues.py\",\n    \"path\": \"somepath/somedir/mapTimeValues.py\",\n    \"code\": \"\"\"\nimport { mapKeyValuesToValues } from '../utility'\"\n\ndef setIDValues(values, IDs):\n    # implementation\n    pass\n\nmapData = mapKeyValuesToValues()\nsetIdMap = setIDValues(mapData)\n\"\"`\n  },\n  {\n    \"file\": \"convertSubjectFormat.py\",\n    \"path\": \"somepath/somedir/convertSubjectFormat.py\",\n    \"code\": \"\"\"\nimport { makeTwoDimSubjectTableWithHeaderData, splitIntoRowsAndColumns } from '../utility'\n\ndef convertSubjectFormat(data):\n    # implementation\n    pass\n\nconvertTable = data\nconvertedTable = convertSubjectFormat(convertTable)\n\"\"`\n  },\n  {\n    \"file\": \"writeToExcelFile.py\",\n    \"path\": \"somepath/somedir/writeToExcelFile.py\",\n    \"code\": \"\"\"\nfrom .prepareWriteTableDataWithHeaderForSecondFile import prepareWriteTableDataWithHeader\n\ndata = processSubjectsData(excelReadData)\nresult = prepareWriteTableDataWithHeader(data, 'Time')\n\n# implementation\n\"\"`\n```\n\n{\n  \"file\": \"mapKeyValuesToValues.py\",\n  \"path\": \"/example_app/submodule/makekeyvaluemap_tovalues.py\", \n  \"description\":\"Utility function to map key values to corresponding values\"\n}\n```", "17": {"file": "template.py", "path": "someapp/settings.py", "code": "import os\nfrom setuptools import setup\nclass SetupParameters():\n    def __init__(self):\n        self.name = \"template\"\n        self.version = \"1.0\"}\ndef main():\n    parameters = SetupParameters()\n    setup(name=parameters.name,\n           version=parameters.version)\nif __name__ == \"__main__\":\n    main()"}, "18": "```\n[\n  {\n    \"file\":\"start.py\",\"path\":\"somepath/somedir/start.py\",\"code\":\"#import os\\\\nprint(\\\\\"Welcome to the start game!\\\\\")\\\\ndef print_start_game(): print('')\\\\ndef ask_player_name(): input()\"\n  },\n  {\n    \"file\":\"name.py\",\"path\":\"somepath/somedir/name.py\",\"code\":\"# import os\\\\nname = input() \\\\ndef welcome_player(name):\\\\n\\\\tprint(f'Congratulations {name} you can play the game}')\\\\ndef ask_for_score(player_name): player_data['score'] = 0\"\n  },\n  {\n    \"file\":\"gameplay.py\",\"path\":\"somepath/somedir/gameplay.py\",\"code\":\"# import time\\\\nimport random \\\\ndef print_gameplay_message()\\\\n\\\\tprint('Here comes your lucky number')\\\\ndef generate_random_number():\\\\\\\\n\\\\\\\\treturn(random.randint(1,10))\"\n  },\n  {\n    \"file\":\"score.py\",\"path\":\"somepath/somedir/score.py\",\"code\":\"# Player name\\\\nname = '' \\\\nplayer_data[]={}\ndef print_score_message(name, score):\n    def ask_player_if_want_to_play_again(score):\\\\n\\\\tif score<0:\\\\n\\\\t\\\\tprint('final Score')\\\\n\\\\telse:\\\\n\\\\t\\\\tinput('''\n  },\n  {\n    \"file\":\"end.py\",\"path\":\"somepath/somedir/end.py\",\"code\":\"# Player name \\\\nname = '' \\\\ndef print_end_game_message()\\\\n\\\\tprint('The game is over, Good Bye')\")\n```", "19": "```\n[\n  {\n    \"file\": \"./models/architecture.py\",\n    \"path\": \"src/models/architecture.py\",\n    \"code\": \"import pandas as pd\\\\nfrom matplotlib import pyplot as plt\\\\n...\\\\n\"\n  },\n  {\n    \"file\": \"./config/config.py\",\n    \"path\": \"src/utils/config.py\",\n    \"code\": \"import os\\\\n...\\\\nfolders = ['data']\\\\n...\"\n  }\n]\n```", "20": "```\n[\n  {\n    \"file\": \"home/views.py\",\n    \"path\": \"app/homeIEWS.py\",\n    \"code\": \"__init__(): Load all published articles from database.\\\\n@csrf_exempt\\\\n@app.route('/')\\\\ndef load_index():\\\\n    # Load data here\\\\n    return render('index.html')\"\n  },\n  {\n    \"file\": \"home/templates/\",\n    \"path\": \"/app/home/templates/\",\n    \"description\":\"Template directory\"\n  },\n  {\n    \"file\": \"about/views.py\",\n    \"path\": \"app/about/views.py\",\n    \"code\": \"__init__(): Get team member profiles from GraphQL API.\\\\n@csrf_exempt\\\\n@app.route('/get-profiles/')\\\\ndef get_team_profiles():\\\\n    # Query data here\\\\n    return jsonify({'profiles': [...]})\n  },\n  {\n    \"file\": \"about/templates/\",\n    \"path\": \"/app/about/templates/\",\n    \"description\":\"Template directory\"\n  },\n  {\n    \"file\": \"terms-of-service/views.py\",\n    \"path\": \"app/terms-of-service/views.py\",\n    \"code\": \"__init__(): Fetch TOU content from server side.\\\\n@csrf_exempt\\\\n@app.route('/tos/')\\\\ndef fetch_tou():\n    # Query data here\\\\n    return render('tos.html')\"\n  },\n  {\n    \"file\": \"terms-of-service/templates/\",\n    \"path\": \"/app/terms-of-service/templates/\",\n    \"description\":\"Template directory\"\n  }\n]\n```"}