{"1": "[\n  {\"file\":\"home_page/views.py\",\"path\":\"home_page/views.py\",\"code\":\"def view_introduction(request):...\"}, \n  {\"file\":\"home_page/templates/home_page/intro.html\",\"path\":\"home_page/templates/home_page/intro.html\", \"description\"}, \n  {\"file\":\"homepage/urls.py\",\"path\":\"homepage/urls.py\"},{\"file\":\"bmicalculator/views.py\",\"path\":\"bmicalculator/views.py\", \"code\":\"def input_height(request):...\"}],\n [\n  {\"file\":\"calculator/urls.py\",\"path\":\"calculator/urls.py\"},{\"file\":\"bmicalculator/forms.py\",\"path\":\"bmicalculator/forms.py\"},{\"file\":\"bmicalculator/templates/bmicalculator/result.html\",\"path\":\"bmicalculator/templates/bmicalculator/result.html\"},{\"file\":\"bmicalculator/templates/bmicalcalculator/index.html\",\"path\":\"bmicalculator/templates/bmicalculator/index.html\"},{\"file\":\"bmicalculator/urls.py\",\"path\":\"bmicalculator/urls.py\"},{\"file\":\"django_app/settings.py\",\"path\":\"settings.py\"},{\"file\":\"bmicalculator/views.py\",\"path\":\"bmicalculator/views.py\"},{\"file\":\"bmicalculator/forms.py\",\"path\":\"bmicalculator/forms.py\"},{\"file\":\"calculator/forms.py\",\"path\":\"calculator/forms.py\"},]", "2": "{\"template\":[{\"file\":\"views.py\",\"path\":\"somepath/somedir/views.py\",\"code\":\"class HomePageView(View):\\\\n    def get(self, request):\\\\n        return HttpResponse('Home Page')\"}], \n {\"template\":[{\"file\":\"forms.py\",\"path\":\"somepath/somedir/forms.py\",\"code\":\"from django import forms\\\\nclass ConversionForm(forms.Form):\\\\n    amount = forms.FloatField()\\\\n    base_currency = forms.ChoiceField(choices=[('USD', 'USD'), ('EUR', 'EUR')])\"}], \n {\"template\":[{\"file\":\"urls.py\",\"path\":\"somepath/somedir/urls.py\",\"code\":\"\"}, \n {\"template\":[{\"file\":\"models.py\",\"path\":\"somepath/somedir/models.py\",\"code\":\"from django.db import models\\\\nclass Conversion(models.Model):\\\\n    amount = models.FloatField()\\\\n    base_currency = fields.CharField(max_length=3)\\\\n    target_currency = fields.CharField( max_length= 3)\"}, \n {\"template\":[{\"file\":\"utils.py\",\"path\":\"somepath/somedir/utils.py\",\"code\": \"from django.models import Q\\\\ndef get_conversion_rates():\\\\n    # logic to fetch conversion rates\"}}]}", "3": "```\n[\n  {\n    \"name\": \"home.html\",\n    \"template_name\": \"home templates/home.html\"\n  },\n  {\n    \"file\": \"templates/password_options.html\",\n    \"path\": \"templates/password_options.html\"\n  },\n  {\n    \"url\": \"/generate/\",\n    \"view_name\": \"views.generate_password_view\"\n  },\n  {\n    \"name\": \"generated_password.html\",\n    \"template_name\": \"password_generated_templates/generated_password.html\"\n  },\n  {\n    \"file\": \"templates/about.html\",\n    \"path\": \"templates/about.html\"\n  }\n]\n```", "4": "```\n[\n    {\n        \"file\": \"settings.py\",\n        \"path\": \"somepath/xyz/settings.py\",\n        \"code\": \"from django.conf import settings\"\n    },\n    {\n        \"file\": \"urls.py\",\n        \"path\": \"somepath/xyz/urls.py\",\n        \"code\": \"# URL configuration for the Django application\"\n    },\n    {\n        \"file\": \"views.py\",\n        \"path\": \"somepath/abc/views.py\",\n        \"code\\\\\": \"\"\"from django.shortcuts import render\"\"\"\n    },\n    {\n        \"file\": \"wsgi.py\",\n        \"path\": \"/var/someproject/lib/python3.9/site-packages/django/core/wsgi.py\",\n        \"description\":\"WSGI entry point for the Django application\"\n    }\n]\n```", "5": "[\"file\":\"\",\"path\":\"\",\"code\":\"\"], \n{\"file\":\n  \"views.py\",\n  \"path\":\n  \"//app/views/, \n  \"code\"]:\n\"\"},  \n{\"file\":\n\n  \"forms.py\",\n  \"path\": \"//app/forms/, \n\n  \"code\"}\n]\", \n{\"file\":\"urls.py\",\"path\":\"/\",\"code\":\"path\":\"\",\"description\":\"URLCONF for the app. The function route() is not imported.\"}", "6": [{"template_name": "base.html", "description": "Base template for the application"}, {"template_name": "home.html", "description": "Rendered home page"}, {"template_name": "todo_list.html", "description": "Rendered Todo list home page"}, {"template_name": "task_detail.html", "description": "Rendered task detail page"}, {"template_name": "analysisReport.html", "description": "Rendered analysis report"}], "7": "[\n  {\n    \"file\": \"admin.py\",\n    \"path\": \"app_name/admin.py\",\n    \"code\": \"\"\"\nclass CategoryModelAdmin(admin.ModelAdmin):\n    list_display = ('name', 'description')\n    fieldsets = ((None, {'fields': ('name', 'description')}))\n    class Meta:\n        model = CategoryModel\n\"\"\"\n\n  },\n  {\n    \"file\": \"models.py\",\n    \"path\": \"app_name/models.py\",\n    \"code\": \"\"\"\nfrom django.db import models\n\nclass CategoryModel(models.Model):\n    name = models.CharField(max_length=200)\n    description = models.TextField()\n\n    def __str__(self):\n        return self.name\n\"\"\"\n\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"app_name/views.py\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render, redirect\nfrom .models import CategoryModel\nfrom .forms import CategoryForm\n\ndef category_list(request):\n    categories = CategoryModel.objects.all()\n    return render(request, 'category_list.html', {'categories': categories})\n\ndef add_category(request):\n    if request.method == 'POST':\n        form = CategoryForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('category_list')\n    else:\n        form = CategoryForm()\n    return render(request, 'add_category.html', {'form': form})\n\"\"\"\n\n  },\n  {\n    \"file\": \"admin.py\",\n    \"path\": \"app_name/settings admin.py\",\n    \"code\": \"\"\"\nfrom django.contrib import admin\nfrom .models import CategoryModel\n\nadmin.site.register(CategoryModel)\n\"\"\"\n\n  },\n  {\n    \"file\": '',\n    \"path\": \"/app_name/__init__.py\", \n    \"description\": \"package initiated\"\n  }\n]", "8": "[\n  {\"file\": \"templates/base.html\", \"path\": \"templates/base.html\", \"code\":\"\"},\n  {\"file\": \"templates/home.html\", \"path\": \"templates/home.html\", \"code\":\"\"},\n  {\"file\": \"templates/calendar.html\", \"path\": \"templates/calendar.html\", \"code\":\"\"},\n  {\"file\": \"templates/event-details.html\", \"path\": \"templates/event-details.html\", \"code':''},\n  {\"file\": \"templates/help.html\", \"path\": \"templates/help.html\", \"code\":\"\"},\n  {\"file\":\"admin.py\",\"path\":\"admin.py\",\"code\":\"\"},\n  {\"file\":\"apps.py\",\"path\":\"apps.py\",\"code\":\"\",\"required\":true,\"functions\":[]},\n  {\"file\":\"models.py\",\"path\":\"models.py\",\"code\":\"\",\"required\":true,\"tables\":[\"Calendar\",\"Event\"]},\n  {\"file\":\"views.py\",\"path\":\"views.py\",\"code\":\"\",\"required\":false,\"functions\":[]},\n  {\"file\":\"urls.py\",\"path\":\"urls.py\",\"code\":\"\",\"required\":true,\"patterns\":[{\"url\":\"^ home$\",\" pattern\":\"^\\\\\\\\.\\\\\\\\.$\",\"view\":\"HomeView\"},{\"url\":\"^ calendar$\",\"pattern\":\"^calendar$\",\"view\":\"CalendarView\"},{\"url\":\"^ events/[-\\\\\\\\w]+$\",\"pattern\":\"^events/\\\\\\\\w+$\",\"view\":\"EventView\"}]},\n  {\"file\": \"models.py\", \"path\": \"models.py\", \"code\":\"\",\"required\": true,\"tables\":[\"Calendar\",\"Event\"]},\n  {\"file\":\"management/commands/populate_data.py\",\"path\":\"management/commands/populate_data.py\",\"code\":\"\",\"required\":true}\n]", "9": "```\n[\n  {\n    \"file\": \"apps.py\",\n    \"path\": \"myapp/apps.py\",\n    \"code\": \"from django.apps import DjangoApps\\\\nclass MyApp(DjangoApps):\\\\n    name = 'myapp'\\\\n\"\n  },\n  {\n    \"file\": \"admin.py\",\n    \"path\": \"myapp/admin.py\",\n    \"code\": \"from django.contrib import admin\\\\nadmin.site.register(MyModel)\"\n  },\n  {\n    \"file\": \"apps.py\",\n    \"path\": \"otherapp/apps.py\",\n    \"code\": \"\"\n  },\n  {\n    \"file\": \"/example_app/urls.py\",\n    \"description\": \"URL configuration for example app\"\n  },\n  \"\"\"\n  {\n    \"file\": \"models.py\",\n    \"path\": \"myapp/models.py\",\n    \"code\": \"\"\"\nimport django.db\n\nclass MyModel(db.Model):\n    id = db.Column(Integer, primary_key=True)\n    name = db.Column(String, nullable=False)\n    email = db.Column(String, nullable=False)\n  \"\"\",\n    \"description\": \"Defining the model for the database\"\n  },\n  {\n    \"file\": \"/example_app/models.py\",\n    \"description\": \"Another model for example app's database\"\n  }\n]\n```", "10": "```\n[\n    {\n        \"file\": \"base.py\",\n        \"path\": \"somepath/somedir/base.py\",\n        \"code\": \"\"\"\nfrom django.http import HttpResponse\nfrom django.shortcuts import render\n\ndef index(request):\n    return HttpResponse('Hello, world!')\n\"\"\"\n    },\n    {\n        \"file\": \"patterns.py\",\n        \"path\": \"somepath/somedir/patterns.py\",\n        \"code\": \"\"\"\nfrom django.views.generic import TemplateView\n\nclass HomeView(TemplateView):\n    template_name = 'home.html'\n\"\"\"\n    },\n    {\n        \"file\": \"views.py\",\n        \"path\": \"somepath/somedir/views.py\",\n        \"code\": \"\"\"\nfrom .patterns import HomeView\nfrom django.shortcuts import render\n\ndef home(request):\n    return HomeView.as_view()(request)\n\ndef sign_up(request):\n    # ...\ndef log_in(request):\n    # ...\n\"\"\"\n    },\n    {\n        \"file\": \"urls.py\",\n        \"path\": \"somepath/somedir/urls.py\",\n        \"code\": \"\"\"\nfrom django.urls import path\nfrom .views import home, sign_up, log_in\n\nurlpatterns = [\n    path('', home, name='home'),\n    path('sign-up/', sign_up, name='sign_up'),\n    path('log-in/', log_in, name='log_in'),\n]\n\"\"\"\n    },\n    {\n        \"file\": \"models.py\",\n        \"path\": \"somepath/somedir/models.py\",\n        \"code\": \"\"\"\nfrom django.db import models\n\nclass User(models.Model):\n    username = models.CharField(max_length=255)\n    email = models.EmailField()\n\"\"\"\n    },\n    {\n        \"file\": \"forms.py\",\n        \"path\": \"somepath/somedir/forms.py\",\n        \"code\": \"\"\"\nfrom django import forms\nfrom .models import User\n\nclass SignUpForm(forms.ModelForm):\n    class Meta:\n        model = User\n        fields = ['username', 'email']\n\"\"\"\n    },\n    {\n        \"file\": \"admin.py\",\n        \"path\": \"somepath/somedir/admin.py\",\n        \"code\": \"\"\"\nfrom django.contrib import admin\nfrom .models import User\n\nadmin.site.register(User)\n\"\"\"\n    },\n    {\n        \"file\": \"settings.py\",\n        \"path\": \"somepath/somedir/settings.py\",\n        \"code\": \"\"\"\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    # ...\n]\n\"\"\"\n    },\n    {\n        \"file\": \"/example_app/templates/base.html\",\n        \"description\": \"<html>Base template</html>\"\n    }\n]\n```", "11": "```json\n[\n    {\n        \"template_name\": \"home.html\",\n        \"template_file\": \"{% extends \\\\\"base.html\\\\\" %}\"},\n    {\n        \"template_name\": \"select_status.html\",\n        \"template_file\": \"{{ form.as_p }}<br><input type=\\\\\"submit\\\\\" value=\\\\\"Submit\\\\\">\"}\n    ],\n    [\n        {\"file\": \"/example_app/tests.py\", \"path\": \"/home/tests.py\", \"code\": \"__import__('unittest')\"}\n    ],\n    {\n        \"template_name\": \"about.html\",\n        \"template_file\": \"<h1>About Us</h1><p>This is about page.</p>\"},\n    [\n        {\"file\": \"/example_app/views.py\", \"path\": \"/home/views.py\", \"code\": \"from django.shortcuts import render\"},\n    ],\n    {\n        \"file\": \"/home/urls.py\",\n        \"description\": \"# URL Configuration\\\\n\"\n                     \"## URLs for testing in the home page\\\\n\"\n                     \"from django.urls import path\\\\n\"\n                     \"from . import views\\\\n\"\n                     \"\\\\n\"\n                     \"urlpatterns = [\"\n                     \"]\"}\n]", "12": "```\n{\n    \"template_files\": [\n        {\n            \"file\": \"views.py\",\n            \"path\": \"someapp/views.py\",\n            \"code\": \"{{ require('django.core.validators') }}\\\\ndef view_name(request):\\\\n    if request.method == 'POST':\\\\n        # Handle post request data here.\\\\n        pass\\\\n    else:\\\\n        # Handle get request data here.\\\\n        pass\"\n        },\n        {\n            \"file\": \"forms.py\",\n            \"path\": \"someapp/forms.py\",\n            \"code\": \"\"\"\"\"\"\n        },\n        {\n            \"template\":\"base_template.html\",\n            \"description\":\"Base HTML layout for the application.\"\n        }\n    ]\n}\n```\n \n\n```\n{\n    \"urls\": [\n        {\n            \"prefix\": \"/admin/\",\n            \"urlpatterns\": [\n                {\n                    \"urlpatterns\": [\n                        {\"path\": \"claims/\", \"view\": \"someapp.views.ClaimListView\"},\n                        # other admin views\n                    ],\n                    \"function\": \"Admin View\"\n                }\n            ]\n        },\n        {\n            \"path\": \"home/\",\n            \"view\": \"someapp.views.HomeView\",\n            \"function\": \"Home View\"\n        }\n    ]\n}\n```", "13": "```\n[\n  {\n    \"template_name\": \"main.html\",\n    \"template_inheritance\": \"\",\n    \"base_template_name\": \"\",\n    \"context_processors\": [\n      \"django.template.context_processors.media\",\n      \"django.template.context_processors.csrf\",\n      \"django.template.context_processors.request\",\n      \"django.contrib.auth.context_processors.auth\",\n      \"django.contrib.messages.context_processors.messages\"\n    ],\n    \"load_initial_data\": True,\n    \"load_template_option\": {\n      \"empty_string_rendered\": \"\",\n      \"blocks\": {}\n    },\n    \"extends\": \"\"\n  },\n  {\n    \"template_name\": \"base.html\",\n    \"template_inheritance\": \"\",\n    \"base_template_name\": \"\",\n    \"context_processors\": [\n      \"django.template.context_processors.media\",\n      \"django.template.context_processors.csrf\",\n      \"django.template.context_processors.request\",\n      \"django.contrib.auth.context_processors.auth\",\n      \"django.contrib.messages.context_processors.messages\"\n    ],\n    \"load_initial_data\": True,\n    \"load_template_option\": {\n      \"empty_string_rendered\": \"\",\n      \"blocks\": {}\n    },\n    \"extends\": \"\"\n  },\n  {\n    \"template_name\": \"users/templates/user.html\",\n    \"template_inheritance\": \"user.html\",\n    \"base_template_name\": \"base.html\",\n    \"context_processors\": [\n      \"django.template.context_processors.media\",\n      \"django.template.context_processors.csrf\",\n      \"django.template.context_processors.request\",\n      \"django.contrib.auth.context_processors.auth\",\n      \"django.contrib.messages.context_processors.messages\"\n    ],\n    \"load_initial_data\": True,\n    \"load_template_option\": {\n      \"empty_string_rendered\": \"\",\n      \"blocks\": {}\n    },\n    \"extends\": \"\"\n  },\n  {\n    \"template_name\": \"users/templates/confirm.html\",\n    \"template_inheritance\": \"user.html\",\n    \"base_template_name\": \"base.html\",\n    \"context_processors\": [\n      \"django.template.context_processors.media\",\n      \"django.template.context_processors.csrf\",\n      \"django.template.context_processors.request\",\n      \"django.contrib.auth.context_processors.auth\",\n      \"django.contrib.messages.context_processors.messages\"\n    ],\n    \"load_initial_data\": True,\n    \"load_template_option\": {\n      \"empty_string_rendered\": \"\",\n      \"blocks\": {}\n    },\n    \"extends\": \"\"\n  }\n]\n```", "14": "[\n    {\n        \"file\": \"views.py\",\n        \"path\": \"app_name/views.py\",\n        \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom . import functions_required\nimport django.template.loader as tloader\n\n\ndef hello_world(request):\n    \"\"\"\n    Display text 'Hello World' in the center of the page.\n    \"\"\"\n    for f in functions_required['function']:\n        if f['required'] and not hasattr(hello_world, f['function'][0]):\n            setattr(hello_world, f['function'][0], getattr(django.template loaders,\n                                                         tloader.load_template(\n                                                             'somepath/somedir/' + f[\n                                                                                     'function'][1]))('SomePath/HelloWorld'))\n    \"\"\"\n    },\n    {\n        \"file\": \"templates/somepath/somedir/index.html\",\n        \"code\": \"\",\n    },\n\n]", "15": "```\n[\n  {\n    \"file\": \"home/views.py\",\n    \"path\": \"home\",\n    \"code\": \"\"\"\nfrom django.shortcuts import redirect\nfrom django.urls import reverse\ndef hello_world(request):\n    return redirect(reverse('hello_world'))\n\"\"\"\n  },\n  {\n    \"file\": \"home/templates/home.html\",\n    \"path\": \"home\",\n    \"code\": \"<h1>Home Page</h1><p>You are on the homepage.</p>\"\n  },\n  {\n    \"file\": \"home/views.py\",\n    \"path\": \"hello_world\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render\ndef hello_world(request):\n    return render(request, 'hello_world.html')\n\"\"\"\n  },\n  {\n    \"file\": \"home/templates/hello_world.html\",\n    \"path\": \"hello_world\",\n    \"code\": \"<h1>Hello World!</h1><p>This is the HelloWorld page.</p>\"\n  }\n]\n```", "16": "```\n[\n    {\n        \"file\": \"spring_semester_subjects.py\",\n        \"path\": \"app/databases/python/spring_semester subjects.py\",\n        \"code\": \"\"\"\nimport pandas as pd\nfrom check_file_existence import CheckFileExistence\nfrom validate_HEADERS import ValidateHeaders\nfrom validate_time_column import ValidateTimeColumn\nfrom validate_data_integrity import ValidateDataIntegrity\nfrom validate_null_value import ValidateNullValue\n\ndef main():\n    data = pd.read_excel('Spring Semester Subjects.xlsx')\n    if not (\n        CheckFileExistence().check_file_exists(\"Spring Semester Subjects.xlsx\") and \n        ValidateHeaders().validate_headers(data) and \n        ValidateTimeColumn().validate_time_column(data) and \n        ValidateDataIntegrity().validate_data_integrity(data) and \n        ValidateNullValue().validate_null_value(data)\n    ):\n        print('Invalid file')\n    else:\n        transformed_data = TransformToTwoDimensionTable().transform_to_two_dimension_table(data)\n        output_file_name = 'Transformed_SpringSemesterSubjects.xlsx'\n        CreateOutputExcelFile().create_output_excel_file(output_file_name, transformed_data)\n        SaveTableToExcel().save_table_to_excel(output_file_name, data)\n``` }\n```", "17": "```json\n[\n  {\n    \"file\": \"DataPreparation.py\",\n    \"path\": \"somepath/somedir/DataPreparation.py\",\n    \"code\": \"\"\"\n        from openpyxl import load_workbook\n        import pandas as pd\n        \n        def ReadDataset():\n            wb = load_workbook('Gamedata.xlsx')\n            sheet = wb['Sheet1']\n            data = pd.read_excel(sheet, header=None)\n            return data\n        \n        def LagDependentVariable(data):\n            data = data[['result']]\n            data.shift(periods=1, inplace=True)\n            return data.values\n        \n        def PrepareIndependentVariables(data):\n            independent_vars = data.iloc[:, 0: -1]\n            independent_vars = independent_vars.replace({r'\\\\?' : None}, value=None)\n            try:\n                return independent_vars \n            except Exception as e:\n                print(e)\n\n    \"\"\"\n  },\n  {\n    \"file\": \"ModelCreation.py\",\n    \"path\": \"somepath/somedir/ModelCreation.py\",\n    \"code\": \"\"\"\n        import numpy as np\n        from sklearn.linear_model import LogisticRegression\n\n        def CreateLogisticModel(data):\n            X_train = data.iloc[:, :-1]\n            X_test, X_val, y_test, y_val = TrainTestSplit(X_train.iloc[:-1000],y_train.iloc[:-1000])\n            model = LogisticRegression()\n            model.fit(X_train, y_train)\n            return model\n\n        def GenerateModelSummary(model):\n            summary = []\n            summary.append(f\"Accuracy: {accuracy}\")\n            print(\"\\\\n\")\n            return summary\n    \"\"\"\n  },\n  {\n    \"file\": \"Output.py\",\n    \"path\": \"somepath/somedir/Output.py\",\n    \"code\": \"\"\"\n        import pandas as pd\n        from sklearn.linear_model import LogisticRegression\n\n        def WriteSummary(summary):\n            df = pd.DataFrame({'Model Summary': summary})\n            Writer = pd.ExcelWriter('Logistic.xlsx' )\n            writer = pd.ExcelFile(writer, excel=writer)\n            df.to_excel(writer , sheet_name='Page 1', index=False)\n    \"\"\"\n  }\n]\n```", "18": "[${\"file\": \"/games/main.py\",\"path\": \"./pages/main_menu.py\",\"code\": \"<class 'MainMenu': ...>\"}, \n{\"file\": \"/games/game_environment.py\",\"path\": \"./pages/game_environment.py\",\"code\": \"<class 'GameEnvironment': ...\" }, \n{\"file\": \"/games/game_logic.py\",\"path\": \"./pages/game_logic.py\",\"code\": \"<class 'GameLogic': ...>\"}]", "19": "```\n[\n  {\n    \"file\": \"batch_program.py\",\n    \"path\": \"somepath/somedir/batch_program.py\"\n  },\n  {\n    \"file\": \"\";\n    \"description\": \"Validate dataset to ensure it contains the required data and format before processing.\"\n  }\n]\n```", "20": "[\n  {\n    \"file\": \"settings.py\",\n    \"path\": \"/home/coding/songs/settings.py\",\n    \"code\": \"import os\\\\n\\\\n# Build paths inside the project like this:\\\\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\n\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"/home/coding/songs/urls.py\",\n    \"code\": \"__future__\\\\\\\\n\\\\\\\\n\\\\\\\\itemize\\\\\\\\u2013 URL patterns for ``songs:\\\\\\\\u2019 application\\\\\\\\u2013\\\\\\\\n\\\\\\\\t\\\\\\\\n\\\\\\\\t\\\\\\\\$\\\\\\\\u02dcapp\\\\\\\\u02dc.songs\\\\\\\\u02dc\\\\\\\\u02d0\\\\\\\\u05f3\\\\\\\\u02df_urls\\\\\\\\n\\\\\\\\t\\\\\\\\u021b\\\\\\\\u0226\\\\\\\\u0201\\\\\\\\u2640\\\\u02bf\\\\\\\\u2037\\\\\\\\u265f\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"/home/coding/songs/another_apps urls.py\",\n    \"code\": \"\"\n  },\n  {\n    \"file\": \"wsgi.py\",\n    \"path\": \"/home/coding/songs/wsgi.py\",\n    \"code\": \"# -*- coding: utf-8 -*-\\\\\\\\nimport os \\\\\\\\nfrom django.core.wsgi import get_wsgi_application\\\\\\\\napplication = get_wsgi_application()\"\n  },\n  {\n    \"file\":\"__init__.py\", \n    \"path\": \"/home/coding/songs/\",\n    \"description\":-\">'\\\\u7f64\\\\u898d\\\\u66f8\\\\u5b50\\\\u52d0\\\\u9002'\n  }\n]"}