{"13": [{"file": "manage.py", "path": "/somepath/somedir/manage.py", "code": "import os\nimport sys\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'someproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH? Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()"}, {"file": "settings.py", "path": "/somepath/somedir/someproject/settings.py", "code": "\n# Django settings for someproject project.\n\nimport os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'home',\n    'customers',\n    'products',\n    'purchases',\n    'preferred_products',\n    'sales_analysis',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'someproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'someproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    }\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "wsgi.py", "path": "/somepath/somedir/someproject/wsgi.py", "code": "\nimport os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'someproject.settings')\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "/somepath/somedir/someproject/asgi.py", "code": "\nimport os\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'someproject.settings')\napplication = get_asgi_application()"}, {"file": "urls.py", "path": "/somepath/somedir/someproject/urls.py", "code": "\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('home.urls')),\n]"}, {"file": "__init__.py", "path": "/somepath/somedir/someproject/__init__.py", "code": "# This file can be left empty."}, {"file": "apps.py", "path": "/somepath/somedir/someproject/apps.py", "code": "\nfrom django.apps import AppConfig\n\nclass SomeprojectConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'someproject'"}, {"file": "__pycache__", "path": "/somepath/somedir/someproject/__pycache__", "code": "# This directory should be created and left empty, but it will contain bytecode cache files after running manage.py commands."}, {"file": ".gitignore", "path": "/somepath/somedir/.gitignore", "code": "*.sqlite3\ndb.sqlite3\n__pycache__/"}, {"file": "requirements.txt", "path": "/somepath/somedir/requirements.txt", "code": "Django>=3.2,<4"}]}