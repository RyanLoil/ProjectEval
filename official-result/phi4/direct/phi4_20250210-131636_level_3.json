{"7": [{"file": "app.py", "path": "example_project/example_app/app.py", "code": "# Django App Configuration\nfrom django.apps import AppConfig\n\nclass ExampleAppConfig(AppConfig):\n    name = 'example_app'\n"}, {"file": "__init__.py", "path": "example_project/example_app/__init__.py", "code": ""}, {"file": "models.py", "path": "example_project/example_app/models.py", "code": "# Django Model Definitions\nclass User(models.Model):\n    username = models.CharField(max_length=100, unique=True)\n    email = models.EmailField(unique=True)\n\n    def __str__(self):\n        return self.username"}, {"file": "views.py", "path": "example_project/example_app/views.py", "code": "# Django View Functions\nfrom django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n"}, {"file": "urls.py", "path": "example_project/example_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "__init__.py", "path": "example_project/settings/__init__.py", "code": ""}, {"file": "settings.py", "path": "example_project/settings/settings.py", "code": "import os\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = ['django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'example_app']\nMIDDLEWARE = ['django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware']\nROOT_URLCONF = 'example_project.urls'\nTEMPLATES = [{'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS':{'context_processors':['django.template.context_processors.debug','django.template.context_processors.request','django.contrib.auth.context_processors.auth','django.contrib.messages.context_processors.messages']}}]\nWSGI_APPLICATION = 'example_project.wsgi.application'\nDATABASES = {'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),}}\nAUTH_PASSWORD_VALIDATORS = [{'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},{'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},{'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},{'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'}]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = False\nSTATIC_URL = '/static/'"}, {"file": "__init__.py", "path": "example_project/urls/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_project/urls/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [path('admin/', admin.site.urls), path('', include('example_app.urls'))]"}, {"file": "__init__.py", "path": "example_project/wsgi/__init__.py", "code": ""}, {"file": "wsgi.py", "path": "example_project/wsgi/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\napplication = get_wsgi.application()"}, {"file": "home.html", "path": "example_project/example_app/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"main-content\" class=\"content-wrapper\">\n        <h1 id=\"home-title\" class=\"header\">Welcome to the Home Page</h1>\n        <p id=\"welcome-text\" class=\"text\">This is a simple Django project.</p>\n    </div>\n</body>\n</html>"}], "13": [{"file": "manage.py", "path": "example_project/manage.py", "code": "# Generated by Django 3.2\n# Full code omitted for brevity..."}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "admin.py", "path": "example_app/admin.py", "code": "# Add admin site registration code here...\n# No additional changes recommended"}, {"file": "apps.py", "path": "example_app/apps.py", "code": "from django.apps import AppConfig\n\nclass ExampleAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'example_app'"}, {"file": "forms.py", "path": "example_app/forms.py", "code": "# Add form class definitions here...\n# No additional changes recommended"}, {"file": "migrations/__init__.py", "path": "example_app/migrations/__init__.py", "code": ""}, {"file": "models.py", "path": "example_app/models.py", "code": "# Define your models here...\n# Recommended to include an 'id' field by default.\nclass BaseModel(models.Model):\n    id = models.AutoField(primary_key=True)\n\n    class Meta:\n        abstract = True\n\n# Ensure each model inherits from BaseModel for simplicity and consistency."}, {"file": "urls.py", "path": "example_app/urls.py", "code": "# Define URL patterns for the app here...\nfrom django.urls import path\n\ndef get_urls():\n    return [\n        # Example: path('somepath/', some_view, name='some_name'),\n    ]"}, {"file": "views.py", "path": "example_app/views.py", "code": "# Define view functions or classes here...\nfrom django.shortcuts import render\n\ndef some_view(request):\n    return render(request, 'template.html')"}, {"file": "templates/base_template.html", "path": "example_app/templates/base_template.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>{% block title %}Base Template{% endblock %}</title>\n</head>\n<body id=\"base-template\" class=\"content\">\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "home.html", "path": "example_app/templates/home.html", "code": "{% extends 'base_template.html' %}\n{% block title %}Home{% endblock %}\n{% block content %}\n<div class=\"home\" id=\"home\">\n    <h1>Welcome to the Home Page</h1>\n</div>\n{% endblock %}"}, {"file": "about.html", "path": "example_app/templates/about.html", "code": "{% extends 'base_template.html' %}\n{% block title %}About Us{% endblock %}\n{% block content %}\n<div class=\"about\" id=\"about\">\n    <h1>About Our Company</h1>\n    <p>Information about the company...</p>\n</div>\n{% endblock %}"}, {"file": "contact.html", "path": "example_app/templates/contact.html", "code": "{% extends 'base_template.html' %}\n{% block title %}Contact Us{% endblock %}\n{% block content %}\n<div class=\"contact\" id=\"contact\">\n    <h1>Contact Information</h1>\n    <!-- Contact form or details -->\n</div>\n{% endblock %}"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "settings.py", "path": "example_project/settings.py", "code": "# All settings as stated, no additional changes."}, {"file": "__init__.py", "path": "migrations/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_project/urls.py", "code": "# Configure include and admin path as stated."}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "# Standard WSGI application setup code..."}], "14": [{"file": "manage.py", "path": "myproject/manage.py", "code": "import os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "__init__.py", "path": "myproject/__init__.py", "code": ""}, {"file": "views.py", "path": "myproject/example_app/views.py", "code": "from django.shortcuts import render\nfrom django.views import View\n\nclass HelloWorldView(View):\n    \"\"\"\n    Class-based view to render the Hello World page.\n    \"\"\"\n\n    def get(self, request):\n        \"\"\"\n        Handle GET request to display Hello World.\n        \"\"\"\n\n        return render(request, 'hello_world.html', {'message': 'Hello World'})\n"}, {"file": "style.css", "path": "myproject/example_app/static/css/style.css", "code": "body {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\nh1 {\n    color: #333;\n}\n"}, {"file": "hello_world.html", "path": "myproject/example_app/templates/hello_world.html", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hello World</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'css/style.css' %}\">\n</head>\n<body>\n    <h1 id=\"message\" class=\"message\">Hello World</h1>\n</body>\n</html>\n"}, {"file": "settings.py", "path": "myproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your-secret-key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            os.path.join(BASE_DIR, 'example_app/templates'),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n"}, {"file": "urls.py", "path": "myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom example_app.views import HelloWorldView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', HelloWorldView.as_view(), name='hello_world'),\n]\n"}, {"file": "wsgi.py", "path": "myproject/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "myproject/example_app/__init__.py", "code": ""}], "15": [{"file": "manage.py", "path": "example_project/manage.py", "code": "#!/usr/bin/env python\nfrom django.core.management import execute_from_command_line\nif __name__ == '__main__':\n    execute_from_command_line()\n"}, {"file": "__init__.py", "path": "example_project/example_app/__init__.py", "code": ""}, {"file": "models.py", "path": "example_project/example_app/models.py", "code": "# Define your app models here. Example:\n# from django.db import models\n#\nclass ExampleModel(models.Model):\n    name = models.CharField(max_length=100)\n"}, {"file": "views.py", "path": "example_project/example_app/views.py", "code": "# Import necessary Django modules and define your views here.\n# from django.shortcuts import render\n#\ndef home(request):\n    return render(request, 'home.html')\n\ndef hello_world(request):\n    return render(request, 'hello_world.html') \n"}, {"file": "urls.py", "path": "example_project/example_app/urls.py", "code": "# Create the urls here for your app. Example:\n# from django.urls import path\n#\nfrom .views import home, hello_world\n\nurlpatterns = [\n    path('', home, name='home'),\n    path('hello-world/', hello_world, name='hello-world'),\n]"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\napplication = get_wsgi_application()"}, {"file": "settings.py", "path": "example_project/settings.py", "code": "# Import necessary Django modules and define your settings.\nimport os\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = [] \nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'example_project.urls'\nTEMPLATES = [{ ... }]\nWSGI_APPLICATION = 'example_project.wsgi.application'\nDATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), } }\nAUTH_PASSWORD_VALIDATORS = [ ... ]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = False\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'example_app/static')]\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "# Import necessary Django modules and define your project urls.\nfrom django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "__init__.py", "path": "example_project/example_app/templates/__init__.py", "code": ""}, {"file": "home.html", "path": "example_project/example_app/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <h1 id='home-title' class='headline'>Welcome to the HomePage!</h1>\n    <p id='content' class='text'>This is the home Page of our site.</p>\n    <a href=\"{{ url('hello-world') }}\" id= \"link-home-hello \"class=\"nav-link\">Visit Hello World Page</a>\n</body>\n</html>"}, {"file": "hello_world.html", "path": "example_project/example_app/templates/hello_world.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hello World</title>\n</head>\n<body>\n    <h1 id='hello-world-title' class='headline'>Welcome to the Hello World Page!</h1>\n    <p id='content' class='text'>This page says Hello to you, world.</p>\n    <a href=\"{{ url('home') }}\" id= \"link-hello-home \"class=\"nav-link\">Back to Home</a>\n</body>\n</html> \n"}], "16": [{"file": "16-stdanswer.py", "path": "project/16-stdanswer.py", "code": "\nimport os\nimport pandas as pd\n\ndef check_file_exists(file_path):\n    return os.path.exists(file_path)\n\ndef check_file_format(file_path, extension='.xlsx'):\n    return file_path.endswith(extension)\n\ndef validate_data(df):\n    required_columns = {'Subject Name', 'Code', 'Credits'}\n    if not required_columns.issubset(df.columns):\n        raise ValueError('Missing one or more required columns.')\n    if df.isnull().values.any():\n        raise ValueError('Data contains null values.')\n\ndef process_subjects(input_file, output_file):\n    if not check_file_exists(input_file):\n        raise FileNotFoundError(f'{input_file} does not exist.')\n    \n    if not check_file_format(input_file):\n        raise ValueError(f'{input_file} is not in the correct format.')\n\n    df = pd.read_excel(input_file)\n    validate_data(df)\n    # Example processing: remove duplicates and sort by credits\n    df = df.drop_duplicates().sort_values(by='Credits', ascending=False)\n    df.to_excel(output_file, index=False)\n    print(f'Processed data saved to {output_file}')\n\ndef main():\n    input_file = \"Spring Semester Subjects.xlsx\"\n    output_file = \"Processed Subjects Table.xlsx\"\n    try:\n        process_subjects(input_file, output_file)\n    except Exception as e:\n        print(f'Error: {str(e)}')\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "requirements.txt", "path": "project/requirements.txt", "code": "pandas==1.4.3\nopenpyxl==3.0.10"}], "17": [{"file": "main.py", "path": "./logistic_regression_analysis/main.py", "code": "import os\nimport pandas as pd\nimport statsmodels.api as sm\n\ndef read_and_validate_data(input_file):\n    \"\"\"\n    Read the dataset and ensure all columns are numeric.\n    Raise an error if any missing values (NaN) are found.\n    \"\"\"\n    data = pd.read_excel(input_file)\n    if not data.applymap(np.isreal).all().all():\n        raise ValueError('All columns must be numeric')\n    if data.isnull().values.any():\n        raise ValueError('Data contains missing values (NaN)')\n    return data\n\n\ndef add_lagged_dependent_variable(data, target_column):\n    \"\"\"\n    Add a one-period lag for the dependent variable and drop missing rows.\n    \"\"\"\n    data['Lag_' + target_column] = data[target_column].shift(1)\n    return data.dropna()\n\n\ndef prepare_features_and_target(data, target_column, lagged_column):\n    \"\"\"\n    Prepare the feature matrix (X) and target vector (y).\n    \"\"\"\n    X = sm.add_constant(data.drop(columns=[target_column]))\n    y = data[target_column]\n    return X, y\n\n\ndef build_logistic_model(X, y):\n    \"\"\"\n    Build and fit a logistic regression model.\n    \"\"\"\n    logit_model = sm.Logit(y, X)\n    result = logit_model.fit()\n    print(result.summary())\n    return result\n\n\ndef save_summary_to_excel(result, output_file):\n    \"\"\"\n    Save the logistic regression summary to an Excel file.\n    \"\"\"\n    with pd.ExcelWriter(output_file) as writer:\n        result.summary2().pipe(pd.DataFrame).to_excel(writer, index=False)\n\n\ndef main(input_file, output_file, target_column):\n    \"\"\"\n    Execute all steps to run the logistic regression analysis.\n    \"\"\"\n    data = read_and_validate_data(input_file)\n    data_with_lag = add_lagged_dependent_variable(data, target_column)\n    X, y = prepare_features_and_target(data_with_lag, 'Lag_' + target_column, target_column)\n    result = build_logistic_model(X, y)\n    save_summary_to_excel(result, output_file)\n\nif __name__ == \"__main__\":\n    input_file_path = \"Gamedata.xlsx\"\n    output_file_path = \"Logistic.xlsx\"\n    target_column_name = \"Outcome\"  # Replace 'Outcome' with the actual column name of interest\n    main(input_file_path, output_file_path, target_column_name)"}]}