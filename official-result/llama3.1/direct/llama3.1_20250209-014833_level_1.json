{"4": [{"file": "urls.py", "path": "project/qr_code_generator/project/urls.py", "code": "\n\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('generator.urls')),  # URL config for generator app\n]"}, {"file": "views.py", "path": "project/qr_code_generator/generator/views.py", "code": "\nfrom django.shortcuts import render, redirect\nfrom .models import QRCode\nimport qrcode  # noqa: E402\nfrom io import BytesIO\nfrom PIL import Image\n\nclass CodeGeneratorView(TemplateView):\n    template_name = 'generator/qr_code.html'\n\n    def post(self, request):\n        data = request.POST.get('data', '')\n        qr_image = qrcode.make(data)\n       \n        # Create an in-memory image to store the generated QR code\n        img_io bytes = BytesIO()\n        qr_image.save(img_io_bytes, 'PNG')\n         \n        return redirect('view_qr_code', pk=img_io_bytes)  # Use the hash of the QR code as a unique identifier\n"}, {"file": "__init__.py", "path": "project/qr_code_generator/generator/__init__.py", "code": ""}, {"file": "models.py", "path": "project/qr_code_generator/generator/models.py", "code": "\nfrom django.db import models\nimport hashlib\n\nclass QRCode(models.Model):\n    qr_code = models.ImageField(upload_to='images/')\n    data = models.CharField(max_length=200)  # Store the text to be encoded in the QR code\n"}, {"file": "templates/qr_code.html", "path": "project/qr_code_generator/generator/templates/generator/qr_code.html", "code": "\n<!-- Template for displaying generated QR codes -->\n<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n    <style>\n        body {\n            background-color: #e5c900;\n            font-family: Arial, sans-serif;\n        }\n\n        h1 {\n            color: #0096d3;\n            text-align: center;\n        }\n\n        .qrcode {\n            border: 1px solid #f0f0f0;\n            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n    </style>\n</head>\n<body>\n\n    <!-- Display QR code -->\n    <div class=\"container\">\n        <h1>QR Code Generator &ndash; Generated a new QR code!</h1>\n\n        <img id=\"qrcode\" src=\"media/qrcode_image.png/\">\n</body>\n"}, {"file": "views.py", "path": "project/qr_code_generator/project/views.py", "code": ""}, {"file": "__init__.py", "path": "project/qr_code_generator/__init__.py", "code": ""}], "19": [{"file": "read_data.py", "path": "/home/user/project/read_data.py", "code": "# Import necessary libraries\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\ndata = pd.read_csv('Deathlist.csv')\n# Extract the 'Date of death' column and convert to datetime format\ndeath_date = pd.to_datetime(data['Date of death'])\n# Calculate weekly deaths by aggregating values with 7-day rolling window\nweekly_deaths = death_date.rolling(window=7).sum()\n# Plot a histogram depicting weekly deaths\nplt.hist(weekly_deaths, bins=10)\nplt.xlabel('Death Date')\nplt.ylabel('Frequency')\nplt.title('Weekly Deaths Histogram')\ndisplay(plt.show())"}, {"file": "deathlist.csv", "path": "/home/user/project/deathlist.csv", "code": "+ Date of death \n2022-01-01\n2022-01-02\n..."}, {"file": "requirements.txt", "path": "/home/user/project/requirements.txt", "code": "+ pandas==1.3.4\nmatplotlib==3.5.0"}, {"file": "project.json", "path": "/home/user/project/project.json", "code": "{'name': 'Deathlist Analysis', 'description': 'Read Deathlist.csv and plot weekly deaths histogram'}"}]}