{"4": [{"file": "views.py", "path": "qr_app/views.py", "code": ""}, {"file": "models.py", "path": "qr_app/models.py", "code": ""}, {"file": "migrations/0001_initial.py", "path": "qrmigration/migrations/0001_initial.py", "code": ""}, {"file": "urls.py", "path": "qr_app/urls.py", "code": ""}, {"file": "!__init__.py", "path": "qr_app/__init__.py", "code": ""}, {"file": "__init__.py", "path": "qr_code_generator/__init__.py", "code": ""}, {"file": "__init__.py", "path": "qr_app/__init__.py", "code": ""}, {"file": "templates/qr_app/base.html", "path": "qr_app/templates/qr_app/base.html", "code": "<html><body><h1>QR Reader</h1><div id='qr-container'></div></body></html>"}, {"file": "templates/qr_app/result.html", "path": "qr_app/templates/qr_app/result.html", "code": "<html><body><h2 id='result'>Result: {{ result }}</h2></body></html>"}, {"file": "wsgi.py", "path": "qr_code_generator/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_code_generator.settings')\napplication = get_wsgi_application()"}, {"file": "settings.py", "path": "qr_code_generator/settings.py", "code": "SECRET_KEY = 'your_secret_key'\nDEBUG = True\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qr_app',\n]\nROOT_URLCONF = 'qr_code_generator.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nDATABASES = {'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3')}"}], "16": [{"file": "16-stdanswer.py", "path": "/Users/user/Documents/Project/script/16-stdanswer.py", "code": "import os\nimport pandas as pd\n\n# File paths\ninput_file = \"Spring Semester Subjects.xlsx\"\noutput_file = \"Processed Subjects Table.xlsx\"\n\ndef check_file_exists(file_path):\n    \"\"\"Check if the specified file path exists.\\n    \"\"\"\n    pass\n\n\ndef check_file_format(file_path):\n    \"\"\"Check if the file is in Excel format.\\n    \"\"\"\n    pass\n\n\ndef validate_data(df):\n    \"\"\"Validate the DataFrame for required columns and values.\\n    \"\"\"\n    pass\n\n\ndef process_subjects(input_file, output_file):\n    \"\"\"Process the subjects from input Excel file and save the output to another Excel file.\\n    \"\"\"\n    pass\n\n\ndef main():\n    \"\"\"Main execution function.\\n    \"\"\"\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"}, {"file": "requirements.txt", "path": "/Users/user/Documents/Project/script/requirements.txt", "code": "pandas\nopenpyxl\n"}, {"file": "process_subjects.py", "path": "/Users/user/Documents/Project/script/process_subjects.py", "code": "from .utils import check_file_exists, check_file_format, validate_data\nimport pandas as pd\n\ndef process_subjects(input_file, output_file):\n    # Load input Excel file\n    df = pd.read_excel(input_file)\n\n    # Validate data\n    if not validate_data(df):\n        print(\"Invalid data in the input file\")\n        return False\n\n    # Process and save to output file\n    try:\n        df.to_excel(output_file, index=False)\n    except Exception as e:\n        print(f\"Error processing subjects: {str(e)}\")\n        return False\n\n    return True"}, {"file": "validate_data.py", "path": "/Users/user/Documents/Project/script/validate_data.py", "code": "import pandas as pd\n\ndef validate_data(df):\n    # Check required columns\n    required_columns = ['Subject Code', 'Subject Name']\n    if not all(col in df.columns for col in required_columns):\n        return False\n\n    # Check values (e.g., unique subject codes)\n    if len(df['Subject Code'].unique()) != len(df['Subject Code']):\n        return False\n\n    return True"}, {"file": "utils.py", "path": "/Users/user/Documents/Project/script/utils.py", "code": "from . import validate_data, process_subjects\n\ndef check_file_exists(file_path):\n    try:\n        open(file_path, 'rb')\n    except FileNotFoundError:\n        return False\n    return True"}, {"file": "process_subjects.spec", "path": "/Users/user/Documents/Project/spec/process_subjects.spec", "code": "# This is a sample specification file for the process_subjects function\nInputs:\n  - input_file: Path to the Excel file with subject data\n  - output_file: Path to save processed subjects data\nOutputs:\n  - processed_subjects.xlsx: Processed subjects data stored in an Excel file"}], "19": [{"file": "19-stdanswer.py", "path": "", "code": "{\"main_file\": \"\"}}"}, {"file": "readme.txt", "path": "README.md", "code": "# Weekday Deaths Histogram Project\n# Description: This project calculates the total number of deaths and plots them as a histogram grouped by week.\n\n## Prerequisites:\n* Python 3.7+ or Anaconda Environment\n* Pandas library installed using pip install pandas"}, {"file": "requirements.txt", "path": "", "code": "# Weekday Deaths Histogram Project Dependencies\npandas==1.2.4\nmatplotlib==3.5.0"}], "20": [{"file": "models.py", "path": "example_app/models.py", "code": "from django.db import models\n\nclass Post(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import Post\n\ndef home(request):\n    posts = Post.objects.all()\n    return render(request, 'home.html', {'posts': posts})\n"}, {"file": "templates/home.html", "path": "example_app/templates/home.html", "code": "<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <h1>Latest Posts</h1>\n    <ul>\n        {% for post in posts %}\n            <li><a href=\"{{ post.id }}/\">{{ post.title }}</a></li>\n        {% endfor %}\n    </ul>\n</body>\n</html>\n"}, {"file": "templates/post_detail.html", "path": "example_app/templates/post_detail.html", "code": "<html>\n<head>\n    <title>Post Detail</title>\n</head>\n<body>\n    <h1>{{ post.title }}</h1>\n    <p>{{ post.content }}</p>\n    <!-- Add comment section here -->\n</body>\n</html>\n"}, {"file": "urls.py", "path": "example_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('<int:pk>/', views.post_detail, name='post-detail'),\n]"}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "settings.py", "path": "project/settings.py", "code": "INSTALLED_APPS = [\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.messages',\n        'django.contrib.staticfiles',\n        'example_app',\n    ]"}, {"file": "wsgi.py", "path": "project/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')application = get_wsgi_application()"}]}