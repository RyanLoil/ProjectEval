{"11": [{"file": "app/models.py", "path": "/home/user/project/app/models.py", "code": "class TestCode(models.Model):\n\ttitle = models.CharField(max_length=255)\n\tstatus = models.CharField(max_length=10)\n\treview_notes = models.TextField()"}, {"file": "app/forms.py", "path": "/home/user/project/app/forms.py", "code": "from django import forms\n\nclass TestCodeForm(forms.ModelForm):\n\tmodel = TestCode\n\tfields = ('title', 'status', 'review_notes')\n\twidgets = {\n\t\t'review_notes': Textarea,\n\t}\n"}, {"file": "app/views.py", "path": "/home/user/project/app/views.py", "code": "from django.shortcuts import render\nfrom .models import TestCode\nfrom .forms import TestCodeForm\n\ndef display_welcome_message(request):\n\treturn render(request, 'welcome.html')\ndef test_code_view(request):\n\tform = TestCodeForm()\n\tif request.method == 'POST':\n\t\tform = TestCodeForm(request.POST)\n\ttif form.is_valid():\n\t\ttest_code = form.save()\n\t\treturn redirect('result', pk=test_code.pk)\n\treturn render(request, 'test_code.html', {'form': form})"}, {"file": "app/urls.py", "path": "/home/user/project/app/urls.py", "code": "from django.urls import path\nfrom .views import display_welcome_message, test_code_view\nurlpatterns = [\n\t(path('welcome/', display_welcome_message), name='welcome'),\n\t(path('test_code/', test_code_view), name='test_code'),\n]"}, {"file": "templates/welcome.html", "path": "/home/user/project/templates/welcome.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<title>Welcome</title>\n</head>\n<body>\n\t<div id=\"welcome\" class=\"page-header\">\n\t<h1 id=\"title\">Welcome to our website!</h1>\n\t<form action=\"{% url 'test_code' %}\" method='get'>\n\t\t<button type=\"submit\" id=\"test-code-button\">Go to Test Code</button>\n\t</form>\n</div>\n</body>\n</html>"}, {"file": "templates/test_code.html", "path": "/home/user/project/templates/test_code.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<title>Test Code</title>\n</head>\n<body>\n\t<div id=\"test-code\" class=\"page-header\">\n\t<h1 id=\"title\">Test Code Page</h1>\n\t<form action \"{% url 'result' %}\" method='post'>\n\t\t{{ form.as_p }}\n\t\t<button type=\"submit\" id=\"submit-button\">Submit</button>\n\t</form>\n\t<a href='#' id=\"import-json\">Import JSON File</a>\n</div>\n\n\t<script>\n\t\tdocument.getElementById('import-json').addEventListener(\"click\", function() {\n\t\t\tsomeJsFunction(); // implement this function in a separate script tag or file\n\t\t});\n\t</script>\n</body>\n</html>"}, {"file": "templates/result.html", "path": "/home/user/project/templates/result.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<title>Result</title>\n</head>\n<body>\n\t<div id=\"result\" class=\"page-header\">\n\t<h1 id=\"title\">Your Test Code Result!</h1>\n\th2 id=\"status\">{{ test_code.status }}</h2>\n\th2 id=\"review-notes\">{{ test_code.review_notes }}</h2>\n</div>\n</body>\n</html>"}, {"file": "templates/about.html", "path": "/home/user/project/templates/about.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n\t<title>About Page</title>\n</head>\n<body>\n\t<div id=\"about\" class=\"page-header\">\n\t<h1 id=\"title\">About Our Website</h1>\n\tp>This is the about page for our website...</p>\n</div>\n</body>\n</html>"}, {"file": "app/serializers.py", "path": "/home/user/project/app/serializers.py", "code": "from rest_framework import serializers\nfrom .models import TestCode\n\nclass TestCodeSerializer(serializers.ModelSerializer):\n\tmodel = TestCode\n\tefields = ('title', 'status', 'review_notes')"}], "18": [{"file": "main.py", "path": "/project/main.py", "code": "import tkinter as tk\nfrom tkinter import messagebox\nfrom game import Game"}, {"file": "__init__.py", "path": "/project/game/__init__.py", "code": ""}, {"file": "game.py", "path": "/project/main.py", "code": "import tkinter as tk\nclass Game(tk.Tk):\n    def __init__(self):\n        super().__init__()\n        self.pages = []\n\n        # Page: Main Menu\n        self.main_menu_page = MainMenu(self)\n        self/pages.append(self.main_menu_page)        self.protocol('WM_DELETE_WINDOW', self.on_closing)\n\n    def on_closing(self):\n        if messagebox.askokcancel('Quit?', 'Do you want to quit this game?'):            self.destroy()\n        return"}, {"file": "MainMenu.py", "path": "/project/game/MainMenu.py", "code": "import tkinter as tk\nfrom tkinter import ttk, messagebox\nclass MainMenu:\n    def __init__(self, root):\n        super().__init__()\n        self.root = root\n        self.pages = []\n"}, {"file": "game_logic.py", "path": "/project/game/game_logic.py", "code": "class GameLogic:\n    def __init__(self):\n        pass\n    def parse_command(self, command):\n        # TO DO: complete implementation of the game logic\n        \n"}, {"file": "game_environment.py", "path": "/project/game/game_environment.py", "code": "class GameEnvironment:\n    def __init__(self):\n        pass\n    def move_player(self, new_location):\n        # TO DO: complete implementation of the game environment\n        \n"}, {"file": "ui.html", "path": "/project/game/ui.html", "code": "<html><head>\n\t<title>Main Menu</title>\n\t<meta charset=\"UTF-8\">\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n<head>\n<body>\n\thead>\n\t<h1>{{page}}</h1>\n\t<nav>\n\t\t<ul>\n\t\t\t<li><a id=\"start-game-btn\">Function: {{function}} - {{description}} | <iclass class='fa fa-play'></i></a></li>\n\t\t\t<li><a id=\"instructions-link\">Instructions Link</a></li>\n\t\t\t<li id=\"exit-game-button\">\n\t\t\t<a id=\"exit-game-anchor\">Exit Game</aclass></li>\n\t\t\t<li >\n\t\t\t</ul>\n\t</nav>\n<script src=\"index.js\" type=\"text/javascript\"></script>\n</body>\n"}, {"file": "style.css", "path": "/project/game/style.css", "code": "/* Add your CSS styles here */\n\u00a0"}, {"file": "index.js", "path": "/project/game/index.js", "code": "// <script>\n\tconsole.log('The game engine file is loaded successfully');\n</script>"}], "19": [{"file": "Deathlist.csv", "path": "/project/data/Deathlist.csv", "code": ""}, {"file": "validate_dataset.py", "path": "/project/scripts/validate_dataset.py", "code": "def validate_dataset(df):\n    # validation logic here\n    return True"}, {"file": "processors.py", "path": "/project/scripts/processors.py", "code": "import pandas as pd\n\ndef process_data(df):\n    # processing logic here\n    return df"}, {"file": "read_deathlist_data.py", "path": "/project/scripts/read_deathlist_data.py", "code": "def read_deathlist_data():\n    df = pd.read_csv('Deathlist.csv')\n    return df"}, {"file": "calculate_weekly_deaths.py", "path": "/project/scripts/calculate_weekly_deaths.py", "code": "import pandas as pd\nfrom datetime import datetime, timedelta\n\ndef calculate_weekly_deaths(df):\n    # aggregation logic here\n    return weekly_deaths"}, {"file": "generate_histogram.py", "path": "/project/scripts/generate_histogram.py", "code": "import matplotlib.pyplot as plt\n\ndef generate_histogram(weekly_deaths):\n    # histogram generation logic here\n    plt.show()"}, {"file": "output_histogram.html", "path": "/project/output/output_histogram.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <!-- histogram will be inserted here -->\n</body>\n</html>"}, {"file": "main.py", "path": "/project/scripts/main.py", "code": "import read_deathlist_data as rd\nfrom processors import process_data as pd\nfrom calculate_weekly_deaths as cwd import calculate_weekly_deaths as cwl\ncode>"}]}