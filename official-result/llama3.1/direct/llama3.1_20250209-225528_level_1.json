{"1": [{"file": "settings.py", "path": "/home/user/Desktop/bmi_calculator/settings.py", "code": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\"\n]\n\nALLOWED_HOSTS = ['*']"}, {"file": "models.py", "path": "/home/user/Desktop/bmi_calculator/app/models.py", "code": "from django.db import models\n\nclass User(models.Model):\n    height = models.IntegerField()\n    weight = models.IntegerField()"}, {"file": "views.py", "path": "/home/user/Desktop/bmi_calculator/app/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import User\ndef index(request):\n    if request.method == \"POST\":\n        height = float(request.POST.get(\"height\"))\n        weight = float(request.POST.get(\"weight\"))\n        user = User(height=height, weight=weight)\n        user.save()\n        return redirect('result')\n    return render(request, 'index.html')"}, {"file": "forms.py", "path": "/home/user/Desktop/bmi_calculator/app/forms.py", "code": ""}, {"file": "templates/index.html", "path": "/home/user/Desktop/bmi_calculator/templates/index.html", "code": "<div id=\"calculator\">\n  <form method=\"post\" action=\"\">"}, {"file": "templates/result.html", "path": "/home/user/Desktop/bmi-calculator/templates/result.html", "code": "<div id=\"result\">\n  <h2>Result:</h2>\n  <p>BMI: {{ user.bmi }}</p>"}, {"file": "__init__.py", "path": "/home/user/Desktop/bmi_calculator/app/__init__.py", "code": ""}, {"file": "admin.py", "path": "/home/user/Desktop/bmi_calculator/app/admin.py", "code": ""}], "14": [{"file": "requirements.txt", "path": "project/requirements.txt", "code": "django==3.2\n"}, {"file": ".gitignore", "path": "project/.gitignore", "code": "*.py[cod]\n__pycache__/"}, {"file": "manage.py", "path": "project/manage.py", "code": "import os\nfrom django.core.management.utils import get_random_secret_key\nwith open(os.path.join(os.path.dirname(os.path.abspath(__file__)), 'secret.key'), 'w') as f:\n    f.write(get_random_secret_key())"}, {"file": "settings.py", "path": "project/settings.py", "code": "from pathlib import Path\nimport os\n# Build paths inside the project like this: BASE_DIR / ''.\nBASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'random_secret_key'\nALLOWED_HOSTS = []\n INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'hello',\n]\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nenviron = os.environ.copy()\nif environ.get('DEBUG'): \n    DEBUG=True\nelse: \n    DEBUG=False"}, {"file": "urls.py", "path": "project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\n    path('', include('hello.urls')),\n]\nwsgi.py"}, {"file": "__init__.py", "path": "project/hello/__init__.py", "code": ""}, {"file": "admin.py", "path": "project/hello/admin.py", "code": ""}], "15": [{"file": "urls.py", "path": "/home/user/project/helloworld/urls.py", "code": "from django.urls import path\nfrom . import views\ncurrent_path = path('', views.home, name='homepage')"}, {"file": "views.py", "path": "/home/user/project/helloworld/views.py", "code": "from django.shortcuts import render\ndef home(request):\n    return render(request, 'helloword.html')\n"}, {"file": "models.py", "path": "/home/user/project/helloworld/models.py", "code": ""}, {"file": "templates/helloword.html", "path": "/home/user/project/helloworld/templates/helloword.html", "code": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Helloword</title>\n\t</head>\n\t<body>\n\t\t<button id=\"jump-button\" class=\"btn btn-primary\" onclick=\"location.href='/helloword/';\">Click me!</button>\n\t</body>\n</html>"}, {"file": "admin.py", "path": "/home/user/project/helloworld/admin.py", "code": ""}, {"file": "__init__.py", "path": "/home/user/project/helloworld/__init__.py", "code": ""}], "17": [{"file": "read_data.bat", "path": "C:/Program Files/Microsoft/xlsx-creator", "code": "@echo off\r\n"}, {"file": "logistic_model.py", "path": "C:/Users/username/Documents/project/logistic_model", "code": "import pandas as pd\r\nfrom statsmodels.discrete.discretestat import Logit\r\nfrom statsmodels.tools import add_constant\r\n\r\n# Read data from xlsx file\r\ndf = pd.read_excel('Gamedata.xlsx', header=0)\r\n\r\n# Add one-period-lag process to dependence variable\r\ndf['result_lag'] = df['result'].shift()\r\n\r\n# Drop missing values and create constant column\r\ndf = add_constant(df.dropna())\r\n\r\n# Define logistic model\r\nmodel = Logit('result ~ result_lag + ' + '+'.join(map(str, list(df.columns)[1:])), df)\r\n\r\n# Fit the model\r\nmodel.fit()\r\n\r\n# Get summary\r\nsummary = str(model.summary())\r\n\r\n# Save results to xlsx file\r\ndf_results = pd.DataFrame({'summary': [summary]})\rdf_results.to_excel('Logistic.xlsx', index=False)\r\n"}]}