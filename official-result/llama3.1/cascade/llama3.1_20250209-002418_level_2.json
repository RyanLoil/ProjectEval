{"2": [{"file": "models.py", "path": "currencies_app/migrations", "code": "from django.db import models\\n\\nclass Currency(models.Model):\\n    name = models.CharField(max_length=255)\\n    symbol = models.CharField(max_length=10)"}, {"file": "/exchange_data/adapters.py", "path": "/exchange_data/adapters", "code": ""}, {"file": "__init__.py", "path": "currencies_app/migrations", "code": ""}, {"file": "views.py", "path": "currencies_app/views", "code": "from rest_framework.response import Response\\nfrom .models import Currency\\n\\ndef home_view(request):\\n    currencies = Currency.objects.all()\\n    return Response({'currencies': list(currencies)})\\n"}, {"file": "__init__.py", "path": "currencies_app/serializers", "code": ""}, {"file": "serializers.py", "path": "currencies_app/serializers", "code": "from rest_framework import serializers\\nfrom .models import Currency\\n\\nclass CurrencySerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = Currency\\n        fields = ['name', 'symbol']"}, {"file": "/templates/base.html", "path": "/templates/base.html", "code": "<html>\\n    <head>\\n        <title>Currency Exchange</title>\\n    </head>\\n    <body>\\n        <h1 id='title'>Currency Exchange</h1>\\n        <% if request.user.is_authenticated %>\\n          \\n        <% else %>\\n          \\n        <% end %>"}, {"file": "admin.py", "path": "currencies_app/migrations", "code": "from django.contrib import admin\\n`` from .models import Currency"}, {"file": "__init__.py", "path": "/exchange_data/adapters", "code": ""}, {"file": "adapters.py", "path": "/exchange_data/adapters", "code": "API endpoints for exchange rate APIs: "}, {"file": "urls.py", "path": "currencies_app/urls", "code": "from django.urls import path, include\\nfrom rest_framework import routers\\n\\nrouters = routers.DefaultRouter()\\ngoals_router.register(r'^api/v1/goals/', GoalViewSet)\\nclass HomeView(TemplateView):\\n    template_name ='home.html'\\nurlpatterns = [\\n    path('', views.home_view, name='home'),\\n    path('api/v1/currencies/', APIView.as_view()),\\nout"}, {"file": "settings.py", "path": "", "code": "\\nLANGUAGE_CODE = 'en-us'\\nTIME_ZONE = 'UTC'\\nuwsgi\\nbasedir = '/home/web/django_currencies_app/'\\nsqlite3-database = '{basedir}currencies.db'"}, {"file": "__init__.py", "path": "currencies_app/serializers"}], "4": [{"file": "models.py", "path": "/mods/mysite/models.py", "code": "from django.db import models"}, {"name": "templates", "path": "mysite/templates", "files": [{"id": "1", "class": "template", "file": "base.html", "path": "/somepath/mysite/templates/base.html", "code": "<!DOCTYPE html><html id=\"doc\" class=\"container\"><head><title>Mysite</title></head><body>"}, {"id": "2", "class": "template", "file": "home.html", "path": "/somepath/mysite/templates/home.html", "code": "<!DOCTYPE html><html id=\"doc\" class=\"container\"><head><title>Mysite</title></head><body><div id=\"content\" class=\"row\"><h1>{{ title }}</h1></div>"}, {"id": "3", "class": "template", "file": "qr_code_generator.html", "path": "/somepath/mysite/templates/qr_code_generator.html", "code": "<!DOCTYPE html><html id=\"doc\" class=\"container\"><head><title>QR Code</title></head><body><div id=\"content\" class=\"row\"><h1>{{ content }}</h1><img id=\"qrcode\" src=\"{{ qr_code_url }}\"></div>"}]}, {"name": "static", "path": "mysite/static", "files": [{"id": "4", "class": "css", "file": "styles.css", "path": "/home/user/mysite/static/css/styles.css", "code": ".container { width: 80%; margin: auto; } .row { display: flex; justify-content: center; align-items: center; }"}, {"id": "5", "class": "img", "file": "logo.png", "path": "/home/user/mysite/static/img/logo.png", "code": ""}]}, {"file": "views.py", "path": "/mods/mysite/views.py", "code": "from django.shortcuts import render\nfrom .models import HomeView"}, {"name": "templates/Home", "path": "/home/templates/Home", "description": "Home page templates"}], "19": [{"file": "project_requirements.txt", "path": "/requirements/project.txt", "code": "deathlist_data\t\t pd\nprocess\tpandas, numpy\nanalysis\tseaborn, matplotlib"}, {"file": "read_deathlist_data.py", "path": "/data/read_deathlist_data.py", "code": "import pandas as pd\n\ndata = pd.read_csv('Deathlist.csv')"}, {"file": "deathlist.csv", "path": "/data/Deathlist.csv", "code": "", "description": "Dataset containing Deathlist data"}, {"file": "process_data.py", "path": "/analysis/process.py", "code": "+data to process the dataset\n# Structure data appropriately for weekly analysis."}, {"file": "validate_dataset.py", "path": "/analysis/validate_dataset.py", "code": "def validate_dataset(data):\n    Check if dataset contains required data and format\n    return True/False"}, {"file": "calculate_weekly_deaths.py", "path": "/analysis/calculations.py", "code": "+data to aggregate the number of deaths per week"}, {"file": "generate_histogram.py", "path": "/visualizations/histograms.py", "code": "+data to create a histogram depicting the weekly deaths"}, {"file": "output_histogram.py", "path": "/visualizations/output.py", "code": "+data to print or display the generated histogram"}, {"file": "main.py", "path": "/analysis/main.py", "code": "import pandas as pd\nfrom process_data import process_data\nfrom validate_dataset import validate_dataset\ndata = read_deathlist_data()\nprocessed_data = process_data(data)\nvalidated_data = validate_dataset(processed_data)\n# Further analysis and output"}], "20": [{"file": "models.py", "code": "from django.db import models\n\nclass Blog(models.Model):\n    title = models.CharField(max_length=255)\n    content = models.TextField()\n"}, {"file": "views.py", "path": "appname/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Blog\n\ndef display_blogs(request):\n    blogs = Blog.objects.all()\n    return render(request, 'blog/index.html', {'blogs': blogs})\n"}, {"file": "templates/blog/post_detail.html", "path": "appname/templates/blog/xx_post_detail.html", "code": "<h1 id='post-title' class='post-title'>{{ post.title }}</h1>\n<p id='post-content' class='post-content'>{{ post.content }}</p>\n"}, {"file": "admin.py", "description": "Blog Owner can manipulate blog posts"}, {"file": "templates/blog/single_post.html", "path": "appname/templates/blog/xx_singlepost.html", "code": "Read Blog Content"}, {"file": "urls.py", "description": ""}, {"file": "template_tag.py", "path": "appname/mixins/template_tag.py", "code": ""}, {"file": "templates/blog/categories.html", "path": "appname/templates/blog/xx_categories.html", "code": "<h1 id='category-title' class='category-title'>Catogorization of Blogs</h1>\n<ul id='categories-list' class='categories-list'></ul>\n"}, {"file": "__init__.py", "path": "appname/__init__.py", "code": ""}, {"file": "apps.py", "path": "appname/apps.py", "code": "from django.apps import AppConfig\n\nclass BlogConfig(AppConfig):\n    name = 'blog'"}, {"file": "__init__.pycz2", "path": "__init__.py", "code": ""}, {"file": "_enum.py", "path": "__init__.py", "code": ""}, {"file": "settings.py", "description": ""}, {"file": "wsgi.py", "path": "example_app/appname/wsgi.py", "code": "from django.core.wsgi import get_wsgi_application\napplication = get_wsgi_application()\n"}, {"file": "asgi.py", "path": "example_app/appname/asgi.py", "code": "import os\nfrom djangoTauCore.asgi import get_django_wsgi_application application = get_django_wsgi_application(os.environ.get('WSGI_APPLICATION'))\n"}]}