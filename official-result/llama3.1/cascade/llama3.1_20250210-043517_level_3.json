{"7": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n# Security settings and key configuration\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\n# Hosts allowed to serve the application\nALLOWED_HOSTS = []\n\n# Application definitions\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\n\n# Middleware settings\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\n# URL configuration\nROOT_URLCONF = 'example_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n# WSGI application\nWSGI_APPLICATION = 'example_project.wsgi.application'\n\n# Database configuration\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n# Password validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n# Locale and timezone settings\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = False\n\n# Static files (CSS, JavaScript, Images) settings\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\n# Main URL routing configuration\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]\n"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\n# Setup the default Django settings module for the WSGI application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "models.py", "path": "example_app/models.py", "code": ""}, {"file": "views.py", "path": "example_app/views.py", "code": ""}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "urls.py", "path": "example_app/urls.py", "code": ""}, {"file": "templatetags.py", "path": "example_app/templatetags.py", "code": ""}, {"file": "admin.py", "path": "example_app/admin.py", "code": ""}, {"file": "forms.py", "path": "example_app/forms.py", "code": ""}, {"file": "__init__.py", "path": "example_project/managers/__init__.py", "code": ""}, {"file": "managers.py", "path": "example_project/managers/yourapp.py", "code": ""}, {"template": "about.html", "path": "baseDir/templates/about.html", "content": "<html><head><title>About</title></head><body>Some content...<span id='something'>Hello world<span>.&lt;/body&gt;<html>"}], "9": [{"file": "answer.html", "path": "templates/answers/index.html", "code": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Answers</title><style>/* add styles here */</style></head><body id=\"answers\">\n"}, {"file": "question.html", "path": "templates/questions/index.html", "code": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Questions</title><style>/* add styles here */</style></head><body id=\"questions\">\n"}, {"file": "answer_form.html", "path": "templates/answers/form.html", "code": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Answer Form</title><style>/* add styles here */</style></head><body id=\"answer-form\">\n"}, {"file": "question_form.html", "path": "templates/questions/form.html", "code": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Question Form</title><style>/* add styles here */</style></head><body id=\"question-form\">\n"}, {"file": "templates.html", "path": "templates/template.html", "code": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Templates</title><style>/* add styles here */</style></head><body id=\"templates\">\n"}, {"file": "models.py", "path": "my_project/app/models.py", "code": "from django.db import models# Define your models here.\n"}, {"file": "views.py", "path": "my_project/app/views.py", "code": "from django.http import HttpResponse\n# View functions go here.\ndef index(request):\n    return HttpResponse(\"Hello, world!\")\n"}], "12": [{"file": "settings.py", "path": "example_project/settings.py", "code": "import os\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'example_app',\n]\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'example_project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\nWSGI_APPLICATION = 'example_project.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = False\nSTATIC_URL = '/static/'\nLOGIN_URL = '/login/'"}, {"file": "urls.py", "path": "example_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('example_app.urls')),\n]"}, {"file": "wsgi.py", "path": "example_project/wsgi.py", "code": "import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'example_project.settings')\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "example_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "example_app/__init__.py", "code": ""}, {"file": "models.py", "path": "example_app/models.py", "code": "from django.db import models\nclass Category(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField()\nclass Product(models.Model):\n    name = models.CharField(max_length=255)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)"}, {"file": "views.py", "path": "example_app/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Category, Product\ndef index(request):\n    categories = Category.objects.all()\n    return render(request, 'index.html', {'categories': categories})\ndef category_details(request, pk):\n    category = Category.objects.get(pk=pk)\n    products = category.product_set.all()\n    return render(request, 'category_details.html', {'category': category, 'products': products})"}, {"file": "templates/index.html", "path": "example_app/templates/index.html", "code": "<html>\n<head>\n    <title>Categories</title>\n</head>\n<body>\n    <h1>Categories</h1>\n    <ul>\n        {% for category in categories %}\n            <li><a href=\"{{ category.get_absolute_url }}\">{{ category.name }}</a></li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "templates/category_details.html", "path": "example_app/templates/category_details.html", "code": "<html>\n<head>\n    <title>Category {{ category.name }}</title>\n</head>\n<body>\n    <h1>{{ category.name }}</h1>\n    <ul>\n        {% for product in products %}\n            <li>{{ product.name }} - {{ product.price }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}], "17": [{"file": "17-stdanswer.py", "path": "/home/user/projects/logistic_regression/17-stdanswer.py", "code": "import os\nimport pandas as pd\nimport statsmodels.api as sm\n"}, {"file": "data/Gamedata.xlsx", "path": "/home/user/projects/logistic_regression/data/", "pathType": "dir", "subfiles": [{"file": "Gamedata.xlsx", "path": "/home/user/projects/logistic_regression/data/", "code": ""}]}, {"file": "logistic_model.py", "path": "/home/user/projects/logistic_regression/scripts/logistic_model.py", "code": "from statsmodels.api import logit\nimport pandas as pd\n\ndef build_logistic_model(X, y):\n    '''\n    Build and fit a logistic regression model.\n    '''\n    return logit.logit(y, X)\n"}, {"file": "read_data.py", "path": "/home/user/projects/logistic_regression/scripts/read_data.py", "code": "import pandas as pd\nfrom data import Gamedata.xlsx\n\ndef read_and_validate_data(input_file):\n    '''\n    Read the dataset and ensure all columns are numeric.\n    Raise an error if any missing values (NaN) are found.\n    '''\n    return pd.read_excel(input_file)\n"}, {"file": "add_lagged_variable.py", "path": "/home/user/projects/logistic_regression/scripts/add_lagged_variable.py", "code": "from pandas import DataFrame\nimport copy\n\ndef add_lagged_dependent_variable(data, target_column):\n    ''('\n    Add a one-period lag for the dependent variable and drop missing rows.\n    ')\n    return data[data[target_column] > 0].shift(1)\n"}, {"file": "prepare_features.py", "path": "/home/user/projects/logistic_regression/scripts/prepare_features.py", "code": "from pandas import DataFrame\nimport numpy as np\n\ndef prepare_features_and_target(data, target_column, lagged_column):\n    ''('\n    Prepare the feature matrix (X) and target vector (y).\n    ')\n    return data.drop(columns=[lagged_column])\n"}, {"file": "summary.xlsx", "path": "/home/user/projects/logistic_regression/results/", "pathType": "dir", "subfiles": [{"file": "Logistic.xlsx", "path": "/home/user/projects/logistic_regression/results/Logistic.xlsx", "code": ""}]}]}