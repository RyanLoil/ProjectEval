{"1": "[\n  {\n    \"file\": \"models.py\",\n    \"path\": \"somepath/somedir/models.py\",\n    \"code\": \"\"\"\n      from django.db import models\n      class BMI(models.Model):\n          height = models.FloatField()\n          weight = models.FloatField()\n          bmi_result = models.FloatField()\n    \"\"\"\n  },\n  {\n    \"file\": \"forms.py\",\n    \"path\": \"somepath/somedir/forms.py\",\n    \"code\": \"\"\"\n      from django import forms\n      class BMICalculatorForm(forms.Form):\n          height = forms.FloatField()\n          weight = forms.FloatField()\n    \"\"\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"somepath/somedir/views.py\",\n    \"code\": \"\"\"\n      from django.shortcuts import render, redirect\n      from .forms import BMICalculatorForm\n      def calculate_bmi(request):\n          if request.method == 'POST':\n              form = BMICalculatorForm(request.POST)\n              if form.is_valid():\n                  height = form.cleaned_data['height']\n                  weight = form.cleaned_data['weight']\n                  bmi_result = round(height / (weight ** 2), 2)\n                  return render(request, 'result.html', {'bmi_result': bmi_result})\n          else:\n              form = BMICalculatorForm()\n          return render(request, 'form.html', {'form': form})\n    \"\"\"\n  },\n  {\n    \"file\": \"templates/form.html\",\n    \"path\": \"somepath/somedir/templates/form.html\",\n    \"code\": \"<html>...</html>\"\n  },\n  {\n    \"file\": \"/static/info.html\",\n    \"description\": \"Display information about what BMI is and how it's calculated\"\n  },\n  {\n    \"file\": \"/static/units.html\",\n    \"description\": \"Explain the different units for height and weight (e.g. metric, imperial)\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"somepath/somedir/urls.py\",\n    \"code\": \"\"\"\n      from django.urls import path\n      from . import views\n      app_name = 'bmicalculator'\n      urlpatterns = [\n          path('', views.calculate_bmi, name='calculate_bmi'),\n          path('result/', views.result, name='result'),\n          path('info/', views.info, name='info'),\n          path('units/', views.units, name='units'),\n      ]\n    \"\"\"\n  },\n]", "2": "[\n  {\n    \"file\": \"views.py\",\n    \"path\": \"currency_converter/apps/home/views.py\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"currency_converter/apps/home/urls.py\",\n    \"code\": \"\"\"\nfrom django.urls import path\nfrom .views import HomeView\n\nurlpatterns = [\n    path('', HomeView.as_view(), name='home'),\n]\n    \"\"\"\n  },\n  {\n    \"description\": \"Model for Currency Pair\"\n  },\n  {\n    \"file\": \"models.py\",\n    \"path\": \"currency_converter/apps/rate/models.py\",\n    \"code\": \"\"\"\nfrom django.db import models\nfrom .utils import get_exchange_rate\n\nclass ExchangeRate(models.Model):\n    currency_pair = models.CharField(max_length=255)\n    rate = models.DecimalField(max_digits=10, decimal_places=4)\n\n    def save(self, *args, **kwargs):\n        self.rate = get_exchange_rate(self.currency_pair)\n        super().save(*args, **kwargs)\n    \"\"\"\n  },\n  {\n    \"file\": \"templates/about.html\",\n    \"path\": \"currency_converter/templates/about.html\"\n  },\n  {\n    \"description\": \"View to display exchange rate statistics\"\n  },\n  {\n    \"file\": \"templates/rate.html\",\n    \"path\": \"currency_converter/templates/rate.html\"\n  },\n  {\n    \"description\": \"API endpoint for saving user history of currency conversions\"\n  }, \n  {\n    \"file\": \"/example_app/xxx.py\", \n    \"description\":\"Example of the settings function on convert page of home application using JSON\" \n  }\n]", "3": [{"file": "/generate.py", "path": "/generate/generate.py", "code": "from django.shortcuts import renderHttpResponse"}, {"file": "/history.py", "path": "/history/history.py", "code": "from django.views.generic import ListView, DetailView"}, {"file": "/settings.py", "path": "/settings/settings.py", "code": "from django.contrib.auth.models import User"}, {"file": "/help.py", "path": "/help/help.py", "code": "from django.http import HttpResponse"}, {"template": "/generate/index.html", "description": "/generate/index.html: Password generation form"}, {"template": "/history/pagination.html", "description": "/history/pagination.html: Pagination template for generated passwords"}, {"template": "/settings/character_types.html", "description": "/settings/character_types.html: Character types selection template"}, {"template": "/help/footer.html", "description": "/help/footer.html: Footer HTML"}], "4": [{"file": "qrgen/views.py", "path": "somepath/somedir/qrgen/", "code": "from django.shortcuts import render\nfrom .models import QRCode\n\ndef generate_qr_code(request):\n    # implement qr code generation logic here"}, {"file": "qrgen/models.py", "path": "somepath/somedir/qrgen/", "code": "class QRCode(models.Model):\n    data = models.TextField()\n    image = models.ImageField(upload_to='qr_codes/')"}, {"file": "/example_app/qrgen/templates/home.html", "description": "Page to generate QR codes"}, {"file": "/example_app/qrgen/templates/options.html", "description": "Page for QR code options"}, {"file": "/example_app/qrgen/templates/tools.html", "description": "Page with tools related to QR codes"}, {"file": "/example_app/qrgen/templates/account.html", "description": "Page for user account settings"}, {"file": "/example_app/qrgen/templates/404.html", "description": "Default 404 error page"}], "5": "```\n[\n  {\n    \"template\": {\n      \"view\": [\n        {\n          \"file\": \"views/home.py\",\n          \"path\": \"/home/views/home.py\",\n          \"code\": \"{% extends 'base.html' %} {% block content %}{% if user.is_authenticated %}\"\n        },\n        {\n          \"file\": \"views/options.py\",\n          \"path\": \"/options/views/options.py\",\n          \"code\": \"{% extends 'base.html' %} {% block content %}{% if page == 'Options'%}\"\n        }\n      ]\n    }\n  },\n  {\n    \"template\": {\n      \"model\": [\n        {\n          \"file\": \"models/page.py\",\n          \"path\": \"/pages/models/page.py\",\n          \"code\": \"class Page(models.Model):\\\\n\\\\ttitle = models.CharField(max_length=100)\"\n        },\n        {\n          \"file\": \"models/function.py\",\n          \"path\": \"/functions/models/function.py\",\n          \"code\": \"class Function(models.Model):\\\\n\\\\tname = models.CharField(max_length=100)\\\\n\\\\tdescription = models.TextField()\"\n        }\n      ]\n    }\n  },\n  {\n    \"template\": {\n      \"app_views\": [\n        {\n          \"file\": \"templates/home.html\",\n          \"path\": \"/home/templates/home.html\",\n          \"description\": \"Home page of the application\"\n        },\n        {\n          \"file\": \"/options/options.html\",\n          \"path\": \"/options/options.html\",\n          \"description\": \"Options page of the application\"\n        }\n      ]\n    }\n  },\n  {\n    \"template\": {\n      \"urls\": [\n        {\n          \"file\": \"home/urls.py\",\n          \"path\": \"/home/home/urls.py\",\n          \"code\": \"from django.urls import path,include\\\\nfrom . import views\"\n        },\n        {\n          \"file\": \"options/urls.py\",\n          \"path\": \"/options/options/urls.py\",\n          \"code\": \"from django.urls import path,include\\\\nfrom . import views\"\n        }\n      ]\n    }\n  },\n  {\n    \"app\": [\n      {\n        \"file\": \"/example_app/admin.py\",\n        \"description\": \"\"\n      },\n      {\n        \"file\": \"/example_app/management/commands/__init__.py\"\n      },\n      {\n        \"file\": \"/example_app/migrations/0001_initial.py\"\n      }\n    ]\n  },\n  {\n    \"template\": [\n      {\n        \"file\": \"setup.py\",\n        \"path\": \"/setup.py\",\n        \"description\": \"\"\n      }\n    ]\n  }\n]\n```", "6": "```\n[\n  {\n    \"file\": \"tasks/views.py\",\n    \"path\": \"app/tasks/views.py\",\n    \"code\": \"from rest_framework.response import Response\\\\nfrom rest_framework.views import APIView\\\\nclass TaskListView(APIView):\\\\n  def get(self, request):\\\\n      tasks = request.user.tasks.all()\\\\n      return Response(tasks)\"\n  },\n  {\n    \"file\": \"/tasks/templates/tasks.html\",\n    \"description\": \"<ul> <li>Task List</li><hr/> <!-- {% include 'task_list_item.html' %} -->\"\n  },\n  {\n    \"file\": \"/tasks/urls.py\",\n    \"code\": \"from django.urls import path\\\\nfrom .views import TaskListView\\\\ndef tasks_urlpatterns():\\\\n    return [\\\\n        path('view_tasks/', TaskListView.as_view(), name='task_list'),\"\n  },\n  {\n    \"file\": \"/tasks/forms.py\",\n    \"path\": \"app/tasks/forms.py\",\n    \"code\": \"from django import forms\\\\nclass NewTaskForm(forms.ModelForm):\\\\n    class Meta:\\\\n        model = models.Task\\\\n        fields = ('name', 'due_date', 'description')\\\\n        labels = {'due_date': ''}\"\n  },\n  {\n    \"file\": \"/tasks/models.py\",\n    \"path\": \"app/tasks/models.py\",\n    \"code\": \"\\\\nclass Task(models.Model):\\\\n    name = models.CharField(max_length=255)\\\\n    due_date = models.DateField()\\\\n    description = models.TextField()\\\\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\\\\n\"\n  },\n  {\n    \"file\": \"/analysis/urls.py\",\n    \"code\": \"from django.urls import path\\\\nfrom .views import TaskCompletionRateView\\\\n\\\\ndef analysis_urlpatterns():\\\\n    return [\\\\n        path('task_completion_rate/', TaskCompletionRateView.as_view(), name='task_completion_rate'),\"\n  },\n  {\n    \"file\": \"/analysis/views.py\",\n    \"path\": \"app/analysis/views.py\",\n    \"code\": \"from django.http import JsonResponse\\\\nfrom .models import Task\\\\nclass TaskCompletionRateView(View):\\\\n    def get(self, request):\\\\n        tasks = Task.objects.filter(user=request.user)\\\\n        # data processing logic here\\\\n\"\n  },\n  {\n    \"file\": \"/settings/urls.py\",\n    \"code\": \"from django.urls import path\\\\nfrom .views import ChangeDueDateReminderFrequencyView\\\\ndef settings_urlpatterns():\\\\n    return [\\\\n        path('change_due_date_reminder_frequency/', ChangeDueDateReminderFrequencyView.as_view(), name='change_due_date_reminder_frequency'),\"\n  },\n  {\n    \"file\": \"/settings/views.py\",\n    \"path\": \"app/settings/views.py\",\n    \"code\": \"from django.http import HttpResponse\\\\nfrom .models import UserSetting\\\\nclass ChangeDueDateReminderFrequencyView(View):\\\\n    def get(self, request):\\\\n        # data processing logic here\"\n  },\n  {\n    \"file\": \"/reports/forms.py\",\n    \"path\": \"app/reports/forms.py\",\n    \"code\": \"from django import forms\\\\nclass ExportTaskListForm(forms.Form):\\\\n    format = forms.ChoiceField(choices=[('CSV', 'CSV'), ('Excel', 'Excel')])\"\n  },\n  {\n    \"file\": \"/task/detailed-view/templates/task_detailed_view.html\",\n    \"description\": \"<h1> Task: {{ task.name }} </h1>\\\\n\\\\t\\\\t<!-- {% include 'task_form.html' %} -->\\\\n\\\\t\\\\t<!-- {% if task.status == 'completed' %}\\\\n\\\\t\\\\t\\\\t<p>This task has been completed.</p><hr/>\\\\n\\\\t\\\\t\\\\t{% endif %}\"\n  }\n]\n```", "7": "[\n  {\n    \"file\": \"/django_app/models.py\",\n    \"code\": \"\"\"\nclass User(models.Model):\n    username = models.CharField(max_length=255)\n    email = models.EmailField(unique=True)\n\nclass BudgetControlApp(models.Model):\n    user_id = models.ForeignKey(User, on_delete=models.CASCADE) \n    balance = models.DecimalField(max_digits=10, decimal_places=2)\n    date = models.DateField()\n\nclass Expense(models.Model):\n    budget_control_app = models.ForeignKey(BudgetControlApp, on_delete=models.CASCADE) \n    expense_date = models.DateField()\n    category = models.CharField(max_length=255)\n    amount = models.DecimalField(max_length=10)\n\nclass Category(models.Model):\n    name = models.CharField(max_length=255)\n    expense_count = models.IntegerField(default=0)\n \"\"\"\n  },\n  {\n    \"file\": \"/django_app/views.py\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render, redirect\nfrom .models import BudgetControlApp, Expense, Category\n\ndef login(request):\n    if request.method == 'POST':\n        username = request.POST['username']\n        password = request.POST['password']\n        # Authentication Logic\n        return redirect('dashboard')\n            \ndef register(request):\n    if request.method == 'POST':\n        # Register logic\n        return redirect('login')\n\ndef reset_password(request):\n    if request.method == 'POST':\n        email = request.POST['email']\n        # Reset password logic via email\n        return render(request, 'password_reset.html')\n\n\"\"\"\n  },\n  {\n    \"file\": \"/django_app/urls.py\",\n    \"code\": \"\"\"\nfrom django.urls import path\nfrom .views import login, register, reset_password\n\nurlpatterns = [\n    path('login/', login),\n    path('register/', register),\n    path('reset-password/', reset_password),\n]\n \"\"\"\n  },\n  {\n    \"file\": \"/django_app/templates/base.html\",\n    \"description\": \"Base HTML template for the application\"\n  },\n  {\n    \"file\": \"/budget_control_app/data.json\",\n    \"description\": \"JSON file containing chart data\"\n  }\n]", "8": "[\n{\"file\":\"/accounts/models.py\",\"description\":\"User Model\"},\n{\"file\":\"/events/views.py\",\"code\":\"from django.views.generic import ListView\\\\nclass EventListView(ListView):\"},\n{\"file\":\"views/calendar_views.py\",\"code\":\"from calendar.models import Calendar\\\\ndef view_calendar(request):\\\\n    return render(request, \u2018calendar.html\u2019, {\"calendar\":Calendar.objects.order_by(\u2018start_date\u2019).first()})\"},\n{\"file\":\"/events/urls.py\",\"path\":\"event_app/someapp/event/urls.py\",\"code\":\"\"},\n{\"file\":\"templates/month_selector.html\",\"description\":\"Template for switching between months\"},\n{\"file\":\"events/templates/events_list.html\",\"description\":\"List of events by category and date\"},\n{\"file\":\"models/calendar.py\",\"description\":\"Calendar Model with events by month\"},\n{\"file\":\"/event_app/settings.py\",\"path\":\"/event_app/event_app/settings.py\",\"code\":\"\"},\n{\"file\":\"views/add_event_views.py\",\"code\":\"from .forms import EventForm\\\\ndef add_new_event(request):\\\\n    if request.method == \u2018POST\u2019:\\\\n        form = EventForm(request.POST)\\\\n        # \u2026\"},\n{\"file\":'/admin.py','description':'Django Admin Model'},\n{\"file\":\u2019event_app/templates/event_editor.html\u2019,\u201cdescription\u201d:\"template for the Edit event view\"}]", "9": "```\n[\n  {\"file\":\"/product_intro/views.py\",\"path\":\"/somepath/somedir/product_intro/views.py\"},\n  {\"file\":\"/product_intro/templates/product_intro.html\",\"path\":\"/somepath/somedir/product_intro/templates/product_intro.html\", \"code\":\"Skeleton HTML template for product intro page\"},\n  {\"file\": \"/static/product_intro/img.svg\", \"description\": \"SVG image representing chatbot's features\"},\n  \n  {\"file\":\"/how_it_works/models.py\",\"path\":\"/somepath/somedir/how_it_works/models.py\"},\n  {\"file\":\"/how_it_works/views.py\",\"path\":\"/somepath/somedir/how_it_works/views.py\"},\n  {\"file\":\"/how_it_works/templates/how_it_works.html\",\"path\":\"/somepath/somedir/how_it_works/templates/how_it_works.html\", \"code\":\"Skeleton HTML template for how it works page\"},\n  \n  {\"file\":\"/customer_success/forms.py\",\"path\":\"/somepath/somedir/customer_success/forms.py\"},\n  {\"file\":\"/customer_success/views.py\",\"path\":\"/somepath/somedir/customer_success/views.py\"},\n  {\"file\":\"/customer_success/templates/customer_success.html\",\"path\":\"/somepath/somedir/customer_success/templates/customer_success.html\", \"code\":\"Skeleton HTML template for customer success page\"},\n  \n  {\"file\":\"/about_us/settings.py\",\"path\":\"/somepath/somedir/about_us/settings.py\"},\n  {\"file\":\"/about_us/static/about_us/css/style.css\",\"description\": \"CSS styles for company's website\"},\n  {\"file\":\"/about_us/templates/about_us.html\",\"path\":\"/somepath/somedir/about_us/templates/about_us.html\", \"code\":\"Skeleton HTML template for about us page\"}\n]\n```", "10": [{"file": "views.py", "path": "app_name/utils/views.py", "code": "{\"homepage\": ["}, {"file": "/templates/homepage.html", "description": "Home page template for displaying user dashboard"}, {"file": "models.py", "path": "app_name/utils/models.py", "code": "{\"User\": \"A model to store user information\", "}, {"file": "/templates/tracker_overview.html", "description": "Template for displaying tracker overview chart"}, {"file": "/static/style.css", "description": "CSS stylesheet for app styling"}, {"file": "urls.py", "path": "app_name/utils/urls.py", "code": "{\"urlpatterns\": ["}, {"file": "/templates/tracker_analysis.html", "description": "Template for displaying tracker analysis chart"}, {"file": "/static/script.js", "description": "JavaScript code for app functionality"}], "11": [{"file": "/app/templates/home.html", "description": "Home Page HTML Template"}, {"file": "/app/utils/password_generator.py", "path": "app/utils/password_generator.py", "code": ""}, {"file": "/app/tests/test_display_welcome_message.py", "path": "app/tests/test_display_welcome_message.py", "code": "def test_display_welcome_message(driver, test_url, swelcome_message_id):\n    driver.get(test_url)\n    welcome_message = driver.find_element(By.ID, swelcome_message_id)\n    assert welcome_message.is_displayed()"}, {"file": "/app/static/about.js", "description": "About Page JavaScript"}, {"file": "/app/views/home.py", "path": "app/views/home.py", "code": ""}, {"file": "/app/tests/test_description.py", "path": "app/tests/test_description.py", "code": "def test_description(driver, description_id):\n    description = driver.find_element(By.ID, description_id)\n    assert description.is_displayed()"}, {"file": "/example_app/favicon.ico", "description": "Favicon Image"}], "12": "[\n  {\n    \"file\": \"models.py\",\n    \"path\": \"website_base management_system/models.py\",\n    \"code\": '''\n      from django.db import models\n\n      class ExpenseClaim(models.Model):\n        CLAIM_TYPE_CHOICES = (\n          ('TRAVEL', 'Travel Expenses Claim'),\n          ('LABOR', 'Labor Expenses Claim'),\n          # Add more claim types as needed\n        )\n        category = models.CharField(max_length=50, choices=CLAIM_TYPE_CHOICES)\n        date_submit = models.DateTimeField(auto_now_add=True)\n        details = models.TextField()\n        supporting_docs = models.FileField(upload_to='expenses/supporting_documents/')\n        \n      class SupportingDocument(models.Model):\n        expense_claim = models.ForeignKey(ExpenseClaim, on_delete=models.CASCADE)\n        file = models.FileField(upload_to='expenses/supporting_documents/')\n\n    '''\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"website_base management_system/views.py\",\n    \"code\": '''\n      from django.shortcuts import render, redirect\n      from django.contrib.auth.decorators import login_required\n      from .models import ExpenseClaim\n\n      @login_required\n      def userclaim(request):\n          if request.method == 'POST':\n              form = ExpenseClaimForm(request.POST)\n              if form.is_valid():\n                  form.save()\n                  return render(request, 'expense_claim_submitted.html')\n          else:\n              form = ExpenseClaimForm()\n          return render(request, 'user_dashboard/submit_claim.html', {\n            'form': form,\n          }),\n\n    '''\n  },\n  {\n    \"file\": \"forms.py\",\n    \"path\": \"website_base management_system/forms.py\",\n    \"code\": '''\n      from django import forms\n      from .models import ExpenseClaim\n\n      class ExpenseClaimForm(forms.ModelForm):\n        class Meta:\n            model = ExpenseClaim\n            fields = ('date_submit', 'details')\n        \n    '''\n  },\n  {\n    \"file\": \"/admin_dashboard/views.py\",\n    \"description\":\"Contains admin views\"\n  },\n  {\n    \"file\": \"templates/admin_dashboard/review_submittedClaims.html\",\n    \"path\": \"website_base management_system/templates/admin_dashboard/\",\n    \"code\": '''\n      <!-- Table displaying all submitted claims -->\n      <table>\n        <tr>\n          <th>Claim ID</th>\n          <th>Category</th>\n          <th>Date Submitted</th>\n          <th>Status</th>\n        </tr>\n        {% for claim in claims %}\n          <tr>\n            <td>{{claim.id}}</td>\n            <td>{{claim.category}}</td>\n            <td>{{claim.date_submit|date:'Y-m-d'}}</td>\n            <td>{{claim.status}}</td>\n          </tr>\n        {% endfor %}\n      </table>\n\n    '''\n  },\n  {\n    \"file\": \"/expenses/models.py\",\n    \"description\":\"Defines the model for expense categories and their corresponding budgets\"\n  },\n  \n]", "13": [{"file": "/api/v1/customer/models.py", "description": "Customer model definition"}, {"file": "/api/v1/customer/views.py", "code": "from rest_framework.renderers import JSONRenderer\nfrom .models import Customer\n...\nclass CustomerViewSet(ViewSet):\\n    ...\\n    def create(self, request):\\n        customer = Customer()\\n        customer.name = request.data['name']\\n        ...\\n"}, {"file": "/api/v1/customer/serializers.py", "code": "from rest_framework import serializers\\n\nclass CustomerSerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = Customer\\n        fields = '__all__'"}, {"file": "/api/v1/product/models.py", "description": "Product model definition"}, {"file": "/api/v1/product/views.py", "code": "from rest_framework.renderers import JSONRenderer\nfrom .models import Product\n...\nclass ProductViewSet(ViewSet):\\n    ...\\n    def create(self, request):\\n        product = Product()\\n        product.name = request.data['name']\\n        ..."}, {"file": "/api/v1/product/serializers.py", "code": "from rest_framework import serializers\\n\nclass ProductSerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = Product\\n        fields = '__all__'"}, {"file": "/api/v1/purchase_records/views.py", "description": "View for analyzing sales data"}, {"file": "/static/js/top_selling_products.js", "description": "JavaScript file for displaying top-selling products"}], "14": [{"file": "views.py", "path": "somepath/somedir/views.py", "code": "\nfrom django.shortcuts import render\n\ndef load_page(request):\n    return render(request, 'helloworld.html')\n\n"}, {"file": "/urls.py", "description": "Routing configuration for HelloWorld page"}, {"file": "forms.py", "path": "somepath/somedir/forms.py", "code": "\nfrom django import forms\n\nclass ContentForm(forms.Form):\n    content = forms.CharField(max_length=200)\n\n"}, {"file": "templates/base.html", "description": "Base template for rendering the HelloWorld page"}], "15": "[\n  {\n    \"file\": \"views.py\",\n    \"path\": \"example_app/pages/index/views.py\",\n    \"code\": \"\"\"\ndef index(request):\n    return render(request, 'pages/index.html')\n\"\"\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"example_app/pages/helloworld/views.py\",\n    \"code\": \"\"\"\nfrom django.http import HttpResponse\n\ndef helloworld(request):\n    return HttpResponse('Hello World!')\n\"\"\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"example_app/urls.py\",\n    \"code\": \"\"\"\nfrom django.urls import path\nfrom .pages.index.views import index\nfrom .pages.helloworld.views import helloworld\n\nurlpatterns = [\n    path('', index, name='index'),\n    path('helloworld', helloworld, name='helloworld')\n]\n\"\"\"\n  },\n  {\n    \"file\": \"templates/pages/index.html\",\n    \"path\": \"example_app/templates_pages_index_html\",\n    \"description\": \"\"\n  },\n  {\n    \"file\": \"templates/pages/helloworld.html\",\n    \"path\": \"example_app/templates_pages_helloworld_html\",\n    \"description\": \"\"\n  },\n  {\n    \"file\": \"/static/images/hello.png\",\n    \"description\": \"An image used in the website\"\n  }\n]", "16": "```json\n[\n  {\n    \"file\": \"subject_pivot.vbs\",\n    \"path\": \"C:\\\\\\\\Path\\\\\\\\To\\\\\\\\VBA\\\\\\\\Scripts\\\\\\\\SubjectPivot\\\\\\\\\",\n    \"code\": \"\n      ' Declare variables\n      Dim xlApp, xlWorkbook, xlWorksheet\n      '\n      ' Set Excel object for automation\n      Set xlApp = CreateObject(\\\\\"Excel.Application\\\\\")\n      \n      '\n      ' Open the Excel workbook\n      With xlApp\n          Set xlWorkBook = .Workbooks.Open _\n            \\\\\\\\(C:\\\\\\\\Path\\\\\\\\To\\\\\\\\Spring Semester Subjects.xlsx)\n          \n          ...  // Rest of the code follows\n```\n```json\n{\"file\": \"/example_app/subject_pivot.vbs\", \"description\": \"VBA script to process subject list from Excel and output transformed schedule in a new file.\"}", "17": [{"file": "/dataset/Gamedata.xlsx", "description": "Read data from 'Gamedata.xlsx' dataset"}, {"file": "", "description": "Check for missing values, handle categorical variables"}, {"file": "", "description": "Train a logistic regression model with one-period-lag process on 'result'"}, {"file": "/prediction/Logistic.xlsx", "description": "Save model summary to 'Logistic.xlsx'"}], "18": "[\n  {\n    \"file\": \"main_menu.py\",\n    \"path\": \"app/game_menus/main_menu.py\",\n    \"code\": '''\nfrom app.utils import render_page\nfrom app.data.models import MenuItem, Page\n\ndef main_menu():\n    page_name = 'Main Menu'\n    functions = [\n        MenuItem('Start Game', 'Begin a new adventure'),\n        MenuItem('Load Game', 'Continue playing from previous save'),\n        MenuItem('Quit', 'Exit the game')\n    ]\n    render_page(page_name, functions)\n\nif __name__ == \"__main__\":\n    main_menu()\n    '''\n  },\n  {\n    \"file\": \"game_options.py\",\n    \"path\": \"app/game/options/game_options.py\",\n    \"code\": '''\nfrom app.utils import render_page\nfrom app.data.models import OptionListItem\n\ndef game_options():\n    page_name = 'Game Options'\n    options_list = [\n        OptionListItem('Difficulty Level'),\n        OptionListItem('Screen Size'),\n        OptionListItem('Sound ON/OFF')\n    ]\n    render_page(page_name, options_list)\n\nif __name__ == \"__main__\":\n    game_options()\n    '''\n  },\n  {\n    \"file\": \"character_options.py\",\n    \"path\": \"app/game/options/character_options.py\",\n    \"code\": '''\nfrom app.utils import render_page\nfrom app.data.models import OptionListItem\n\ndef character_options():\n    page_name = 'Character Options'\n    options_list = [\n        OptionListItem('Select Character Class'),\n        OptionListItem('Customize Character')\n    ]\n    render_page(page_name, options_list)\n\nif __name__ == \"__main__\":\n    character_options()\n    '''\n  },\n  {\n    \"file\": \"gameplay.py\",\n    \"path\": \"app/game/gameplay/gameplay.py\",\n    \"code\": '''\nfrom app.utils import navigate_to_location\nfrom app.data.models import Location\n\ndef gameplay():\n    page_name = 'Gameplay'\n    move_north = lambda: navigate_to_location('north')\n    move_south = lambda: navigate_to_location('south')\n    quit_turn = lambda: handle_user_input('quit')\n    # ...\nif __name__ == \"__main__\":\n    gameplay()\n    '''\n  },\n  {\n    \"file\": \"/combat/combat_rules.xx\",\n    \"description\": 'Combat rules and behaviors'\n  },\n  {\n    \"file\": \"/game_items/game_items.xx\",\n    \"description\": 'Game items and item effects'\n  }\n]", "19": "[\n    {\n      \"file\": \"WeeklyDeathsHistogram.java\",\n      \"path\": \"/spark-applications/weekly-deaths-histogram\",\n      \"code\": `\nimport org.apache.spark.SparkConf;\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.sql.Dataset;\nimport org.apache.spark.sql.Row;\n\npublic class WeeklyDeathsHistogram {\n    // ... existing code ...\n}\n`\n    },\n    {\n      \"file\": \"/Deathlist.csv\",\n      \"description\": \"CSV file for weekly deaths dataset\"\n    }\n]", "20": [{"file": "/templates/page.html", "path": "blog/project/templates/pages/", "code": "<h1>{{ page }}</h1>\n<% for function in functions %>\n    <p>{{ function.function }}: {{ function.description }}</p>\n<% endfor %>"}, {"file": "/templates/blog_post.html", "path": "blog/project/templates/pages/", "code": "<h1>{{ post.title }}</h1>\n<% for comment in post_comments %>\n    <div>{{ comment.user }}: {{ comment.text }}</div>\n<% endfor %>"}, {"file": "/templates/profile.html", "path": "blog/project/templates/pages/author/", "code": "<h1>{{ author.name }}</h1>\n{{ author.bio }}"}, {"file": "/templates/login.html", "path": "blog/project/templates/page/", "code": "<form method='post'>\n    {{ form.as_p }}\n</form>"}, {"file": "/templates/admin_users.html", "path": "blog/project/templates/admin/", "code": "<h1>Manage Users</h1>\n<% for user in users %>\n    <p>{{ user.name }}</p>\n<% endfor %>"}]}