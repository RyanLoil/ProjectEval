{"5": [{"file": "/conversion/conversion_converter.py", "path": "converter_app/conversion/converters/conversion_converter.py", "code": "// Conversion converter for Markdown to HTML and vice versa\nfrom django.conf import settings\nfrom .utils import convert_markdown_to_html, convert_html_to_markdown\n\nclass ConversionConverter:\n    def __init__(self):\n        self.utils = utils()\n\n    def markdown_to_html(self, markdown_text):\n        return convert_markdown_to_html(markdown_text)\n\n    def html_to_markdown(self, html_text):\n        return convert_html_to_markdown(html_text)"}, {"file": "/conversion/table_converter.py", "path": "converter_app/conversion/converters/table_converter.py", "code": "// Table conversions between Markdown and HTML formats\nfrom django.conf import settings\nfrom .utils import convert_markdown_table_to_html, convert_html_table_to_markdown\n\nclass TableConverter:\n    def __init__(self):\n        self.utils = utils()\n\n    def markdown_table_to_html(self, markdown_text):\n        return convert_markdown_table_to_html(markdown_text)\n\n    def html_table_to_markdown(self, html_text):\n        return convert_html_table_to_markdown(html_text)"}, {"file": "/advanced_conversion/image_converter.py", "path": "converter_app/advanced_conversions/images/image_converter.py", "code": "// Import images to display alongside converted text\nfrom django.conf import settings\nimport PIL\nfrom .utils import load_image, save_image\n\nclass ImageConverter:\n    def __init__(self):\n        self.utils = utils()\n\n    def convert_markdown_to_html_with_images(self, markdown_text, image_path):\n        return load_image(image_path), save_image(convert_markdown_to_html(markdown_text))\n\n    def convert_html_to_markdown_with_images(self, html_text, image_path):\n        return load_image(image_path), save_image(convert_html_to_markdown(html_text))"}, {"file": "/output_formats/html_output_formatter.py", "path": "converter_app/output_formats/formatters/html_output_formatter.py", "code": "// Export the converted result as an HTML file\nfrom django.conf import settings\nimport os\nfrom .utils import export_to_file\n\nclass HtmlOutputFormatter:\n    def __init__(self):\n        self.utils = utils()\n\n    def export_html(self, html_text, output_path):\n        return export_to_file(html_text, output_path)"}, {"file": "/output_formats/markdown_output_formatter.py", "path": "converter_app/output_formats/formatters/markdown_output_formatter.py", "code": "// Export the converted text as a Markdown file\nfrom django.conf import settings\nimport os\nfrom .utils import export_to_file\n\nclass MarkdownOutputFormatter:\n    def __init__(self):\n        self.utils = utils()\n\n    def export_markdown(self, markdown_text, output_path):\n        return export_to_file(markdown_text, output_path)"}, {"file": "/editing_tools/syntax_highlighter.py", "path": "converter_app/editing_tools/highlighters/syntax_highlighter.py", "code": "// Highlight code blocks within the document\nfrom django.conf import settings\nimport pygments\nfrom .utils import highlight_code\n\nclass SyntaxHighlighter:\n    def __init__(self):\n        self.utils = utils()\n\n    def highlight(self, code_block):\n        return highlight_code(code_block)"}, {"file": "/editing_tools/link_image_insertor.py", "path": "converter_app/editing_tools/tools/link_image_insertor.py", "code": "// Insert links and images with ease\nfrom django.conf import settings\nimport bleach\nfrom .utils import insert_links_and_images\n\nclass LinkImageInsertor:\n    def __init__(self):\n        self.utils = utils()\n\n    def insert(self, text):\n        return insert_links_and_images(text)"}, {"file": "/editing_tools/auto_formatter.py", "path": "converter_app/editing_tools/tools/auto_formatter.py", "code": "// Automatically format text according to Markdown syntax\nfrom django.conf import settings\nimport markdown\nfrom .utils import auto_format_text\n\nclass AutoFormatter:\n    def __init__(self):\n        self.utils = utils()\n\n    def format_text(self, text):\n        return auto_format_text(text)"}, {"file": "/help_resources/user_guide_generator.py", "path": "converter_app/help_resources/generators/user_guide_generator.py", "code": "// Generate user manual for operating the converter\nfrom django.conf import settings\nimport docx\nfrom .utils import generate_user_manual\n\nclass UserGuideGenerator:\n    def __init__(self):\n        self.utils = utils()\n\n    def generate(self, content):\n        return generate_user_manual(content)"}, {"file": "/help_resources/faq_troubleshooter.py", "path": "converter_app/help_resources/troubleshooters/faq_troubleshooter.py", "code": "// Frequently asked questions and solutions to common issues\nfrom django.conf import settings\nimport requests\nfrom .utils import fetch_faq_and_solutions\n\nclass FFAQTroubleshooter:\n    def __init__(self):\n        self.utils = utils()\n\n    def fetchfaq(self):\n        return fetch_faq_and_solutions()"}, {"file": "/help_resources/contact_support_handler.py", "path": "converter_app/help_resources/handlers/contact_support_handler.py", "code": "// Get assistance from customer support team\nfrom django.conf import settings\nimport smtplib\nfrom .utils import send_email\n\nclass ContactSupportHandler:\n    def __init__(self):\n        self.utils = utils()\n\n    def contact(self):\n        return send_email()", "template_id": "converter_project/template.html", "url": "/help/resources/contact_support_handler/", "title": "Contact Support Handler", "desc": "Get assistance from customer support team"}], "11": [{"file": "app/models.py", "path": "app_dir/project_root/app/models.py", "code": "from django.db import models\n\nclass User(models.Model):\n    username = models.CharField(max_length=255)\n    email = models.EmailField(unique=True)\n"}, {"file": "templates/base.html", "path": "project_root/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Example App</title>\n\n    <!-- Add Bootstrap CSS for styling -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n          integrity=\"sha384-B0b4rBM+X8CVkx3fK7E99nKngFourpRF19bxBl+NBwoyWmU LHbhLUe69XcoEmnCn\"\n          crossorigin=\"anonymous\">\n</head>\n\n<body>\n    <!-- Header Section -->\n    <header class=\"bg-secondary text-white py-2 mx-auto\" id=\"header-section\">\n        <nav class=\"container\">\n            <ul class=\"navbar-nav pl-0 mr-auto\">\n                <li class=\"nav-item\"><a href=\"#\" class=\"nav-link active\">Home</a></li>\n                <li class=\"nav-item\"><a href=\"#\" class=\"nav-link\">About</a></li>\n                <li class=\"nav-item\"><a href=\"#\" class=\"nav-link\">Contact</a></li>\n            </ul>\n        </nav>\n    </header>\n\n    <!-- Main Content Section -->\n    <main id=\"main-section\">\n        <div class=\"container my-5\">\n            <!-- Content will be rendered here -->\n        </div>\n    </main>\n\n    <!-- Footer Section -->\n    <footer class=\"bg-light text-muted py-3 mt-auto\" id=\"footer-section\">\n        &copy; 2023 Example App. All Rights Reserved.\n    </footer>\n\n    <!-- Add Bootstrap JS for interactivity -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-Piv4xVNRyMGpqDmRzyDTcGnzukaNKv0MiiiGCrpHh/TNGw06AHZqT+uUdaY5\" crossorigin=\"anonymous\"></script>\n</body>\n</html>\n"}, {"file": "forms.py", "path": "app_dir/project_root/app/forms.py", "code": "from django import forms\n\nclass UserForm(forms.Form):\n    username = forms.CharField(max_length=255)\n    email = forms.EmailField()\n"}], "15": [{"file": "views.py", "path": "project/somedir/views.py", "code": "from django.http import HttpResponse\ndef index(request):\n    return HttpResponse(\"Hello, World!\")\ndef admin_index(request):\n    return HttpResponse(\"Admin Hello\")"}, {"file": "/templates/index.html", "description": "This is the index page template", "code": "<!doctype html>\n<html lang=\"en\">\n<head>\n    <title>Index Page</title>\n</head>\n<body>\n    <h1 id='index-title'>Index Page Title</h1>\n    <p class=\"description\">This is the index page description.</p>\n    <button class=\"btn btn-primary\">Click Me</button>\n</body>\n</html>"}, {"file": "models.py", "path": "project/somedir/models.py", "code": "from django.db import models\n\nclass Book(models.Model):\n    title = models.CharField(max_length=200)\n    author = models.CharField(max_length=100)"}, {"file": "models.py", "path": "project/anotherdir/models.py", "code": "from django.db import models\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.CharField(max_length=200)"}, {"file": "/admin/index.html", "description": "This is the admin index page template", "code": "<!doctype html>\n<html lang=\"en\">\n<head>\n    <title>Admin Index Page</title>\n</head>\n<body>\n    <h1 id='admin-index-title'>Admin Index Page Title</h1>\n    <p class=\"description\">This is the admin index page description.</p>\n    <button class=\"btn btn-primary\">Click Me</button>\n</body>\n</html>"}]}