{"1": [{"file": "settings.py", "path": "bmi_project/bmi_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'bmi_calculator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "bmi_project/bmi_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('bmi_calculator.urls')),\n]\n"}, {"file": "wsgi.py", "path": "bmi_project/bmi_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "manage.py", "path": "bmi_project/manage.py", "code": "import os\nimport sys\n\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "models.py", "path": "bmi_project/bmi_calculator/models.py", "code": "from django.db import models\n\n# You can add models here if needed for data storage\n# For example, a model to store BMI calculation history\n\n"}, {"file": "views.py", "path": "bmi_project/bmi_calculator/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef bmi_calculator(request):\n    bmi = None\n    category = None\n\n    if request.method == 'POST':\n        try:\n            height = float(request.POST['height'])\n            weight = float(request.POST['weight'])\n            unit_type = request.POST.get('unit_type', 'metric')\n\n            if unit_type == 'imperial':\n                height = height * 0.0254  # inches to meters\n                weight = weight * 0.453592  # pounds to kg\n\n            bmi = round(weight / (height * height), 2)\n\n            if bmi < 18.5:\n                category = 'Underweight'\n            elif 18.5 <= bmi < 25:\n                category = 'Normal weight'\n            elif 25 <= bmi < 30:\n                category = 'Overweight'\n            else:\n                category = 'Obese'\n        except ValueError:\n            bmi = 'Invalid input'\n            category = 'Invalid input'\n\n    return render(request, 'bmi_calculator.html', {'bmi': bmi, 'category': category})\n"}, {"file": "urls.py", "path": "bmi_project/bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('bmi_calculator/', views.bmi_calculator, name='bmi_calculator'),\n]\n"}, {"file": "home.html", "path": "bmi_project/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator - Home</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #f4f4f4;\n            color: #333;\n            text-align: center;\n        }\n\n        .container {\n            max-width: 800px;\n            margin: 20px auto;\n            padding: 20px;\n            background-color: #fff;\n            border-radius: 8px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        }\n\n        h1 {\n            color: #0056b3;\n        }\n\n        p {\n            line-height: 1.6;\n            margin-bottom: 15px;\n        }\n\n        .button {\n            display: inline-block;\n            padding: 10px 20px;\n            background-color: #007bff;\n            color: white;\n            text-decoration: none;\n            border-radius: 5px;\n            transition: background-color 0.3s;\n        }\n\n        .button:hover {\n            background-color: #0056b3;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"home-container\">\n        <h1 id=\"home-title\">Welcome to the BMI Calculator!</h1>\n        <p id=\"home-introduction\">This tool helps you calculate your Body Mass Index (BMI), a measure of body fat based on height and weight.  Understanding your BMI can help you assess potential health risks associated with being underweight, overweight, or obese.</p>\n        <a href=\"{% url 'bmi_calculator' %}\" class=\"button\" id=\"home-calculator-link\">Go to BMI Calculator</a>\n    </div>\n</body>\n</html>\n"}, {"file": "bmi_calculator.html", "path": "bmi_project/templates/bmi_calculator.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #f4f4f4;\n            color: #333;\n            text-align: center;\n        }\n\n        .container {\n            max-width: 600px;\n            margin: 20px auto;\n            padding: 20px;\n            background-color: #fff;\n            border-radius: 8px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        }\n\n        h1 {\n            color: #0056b3;\n        }\n\n        label {\n            display: block;\n            margin-top: 10px;\n        }\n\n        input[type=\"number\"] {\n            width: 100%;\n            padding: 8px;\n            margin-top: 5px;\n            margin-bottom: 10px;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            box-sizing: border-box;\n        }\n\n        button {\n            background-color: #007bff;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n\n        button:hover {\n            background-color: #0056b3;\n        }\n\n        .result {\n            margin-top: 20px;\n            font-weight: bold;\n        }\n\n        .error {\n            color: red;\n        }\n\n        .unit-selector {\n            margin-bottom: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"bmi-calculator-container\">\n        <h1 id=\"bmi-calculator-title\">BMI Calculator</h1>\n        <form method=\"post\" id=\"bmi-form\">\n            {% csrf_token %}\n            <div class=\"unit-selector\" id=\"unit-selector-div\">\n                <input type=\"radio\" id=\"metric\" name=\"unit_type\" value=\"metric\" checked>\n                <label for=\"metric\" id=\"metric-label\">Metric (cm, kg)</label>\n                <input type=\"radio\" id=\"imperial\" name=\"unit_type\" value=\"imperial\">\n                <label for=\"imperial\" id=\"imperial-label\">Imperial (inches, lbs)</label>\n            </div>\n\n            <label for=\"height\" id=\"height-label\">Height:</label>\n            <input type=\"number\" name=\"height\" id=\"height\" required>\n\n            <label for=\"weight\" id=\"weight-label\">Weight:</label>\n            <input type=\"number\" name=\"weight\" id=\"weight\" required>\n\n            <button type=\"submit\" id=\"calculate-button\">Calculate BMI</button>\n            <button type=\"reset\" id=\"reset-button\">Reset</button>\n        </form>\n\n        {% if bmi %}\n            <div class=\"result\" id=\"bmi-result-div\">\n                <p id=\"bmi-value\">Your BMI: {{ bmi }}</p>\n                <p id=\"bmi-category\">Category: {{ category }}</p>\n                {% if bmi != 'Invalid input' %}\n                <p id=\"bmi-interpretation\">Interpretation: BMI is a measure of body fat based on height and weight.</p>\n                <p id=\"healthy-bmi-advice\">For advice on maintaining a healthy BMI, consult with a healthcare professional or visit reputable health websites.</p>\n                {% endif %}\n            </div>\n        {% endif %}\n    </div>\n</body>\n</html>\n"}, {"file": "static/style.css", "path": "bmi_project/static/style.css", "code": "/* You can add CSS here for more styling. */\nbody {\n    font-family: sans-serif;\n}\n"}, {"file": "__init__.py", "path": "bmi_project/bmi_calculator/__init__.py", "code": ""}, {"file": "apps.py", "path": "bmi_project/bmi_calculator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BmiCalculatorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'bmi_calculator'"}, {"file": "admin.py", "path": "bmi_project/bmi_calculator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}], "3": [{"file": "manage.py", "path": "/", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "password_generator/__init__.py", "path": "password_generator/", "code": "default_app_config = 'password_generator_app.apps.PasswordGeneratorAppConfig'"}, {"file": "password_generator/settings.py", "path": "password_generator/", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'password_generator_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'password_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'password_generator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]"}, {"file": "password_generator/urls.py", "path": "password_generator/", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('password_generator_app.urls')),\n]\n"}, {"file": "password_generator/wsgi.py", "path": "password_generator/", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "password_generator_app/apps.py", "path": "password_generator_app/", "code": "from django.apps import AppConfig\n\n\nclass PasswordGeneratorAppConfig(AppConfig):\n    name = 'password_generator_app'"}, {"file": "password_generator_app/models.py", "path": "password_generator_app/", "code": "from django.db import models\n\n# Create your models here."}, {"file": "password_generator_app/views.py", "path": "password_generator_app/", "code": "from django.shortcuts import render\nimport random\nimport string\n\n\ndef home(request):\n    return render(request, 'home.html')\n\n\ndef password_options(request):\n    return render(request, 'password_options.html')\n\n\ndef generate_password(request):\n    length = int(request.GET.get('length', 12))\n    include_uppercase = request.GET.get('uppercase') == 'on'\n    include_lowercase = request.GET.get('lowercase') == 'on'\n    include_numbers = request.GET.get('numbers') == 'on'\n    include_symbols = request.GET.get('symbols') == 'on'\n\n    characters = ''\n    if include_uppercase:\n        characters += string.ascii_uppercase\n    if include_lowercase:\n        characters += string.ascii_lowercase\n    if include_numbers:\n        characters += string.digits\n    if include_symbols:\n        characters += string.punctuation\n\n    if not characters:\n        characters = string.ascii_letters + string.digits  # Default to alphanumeric if no options selected\n\n    password = ''.join(random.choice(characters) for i in range(length))\n\n    return render(request, 'generated_password.html', {'password': password})\n\n\ndef about(request):\n    return render(request, 'about.html')"}, {"file": "password_generator_app/urls.py", "path": "password_generator_app/", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('password_options/', views.password_options, name='password_options'),\n    path('generate_password/', views.generate_password, name='generate_password'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "home.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"welcome-message\" class=\"welcome-message\">Welcome to the Password Generator!</h1>\n        <p id=\"home-description\" class=\"description\">Generate secure passwords with customizable options.</p>\n        <a id=\"generator-button\" class=\"generator-button\" href=\"{% url 'password_options' %}\">Go to Password Generator</a>\n    </div>\n</body>\n</html>"}, {"file": "password_options.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Password Options</title>\n</head>\n<body>\n    <div id=\"options-container\" class=\"container\">\n        <h1 id=\"options-header\" class=\"header\">Password Options</h1>\n        <form id=\"password-form\" class=\"password-form\" action=\"{% url 'generate_password' %}\">\n            <label id=\"length-label\" class=\"label\" for=\"length\">Password Length:</label>\n            <input id=\"length\" class=\"input\" type=\"number\" name=\"length\" value=\"12\">\n            <br>\n            <input id=\"uppercase\" class=\"checkbox\" type=\"checkbox\" name=\"uppercase\"> <label id=\"uppercase-label\" class=\"label\" for=\"uppercase\">Include Uppercase</label><br>\n            <input id=\"lowercase\" class=\"checkbox\" type=\"checkbox\" name=\"lowercase\"> <label id=\"lowercase-label\" class=\"label\" for=\"lowercase\">Include Lowercase</label><br>\n            <input id=\"numbers\" class=\"checkbox\" type=\"checkbox\" name=\"numbers\"> <label id=\"numbers-label\" class=\"label\" for=\"numbers\">Include Numbers</label><br>\n            <input id=\"symbols\" class=\"checkbox\" type=\"checkbox\" name=\"symbols\"> <label id=\"symbols-label\" class=\"label\" for=\"symbols\">Include Symbols</label><br>\n            <button id=\"generate-button\" class=\"generate-button\" type=\"submit\">Generate Password</button>\n        </form>\n    </div>\n</body>\n</html>"}, {"file": "generated_password.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Generated Password</title>\n</head>\n<body>\n    <div id=\"generated-container\" class=\"container\">\n        <h1 id=\"generated-header\" class=\"header\">Generated Password</h1>\n        <p id=\"password-display\" class=\"password-display\">{{ password }}</p>\n        <button id=\"copy-button\" class=\"copy-button\" onclick=\"copyPassword()\">Copy to Clipboard</button>\n    </div>\n\n    <script>\n        function copyPassword() {\n            var passwordText = document.getElementById(\"password-display\").innerText;\n            navigator.clipboard.writeText(passwordText).then(function() {\n                alert('Password copied to clipboard!');\n            }, function(err) {\n                console.error('Could not copy password: ', err);\n                alert('Failed to copy password.');\n            });\n        }\n    </script>\n</body>\n</html>"}, {"file": "about.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About</title>\n</head>\n<body>\n    <div id=\"about-container\" class=\"container\">\n        <h1 id=\"about-header\" class=\"header\">About Password Generator</h1>\n        <p id=\"about-description\" class=\"description\">This website allows you to generate strong and secure passwords based on your specific criteria. You can customize the password length and select which character sets to include (uppercase letters, lowercase letters, numbers, and symbols).</p>\n    </div>\n</body>\n</html>"}], "4": [{"file": "manage.py", "path": "qr_project/manage.py", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "qr_project/qr_project/__init__.py", "code": "default_app_config = 'qr_project.apps.QrProjectConfig'"}, {"file": "settings.py", "path": "qr_project/qr_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qr_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qr_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qr_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')] # Corrected path here\n"}, {"file": "urls.py", "path": "qr_project/qr_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qr_app.urls')),\n]"}, {"file": "wsgi.py", "path": "qr_project/qr_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "qr_project/qr_app/__init__.py", "code": "default_app_config = 'qr_app.apps.QrAppConfig'"}, {"file": "admin.py", "path": "qr_project/qr_app/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "apps.py", "path": "qr_project/qr_app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass QrAppConfig(AppConfig):\n    name = 'qr_app'"}, {"file": "forms.py", "path": "qr_project/qr_app/forms.py", "code": "from django import forms\n\nclass QRCodeForm(forms.Form):\n    text = forms.CharField(label='Text or URL', max_length=200)\n    box_size = forms.IntegerField(label='Box Size (Max 128)', min_value=1, max_value=128, initial=10)\n    border_size = forms.IntegerField(label='Border Size (Max 10)', min_value=0, max_value=10, initial=4)\n    error_correction = forms.ChoiceField(label='Error Correction', choices=[('L', 'Small'), ('M', 'Medium'), ('H', 'Large')], initial='M')\n    fill_color = forms.CharField(label='Fill Color', max_length=7, initial='#000000')\n    back_color = forms.CharField(label='Background Color', max_length=7, initial='#FFFFFF')\n"}, {"file": "models.py", "path": "qr_project/qr_app/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "urls.py", "path": "qr_project/qr_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('qr_generator/', views.qr_generator, name='qr_generator'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "qr_project/qr_app/views.py", "code": "import qrcode\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom .forms import QRCodeForm\nfrom io import BytesIO\nfrom django.http import FileResponse\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef about(request):\n    return render(request, 'about.html')\n\ndef qr_generator(request):\n    if request.method == 'POST':\n        form = QRCodeForm(request.POST)\n        if form.is_valid():\n            text = form.cleaned_data['text']\n            box_size = form.cleaned_data['box_size']\n            border_size = form.cleaned_data['border_size']\n            error_correction = form.cleaned_data['error_correction']\n            fill_color = form.cleaned_data['fill_color']\n            back_color = form.cleaned_data['back_color']\n\n            error_correction_levels = {\n                'L': qrcode.constants.ERROR_CORRECT_L,\n                'M': qrcode.constants.ERROR_CORRECT_M,\n                'H': qrcode.constants.ERROR_CORRECT_H,\n            }\n\n            qr = qrcode.QRCode(\n                version=1,\n                error_correction=error_correction_levels[error_correction],\n                box_size=box_size,\n                border=border_size,\n            )\n\n            qr.add_data(text)\n            qr.make(fit=True)\n\n            img = qr.make_image(fill_color=fill_color, back_color=back_color)\n\n            buffer = BytesIO()\n            img.save(buffer, 'PNG')\n            buffer.seek(0)\n\n            return FileResponse(buffer, as_attachment=True, filename='qrcode.png')\n        else:\n            return render(request, 'qr_generator.html', {'form': form})\n    else:\n        form = QRCodeForm()\n        return render(request, 'qr_generator.html', {'form': form})"}, {"file": "home.html", "path": "qr_project/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QR Code Generator</title>\n    <style>\n        body {\n            font-family: sans-serif;\n            text-align: center;\n            margin-top: 50px;\n        }\n        .container {\n            width: 80%;\n            margin: 0 auto;\n        }\n        .button {\n            background-color: #4CAF50;\n            border: none;\n            color: white;\n            padding: 15px 32px;\n            text-align: center;\n            text-decoration: none;\n            display: inline-block;\n            font-size: 16px;\n            margin: 4px 2px;\n            cursor: pointer;\n            border-radius: 5px;\n        }\n        .about-link {\n            display: block;\n            margin-top: 20px;\n        }\n\n        /* Add more styles as needed */\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"home-container\">\n        <h1 id=\"home-title\">Welcome to the QR Code Generator!</h1>\n        <p id=\"home-introduction\">Create your own QR codes easily.</p>\n        <a href=\"{% url 'qr_generator' %}\" class=\"button\" id=\"generate-qr-button\">Generate QR Code</a>\n        <a href=\"{% url 'about' %}\" class=\"about-link\" id=\"about-link\">About</a>\n    </div>\n</body>\n</html>"}, {"file": "qr_generator.html", "path": "qr_project/templates/qr_generator.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QR Code Generator</title>\n    <style>\n        body {\n            font-family: sans-serif;\n            text-align: center;\n            margin-top: 50px;\n        }\n        .container {\n            width: 80%;\n            margin: 0 auto;\n        }\n        .form-group {\n            margin-bottom: 15px;\n        }\n        label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n        }\n        input[type=\"text\"], input[type=\"number\"], select {\n            width: 100%;\n            padding: 8px;\n            margin-bottom: 10px;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            box-sizing: border-box;\n        }\n        button {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n        .error-message {\n            color: red;\n        }\n        .qr-code-area {\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"qr-generator-container\">\n        <h1 id=\"qr-generator-title\">QR Code Generator</h1>\n        <form method=\"post\" id=\"qr-generator-form\">\n            {% csrf_token %}\n            <div class=\"form-group\" id=\"text-input-group\">\n                <label for=\"{{ form.text.id_for_label }}\" id=\"text-label\">{{ form.text.label }}</label>\n                {{ form.text }}\n                {% if form.text.errors %}\n                    <div class=\"error-message\" id=\"text-error\">{{ form.text.errors }}</div>\n                {% endif %}\n            </div>\n            <div class=\"form-group\" id=\"box-size-input-group\">\n                <label for=\"{{ form.box_size.id_for_label }}\" id=\"box-size-label\">{{ form.box_size.label }}</label>\n                {{ form.box_size }}\n                {% if form.box_size.errors %}\n                    <div class=\"error-message\" id=\"box-size-error\">{{ form.box_size.errors }}</div>\n                {% endif %}\n            </div>\n             <div class=\"form-group\" id=\"border-size-input-group\">\n                <label for=\"{{ form.border_size.id_for_label }}\" id=\"border-size-label\">{{ form.border_size.label }}</label>\n                {{ form.border_size }}\n                {% if form.border_size.errors %}\n                    <div class=\"error-message\" id=\"border-size-error\">{{ form.border_size.errors }}</div>\n                {% endif %}\n            </div>\n            <div class=\"form-group\" id=\"error-correction-group\">\n                <label for=\"{{ form.error_correction.id_for_label }}\" id=\"error-correction-label\">{{ form.error_correction.label }}</label>\n                {{ form.error_correction }}\n                {% if form.error_correction.errors %}\n                    <div class=\"error-message\" id=\"error-correction-error\">{{ form.error_correction.errors }}</div>\n                {% endif %}\n            </div>\n           <div class=\"form-group\" id=\"fill-color-group\">\n                <label for=\"{{ form.fill_color.id_for_label }}\" id=\"fill-color-label\">{{ form.fill_color.label }}</label>\n                {{ form.fill_color }}\n                {% if form.fill_color.errors %}\n                    <div class=\"error-message\" id=\"fill-color-error\">{{ form.fill_color.errors }}</div>\n                {% endif %}\n            </div>\n             <div class=\"form-group\" id=\"back-color-group\">\n                <label for=\"{{ form.back_color.id_for_label }}\" id=\"back-color-label\">{{ form.back_color.label }}</label>\n                {{ form.back_color }}\n                {% if form.back_color.errors %}\n                    <div class=\"error-message\" id=\"back-color-error\">{{ form.back_color.errors }}</div>\n                {% endif %}\n            </div>\n            <button type=\"submit\" id=\"generate-button\">Generate QR Code</button>\n        </form>\n\n    </div>\n</body>\n</html>"}, {"file": "about.html", "path": "qr_project/templates/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About</title>\n    <style>\n        body {\n            font-family: sans-serif;\n            text-align: left;\n            margin: 50px;\n        }\n        .container {\n            width: 80%;\n            margin: 0 auto;\n        }\n        h1 {\n            text-align: center;\n        }\n        .section {\n            margin-bottom: 20px;\n        }\n        .section-title {\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        ul {\n            list-style-type: disc;\n            margin-left: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"about-container\">\n        <h1 id=\"about-title\">About This QR Code Generator</h1>\n\n        <div class=\"section\" id=\"description-section\">\n            <h2 class=\"section-title\" id=\"description-title\">Description</h2>\n            <p id=\"description-content\">\n                This website is a simple QR code generator. It allows users to create QR codes from text or URLs. You can customize the appearance and error correction level of the QR code.\n            </p>\n        </div>\n\n        <div class=\"section\" id=\"privacy-policy-section\">\n            <h2 class=\"section-title\" id=\"privacy-policy-title\">Privacy Policy</h2>\n            <p id=\"privacy-policy-content\">\n                We do not store any of the data you input into the QR code generator. Your data remains private and is not tracked or logged.\n            </p>\n        </div>\n\n        <div class=\"section\" id=\"terms-of-service-section\">\n            <h2 class=\"section-title\" id=\"terms-of-service-title\">Terms of Service</h2>\n            <p id=\"terms-of-service-content\">\n                By using this website, you agree to use it for lawful purposes only. We are not responsible for any misuse of the generated QR codes.\n            </p>\n        </div>\n    </div>\n</body>\n</html>"}, {"file": "static/style.css", "path": "qr_project/static/style.css", "code": "/* You can add global styles here if needed */"}], "5": [{"file": "manage.py", "path": "/", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mdtohtml.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it is installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "/mdtohtml/", "code": "default_app_config = 'mdtohtml.apps.MdtohtmlConfig'"}, {"file": "apps.py", "path": "/mdtohtml/", "code": "from django.apps import AppConfig\n\n\nclass MdtohtmlConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'mdtohtml'"}, {"file": "models.py", "path": "/mdtohtml/", "code": "from django.db import models\n\n# Create your models here."}, {"file": "views.py", "path": "/mdtohtml/", "code": "import markdown\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\n\n\ndef home(request):\n    return render(request, 'home.html')\n\n\ndef convert(request):\n    if request.method == 'POST':\n        markdown_text = request.POST.get('markdown_text', '')\n        html_output = markdown.markdown(markdown_text)\n        return render(request, 'convert.html', {'html_output': html_output, 'markdown_text': markdown_text})\n    return render(request, 'convert.html')\n\n\ndef about(request):\n    return render(request, 'about.html')"}, {"file": "urls.py", "path": "/mdtohtml/", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "home.html", "path": "/templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; padding: 20px; }\n        .welcome-message { font-size: 2em; font-weight: bold; margin-bottom: 10px; }\n        .introduction { margin-bottom: 20px; }\n        .nav-links { display: flex; gap: 10px; }\n    </style>\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"welcome-message\" class=\"welcome-message\">Welcome to the Markdown to HTML Converter!</h1>\n        <p id=\"introduction\" class=\"introduction\">This tool allows you to convert Markdown text into HTML.  Simply paste your Markdown into the converter, and the HTML output will be generated.</p>\n        <div id=\"navigation\" class=\"nav-links\">\n            <a id=\"convert-link\" href=\"{% url 'convert' %}\">Convert</a>\n            <a id=\"about-link\" href=\"{% url 'about' %}\">About</a>\n        </div>\n    </div>\n</body>\n</html>"}, {"file": "convert.html", "path": "/templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Convert</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; padding: 20px; }\n        .input-area, .output-area { margin-bottom: 20px; }\n        textarea { width: 100%; height: 200px; padding: 10px; box-sizing: border-box; }\n        .convert-button { padding: 10px 20px; background-color: #4CAF50; color: white; border: none; cursor: pointer; }\n        .download-link { display: block; margin-top: 10px; }\n    </style>\n</head>\n<body>\n    <div id=\"convert-container\" class=\"container\">\n        <form id=\"convert-form\" method=\"post\">\n            {% csrf_token %}\n            <div id=\"input-area\" class=\"input-area\">\n                <label for=\"markdown-input\">Markdown Input:</label>\n                <textarea id=\"markdown-input\" name=\"markdown_text\" class=\"markdown-input\">{{ markdown_text }}</textarea>\n            </div>\n            <button id=\"convert-button\" type=\"submit\" class=\"convert-button\">Convert</button>\n        </form>\n\n        {% if html_output %}\n            <div id=\"output-area\" class=\"output-area\">\n                <label>HTML Output:</label>\n                <div id=\"html-output\" class=\"html-output\">{{ html_output|safe }}</div>\n                <a id=\"download-link\" class=\"download-link\" href=\"data:text/html;charset=UTF-8,{{ html_output|urlencode }}\" download=\"converted.html\">Download HTML</a>\n            </div>\n        {% endif %}\n        <a id=\"home-link\" href=\"{% url 'home' %}\">Home</a>\n    </div>\n</body>\n</html>"}, {"file": "about.html", "path": "/templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; padding: 20px; }\n        .team-info { margin-bottom: 20px; }\n        .faq-section { margin-bottom: 20px; }\n    </style>\n</head>\n<body>\n    <div id=\"about-container\" class=\"container\">\n        <h1 id=\"about-title\">About this Converter</h1>\n        <div id=\"team-info\" class=\"team-info\">\n            <h2>Team Information</h2>\n            <p>This converter was developed by [Your Name/Team Name].</p>\n        </div>\n        <div id=\"faq-section\" class=\"faq-section\">\n            <h2>FAQ</h2>\n            <p><strong>Q: How do I use this converter?</strong></p>\n            <p>A: Simply paste your Markdown text into the input area on the 'Convert' page and click the 'Convert' button.</p>\n            <p><strong>Q: Is this converter free to use?</strong></p>\n            <p>A: Yes, this converter is completely free.</p>\n        </div>\n        <a id=\"home-link\" href=\"{% url 'home' %}\">Home</a>\n    </div>\n</body>\n</html>"}, {"file": "__init__.py", "path": "/mdtohtml/settings/", "code": "default_auto_field = 'django.db.models.BigAutoField'"}, {"file": "settings.py", "path": "/mdtohtml/settings/", "code": "import os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'mdtohtml.apps.MdtohtmlConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'mdtohtml.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mdtohtml.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "/mdtohtml/", "code": "from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('mdtohtml.urls')),\n]"}, {"file": "wsgi.py", "path": "/mdtohtml/", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mdtohtml.settings')\n\napplication = get_wsgi_application()"}], "6": [{"file": "settings.py", "path": "todo_project/todo_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'todo_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'todo_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'todo_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "todo_project/todo_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('todo_app.urls')),\n]"}, {"file": "wsgi.py", "path": "todo_project/todo_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "models.py", "path": "todo_project/todo_app/models.py", "code": "from django.db import models\nfrom django.utils import timezone\n\nclass TodoList(models.Model):\n    name = models.CharField(max_length=200)\n\n    def __str__(self):\n        return self.name\n\nclass Task(models.Model):\n    todo_list = models.ForeignKey(TodoList, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True, null=True)\n    completed = models.BooleanField(default=False)\n    created_date = models.DateTimeField(default=timezone.now)\n    due_date = models.DateTimeField(blank=True, null=True)\n\n    def __str__(self):\n        return self.title"}, {"file": "views.py", "path": "todo_project/todo_app/views.py", "code": "from django.shortcuts import render, redirect, get_object_or_404\nfrom .models import TodoList, Task\nfrom .forms import TodoListForm, TaskForm\nfrom django.db.models import Count\nfrom django.http import JsonResponse\n\ndef home(request):\n    todo_lists = TodoList.objects.all()\n    return render(request, 'home.html', {'todo_lists': todo_lists})\n\ndef todo_list_detail(request, pk):\n    todo_list = get_object_or_404(TodoList, pk=pk)\n    tasks = Task.objects.filter(todo_list=todo_list)\n    return render(request, 'todo_list_detail.html', {'todo_list': todo_list, 'tasks': tasks})\n\ndef create_todo_list(request):\n    if request.method == 'POST':\n        form = TodoListForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('home')\n    else:\n        form = TodoListForm()\n    return render(request, 'create_todo_list.html', {'form': form})\n\ndef create_task(request, todo_list_pk):\n    todo_list = get_object_or_404(TodoList, pk=todo_list_pk)\n    if request.method == 'POST':\n        form = TaskForm(request.POST)\n        if form.is_valid():\n            task = form.save(commit=False)\n            task.todo_list = todo_list\n            task.save()\n            return redirect('todo_list_detail', pk=todo_list.pk)\n    else:\n        form = TaskForm()\n    return render(request, 'create_task.html', {'form': form, 'todo_list': todo_list})\n\ndef edit_task(request, pk):\n    task = get_object_or_404(Task, pk=pk)\n    if request.method == 'POST':\n        form = TaskForm(request.POST, instance=task)\n        if form.is_valid():\n            form.save()\n            return redirect('todo_list_detail', pk=task.todo_list.pk)\n    else:\n        form = TaskForm(instance=task)\n    return render(request, 'edit_task.html', {'form': form, 'task': task})\n\ndef delete_task(request, pk):\n    task = get_object_or_404(Task, pk=pk)\n    todo_list_pk = task.todo_list.pk\n    task.delete()\n    return redirect('todo_list_detail', pk=todo_list_pk)\n\ndef mark_task_completed(request, pk):\n    task = get_object_or_404(Task, pk=pk)\n    task.completed = True\n    task.save()\n    return redirect('todo_list_detail', pk=task.todo_list.pk)\n\ndef analysis(request):\n    task_completion_data = Task.objects.values('completed').annotate(count=Count('id'))\n    list_distribution_data = Task.objects.values('todo_list__name').annotate(count=Count('id'))\n\n    return render(request, 'analysis.html', {\n        'task_completion_data': task_completion_data,\n        'list_distribution_data': list_distribution_data,\n    })\n"}, {"file": "urls.py", "path": "todo_project/todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('list/<int:pk>/', views.todo_list_detail, name='todo_list_detail'),\n    path('list/create/', views.create_todo_list, name='create_todo_list'),\n    path('list/<int:todo_list_pk>/task/create/', views.create_task, name='create_task'),\n    path('task/<int:pk>/edit/', views.edit_task, name='edit_task'),\n    path('task/<int:pk>/delete/', views.delete_task, name='delete_task'),\n    path('task/<int:pk>/complete/', views.mark_task_completed, name='mark_task_completed'),\n    path('analysis/', views.analysis, name='analysis'),\n]"}, {"file": "forms.py", "path": "todo_project/todo_app/forms.py", "code": "from django import forms\nfrom .models import TodoList, Task\n\nclass TodoListForm(forms.ModelForm):\n    class Meta:\n        model = TodoList\n        fields = ['name']\n\nclass TaskForm(forms.ModelForm):\n    class Meta:\n        model = Task\n        fields = ['title', 'description', 'due_date']\n        widgets = {\n            'due_date': forms.DateTimeInput(attrs={'type': 'datetime-local'})\n        }\n"}, {"file": "home.html", "path": "todo_project/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Todo App - Home</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        .todo-list-item {\n            margin-bottom: 10px;\n            padding: 10px;\n            border: 1px solid #ccc;\n        }\n        a {\n            text-decoration: none;\n            color: blue;\n        }\n        a:hover {\n            text-decoration: underline;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"home-container\">\n        <h1 id=\"home-title\">Todo Lists</h1>\n\n        <div id=\"todo-lists-container\">\n            {% if todo_lists %}\n                {% for todo_list in todo_lists %}\n                    <div class=\"todo-list-item\" id=\"todo-list-{{ todo_list.id }}\">\n                        <a href=\"{% url 'todo_list_detail' pk=todo_list.pk %}\" class=\"todo-list-link\" id=\"todo-list-link-{{ todo_list.id }}\">{{ todo_list.name }}</a>\n                    </div>\n                {% endfor %}\n            {% else %}\n                <p id=\"no-lists-message\">No todo lists yet.</p>\n            {% endif %}\n        </div>\n\n        <a href=\"{% url 'create_todo_list' %}\" class=\"create-list-link\" id=\"create-list-link\">Create New List</a>\n        <a href=\"{% url 'analysis' %}\" class=\"analysis-link\" id=\"analysis-link\">View Analysis</a>\n    </div>\n</body>\n</html>"}, {"file": "todo_list_detail.html", "path": "todo_project/templates/todo_list_detail.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Todo List - {{ todo_list.name }}</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        .task-item {\n            margin-bottom: 10px;\n            padding: 10px;\n            border: 1px solid #ccc;\n        }\n        .completed {\n            text-decoration: line-through;\n            color: green;\n        }\n        a {\n            text-decoration: none;\n            color: blue;\n        }\n        a:hover {\n            text-decoration: underline;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"todo-list-detail-container\">\n        <h1 id=\"todo-list-title\">{{ todo_list.name }}</h1>\n\n        <div id=\"tasks-container\">\n            {% if tasks %}\n                {% for task in tasks %}\n                    <div class=\"task-item {% if task.completed %}completed{% endif %}\" id=\"task-{{ task.id }}\">\n                        <span {% if task.completed %} class=\"completed\" {% endif %} id=\"task-title-{{ task.id }}\">{{ task.title }}</span>\n                        <a href=\"{% url 'edit_task' pk=task.pk %}\" class=\"edit-task-link\" id=\"edit-task-link-{{ task.id }}\">Edit</a> |\n                        <a href=\"{% url 'delete_task' pk=task.pk %}\" class=\"delete-task-link\" id=\"delete-task-link-{{ task.id }}\">Delete</a> |\n                        {% if not task.completed %}\n                            <a href=\"{% url 'mark_task_completed' pk=task.pk %}\" class=\"complete-task-link\" id=\"complete-task-link-{{ task.id }}\">Complete</a>\n                        {% endif %}\n                    </div>\n                {% endfor %}\n            {% else %}\n                <p id=\"no-tasks-message\">No tasks in this list yet.</p>\n            {% endif %}\n        </div>\n\n        <a href=\"{% url 'create_task' todo_list_pk=todo_list.pk %}\" class=\"create-task-link\" id=\"create-task-link\">Add New Task</a> |\n        <a href=\"{% url 'home' %}\" class=\"back-home-link\" id=\"back-home-link\">Back to Home</a>\n    </div>\n</body>\n</html>"}, {"file": "create_todo_list.html", "path": "todo_project/templates/create_todo_list.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Create Todo List</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        .form-group {\n            margin-bottom: 15px;\n        }\n        label {\n            display: block;\n            margin-bottom: 5px;\n        }\n        input[type=\"text\"] {\n            width: 100%;\n            padding: 8px;\n            border: 1px solid #ccc;\n            box-sizing: border-box;\n        }\n        button {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            cursor: pointer;\n        }\n        a {\n            text-decoration: none;\n            color: blue;\n        }\n        a:hover {\n            text-decoration: underline;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"create-todo-list-container\">\n        <h1 id=\"create-todo-list-title\">Create New Todo List</h1>\n\n        <form method=\"post\" id=\"create-todo-list-form\">\n            {% csrf_token %}\n            <div class=\"form-group\" id=\"form-group-name\">\n                <label for=\"id_name\" id=\"label-name\">Name:</label>\n                {{ form.name }}\n            </div>\n            <button type=\"submit\" id=\"submit-button\">Create</button>\n        </form>\n\n        <a href=\"{% url 'home' %}\" class=\"back-home-link\" id=\"back-home-link\">Back to Home</a>\n    </div>\n</body>\n</html>"}, {"file": "create_task.html", "path": "todo_project/templates/create_task.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Create Task</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        .form-group {\n            margin-bottom: 15px;\n        }\n        label {\n            display: block;\n            margin-bottom: 5px;\n        }\n        input[type=\"text\"], textarea {\n            width: 100%;\n            padding: 8px;\n            border: 1px solid #ccc;\n            box-sizing: border-box;\n        }\n        button {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            cursor: pointer;\n        }\n        a {\n            text-decoration: none;\n            color: blue;\n        }\n        a:hover {\n            text-decoration: underline;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"create-task-container\">\n        <h1 id=\"create-task-title\">Create New Task for {{ todo_list.name }}</h1>\n\n        <form method=\"post\" id=\"create-task-form\">\n            {% csrf_token %}\n            <div class=\"form-group\" id=\"form-group-title\">\n                <label for=\"id_title\" id=\"label-title\">Title:</label>\n                {{ form.title }}\n            </div>\n            <div class=\"form-group\" id=\"form-group-description\">\n                <label for=\"id_description\" id=\"label-description\">Description:</label>\n                {{ form.description }}\n            </div>\n             <div class=\"form-group\" id=\"form-group-due-date\">\n                <label for=\"id_due_date\" id=\"label-due-date\">Due Date:</label>\n                {{ form.due_date }}\n            </div>\n            <button type=\"submit\" id=\"submit-button\">Create</button>\n        </form>\n\n        <a href=\"{% url 'todo_list_detail' pk=todo_list.pk %}\" class=\"back-list-link\" id=\"back-list-link\">Back to List</a>\n    </div>\n</body>\n</html>"}, {"file": "edit_task.html", "path": "todo_project/templates/edit_task.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Edit Task</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        .form-group {\n            margin-bottom: 15px;\n        }\n        label {\n            display: block;\n            margin-bottom: 5px;\n        }\n        input[type=\"text\"], textarea {\n            width: 100%;\n            padding: 8px;\n            border: 1px solid #ccc;\n            box-sizing: border-box;\n        }\n        button {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            cursor: pointer;\n        }\n        a {\n            text-decoration: none;\n            color: blue;\n        }\n        a:hover {\n            text-decoration: underline;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"edit-task-container\">\n        <h1 id=\"edit-task-title\">Edit Task</h1>\n\n        <form method=\"post\" id=\"edit-task-form\">\n            {% csrf_token %}\n            <div class=\"form-group\" id=\"form-group-title\">\n                <label for=\"id_title\" id=\"label-title\">Title:</label>\n                {{ form.title }}\n            </div>\n            <div class=\"form-group\" id=\"form-group-description\">\n                <label for=\"id_description\" id=\"label-description\">Description:</label>\n                {{ form.description }}\n            </div>\n             <div class=\"form-group\" id=\"form-group-due-date\">\n                <label for=\"id_due_date\" id=\"label-due-date\">Due Date:</label>\n                {{ form.due_date }}\n            </div>\n            <button type=\"submit\" id=\"submit-button\">Save</button>\n        </form>\n\n        <a href=\"{% url 'todo_list_detail' pk=task.todo_list.pk %}\" class=\"back-list-link\" id=\"back-list-link\">Back to List</a>\n    </div>\n</body>\n</html>"}, {"file": "analysis.html", "path": "todo_project/templates/analysis.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Task Analysis</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"analysis-container\">\n        <h1 id=\"analysis-title\">Task Analysis</h1>\n\n        <div id=\"task-completion-chart-container\">\n            <h2>Task Completion Chart</h2>\n            <canvas id=\"taskCompletionChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n\n        <div id=\"task-distribution-chart-container\">\n            <h2>Task Distribution Chart</h2>\n            <canvas id=\"taskDistributionChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n\n        <a href=\"{% url 'home' %}\" id=\"back-home-link\">Back to Home</a>\n    </div>\n\n    <script>\n        const taskCompletionData = {{ task_completion_data|safe }};\n        const taskDistributionData = {{ list_distribution_data|safe }};\n\n        // Task Completion Chart\n        const taskCompletionLabels = taskCompletionData.map(item => item.completed ? 'Completed' : 'Incomplete');\n        const taskCompletionCounts = taskCompletionData.map(item => item.count);\n\n        const taskCompletionCtx = document.getElementById('taskCompletionChart').getContext('2d');\n        const taskCompletionChart = new Chart(taskCompletionCtx, {\n            type: 'pie',\n            data: {\n                labels: taskCompletionLabels,\n                datasets: [{\n                    label: 'Task Completion',\n                    data: taskCompletionCounts,\n                    backgroundColor: [\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(255, 99, 132, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(255, 99, 132, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: {\n                        position: 'top',\n                    },\n                    title: {\n                        display: true,\n                        text: 'Task Completion Status'\n                    }\n                }\n            }\n        });\n\n        // Task Distribution Chart\n        const taskDistributionLabels = taskDistributionData.map(item => item.todo_list__name);\n        const taskDistributionCounts = taskDistributionData.map(item => item.count);\n\n        const taskDistributionCtx = document.getElementById('taskDistributionChart').getContext('2d');\n        const taskDistributionChart = new Chart(taskDistributionCtx, {\n            type: 'bar',\n            data: {\n                labels: taskDistributionLabels,\n                datasets: [{\n                    label: 'Tasks per List',\n                    data: taskDistributionCounts,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        beginAtZero: true,\n                        title: {\n                            display: true,\n                            text: 'Number of Tasks'\n                        }\n                    },\n                    x: {\n                         title: {\n                            display: true,\n                            text: 'Todo List'\n                        }\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    },\n                    title: {\n                        display: true,\n                        text: 'Task Distribution Across Todo Lists'\n                    }\n                }\n            }\n        });\n    </script>\n</body>\n</html>"}, {"file": "admin.py", "path": "todo_project/todo_app/admin.py", "code": "from django.contrib import admin\nfrom .models import TodoList, Task\n\nadmin.site.register(TodoList)\nadmin.site.register(Task)\n"}, {"file": "static/style.css", "path": "todo_project/static/style.css", "code": "/* General Styles */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 20px;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n/* Home Page Styles */\n#home-title {\n    text-align: center;\n    margin-bottom: 20px;\n}\n\n.todo-list-item {\n    margin-bottom: 10px;\n    padding: 10px;\n    border: 1px solid #ccc;\n}\n\n.create-list-link {\n    display: inline-block;\n    margin-top: 20px;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    text-decoration: none;\n    border-radius: 5px;\n}\n\n.create-list-link:hover {\n    background-color: #0056b3;\n}\n\n/* Todo List Detail Page Styles */\n#todo-list-title {\n    text-align: center;\n    margin-bottom: 20px;\n}\n\n.task-item {\n    margin-bottom: 10px;\n    padding: 10px;\n    border: 1px solid #ccc;\n}\n\n.completed {\n    text-decoration: line-through;\n    color: green;\n}\n\n/* Form Styles */\n.form-group {\n    margin-bottom: 15px;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n}\n\ninput[type=\"text\"], textarea {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n}\n\nbutton[type=\"submit\"] {\n    background-color: #4CAF50;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n}\n\n/* Link Styles */\na {\n    text-decoration: none;\n    color: blue;\n}\n\na:hover {\n    text-decoration: underline;\n}\n"}], "7": [{"file": "manage.py", "path": "/", "code": "import os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"budget_control.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it is installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "budget_control/settings.py", "path": "budget_control/", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'budget',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'budget_control.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'budget_control.wsgi.application'\n\n\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')] # add this\n\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"}, {"file": "budget_control/urls.py", "path": "budget_control/", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('budget.urls')),\n]\n"}, {"file": "budget_control/wsgi.py", "path": "budget_control/", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_control.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "budget/models.py", "path": "budget/", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Category(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=100)\n    \n    def __str__(self):\n        return self.name\n\nclass Transaction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    date = models.DateField()\n    description = models.CharField(max_length=200)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True) #Can be null if category is deleted.\n    \n    def __str__(self):\n        return self.description\n"}, {"file": "budget/forms.py", "path": "budget/", "code": "from django import forms\nfrom .models import Transaction, Category\n\nclass TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = ['date', 'description', 'amount', 'category']\n        widgets = {\n            'date': forms.DateInput(attrs={'type': 'date', 'class': 'form-control' }),\n            'description': forms.TextInput(attrs={'class': 'form-control'}),\n            'amount': forms.NumberInput(attrs={'class': 'form-control'}),\n            'category': forms.Select(attrs={'class': 'form-control'}),\n        }\n\n\nclass CategoryForm(forms.ModelForm):\n    class Meta:\n        model = Category\n        fields = ['name']\n        widgets = {\n            'name': forms.TextInput(attrs={'class': 'form-control'})\n        }\n"}, {"file": "budget/views.py", "path": "budget/", "code": "from django.shortcuts import render, redirect, get_object_or_404\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib.auth.forms import UserCreationForm, AuthenticationForm\nfrom django.contrib.auth import login, logout\nfrom .models import Transaction, Category\nfrom .forms import TransactionForm, CategoryForm\nfrom django.http import HttpResponse\n\n\ndef home(request):\n    if request.user.is_authenticated:\n        return redirect('dashboard')\n    else:\n        return render(request, 'home.html')\n\n\n@login_required\ndef dashboard(request):\n    transactions = Transaction.objects.filter(user=request.user).order_by('-date')\n    total_balance = sum(transaction.amount for transaction in transactions)\n    return render(request, 'dashboard.html', {'transactions': transactions, 'total_balance': total_balance})\n\n@login_required\ndef balance_tracker(request):\n    transactions = Transaction.objects.filter(user=request.user).order_by('-date')\n\n    # Calculate balance history for the chart\n    balance_history = []\n    current_balance = 0\n    for transaction in reversed(transactions):\n        current_balance += transaction.amount\n        balance_history.append({'date': str(transaction.date), 'balance': current_balance})\n    \n    balance_history.reverse()\n\n    return render(request, 'balance_tracker.html', {'transactions': transactions, 'balance_history': balance_history})\n\n\n@login_required\ndef add_transaction(request):\n    if request.method == 'POST':\n        form = TransactionForm(request.POST)\n        if form.is_valid():\n            transaction = form.save(commit=False)\n            transaction.user = request.user\n            transaction.save()\n            return redirect('balance_tracker')\n    else:\n        form = TransactionForm()\n    return render(request, 'add_transaction.html', {'form': form})\n\n@login_required\ndef edit_transaction(request, transaction_id):\n    transaction = get_object_or_404(Transaction, pk=transaction_id, user=request.user)\n    if request.method == 'POST':\n        form = TransactionForm(request.POST, instance=transaction)\n        if form.is_valid():\n            form.save()\n            return redirect('balance_tracker')\n    else:\n        form = TransactionForm(instance=transaction)\n    return render(request, 'edit_transaction.html', {'form': form, 'transaction_id': transaction_id})\n\n@login_required\ndef delete_transaction(request, transaction_id):\n    transaction = get_object_or_404(Transaction, pk=transaction_id, user=request.user)\n    if request.method == 'POST':\n        transaction.delete()\n        return redirect('balance_tracker')\n    return render(request, 'delete_transaction.html', {'transaction_id': transaction_id})\n\n\n\n@login_required\ndef reports(request):\n    transactions = Transaction.objects.filter(user=request.user).order_by('date')\n    return render(request, 'reports.html', {'transactions': transactions})\n\n\n@login_required\ndef settings(request):\n    categories = Category.objects.filter(user=request.user)\n    form = CategoryForm()\n    return render(request, 'settings.html', {'categories': categories, 'form': form})\n\n\n@login_required\ndef add_category(request):\n    if request.method == 'POST':\n        form = CategoryForm(request.POST)\n        if form.is_valid():\n            category = form.save(commit=False)\n            category.user = request.user\n            category.save()\n            return redirect('settings')\n    return redirect('settings') # Redirect even if it's not a POST request or form is invalid.\n\n\n@login_required\ndef edit_category(request, category_id):\n    category = get_object_or_404(Category, pk=category_id, user=request.user)\n    if request.method == 'POST':\n        form = CategoryForm(request.POST, instance=category)\n        if form.is_valid():\n            form.save()\n            return redirect('settings')\n    return render(request, 'edit_category.html', {'form':CategoryForm(instance=category), 'category_id': category_id}) #or settings template\n\n@login_required\ndef delete_category(request, category_id):\n    category = get_object_or_404(Category, pk=category_id, user=request.user)\n    if request.method == 'POST':\n        category.delete()\n        return redirect('settings')\n    return render(request, 'delete_category.html',{'category_id':category_id}) #or settings template\n\n\n\ndef signup(request):\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            user = form.save()\n            login(request, user)\n            return redirect('dashboard')\n    else:\n        form = UserCreationForm()\n    return render(request, 'signup.html', {'form': form})\n\n\n\ndef user_login(request):\n    if request.method == 'POST':\n        form = AuthenticationForm(request, data=request.POST)\n        if form.is_valid():\n            user = form.get_user()\n            login(request, user)\n            return redirect('dashboard')\n    else:\n        form = AuthenticationForm()\n    return render(request, 'login.html', {'form': form})\n\n\n@login_required\ndef user_logout(request):\n    logout(request)\n    return redirect('home')\n\n\ndef help_view(request):\n    return render(request, 'help.html')\n\n"}, {"file": "budget/urls.py", "path": "budget/", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('balance_tracker/', views.balance_tracker, name='balance_tracker'),\n    path('add_transaction/', views.add_transaction, name='add_transaction'),\n    path('edit_transaction/<int:transaction_id>/', views.edit_transaction, name='edit_transaction'),\n    path('delete_transaction/<int:transaction_id>/', views.delete_transaction, name='delete_transaction'),\n    path('reports/', views.reports, name='reports'),\n    path('settings/', views.settings, name='settings'),\n    path('add_category/', views.add_category, name='add_category'),\n    path('edit_category/<int:category_id>/', views.edit_category, name='edit_category'),\n    path('delete_category/<int:category_id>/', views.delete_category, name='delete_category'),\n    path('signup/', views.signup, name='signup'),\n    path('login/', views.user_login, name='login'),\n    path('logout/', views.user_logout, name='logout'),\n    path('help/', views.help_view, name='help'),\n]\n"}, {"file": "templates/home.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"home-container\" class=\"container mt-5\">\n    <h1 id=\"home-title\" class=\"text-center\">Welcome to Budget Control</h1>\n    <p id=\"home-description\" class=\"text-center\">Take control of your finances with our easy-to-use budget tracking tool.</p>\n    <div id=\"home-buttons\" class=\"d-flex justify-content-center\">\n        <a id=\"login-button\" href=\"{% url 'login' %}\" class=\"btn btn-primary mr-2\">Login</a>\n        <a id=\"signup-button\" href=\"{% url 'signup' %}\" class=\"btn btn-success\">Sign Up</a>\n    </div>\n    <div id=\"home-support\" class=\"text-center mt-3\">\n        <a id=\"help-link\" href=\"{% url 'help' %}\">Support</a>\n    </div>\n</div>\n{% endblock %}"}, {"file": "templates/dashboard.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"dashboard-container\" class=\"container mt-5\">\n    <h1 id=\"dashboard-title\" class=\"mb-4\">Dashboard</h1>\n    <p id=\"dashboard-balance\" class=\"lead\">Current Balance: ${{ total_balance }}</p>\n\n    <h2 id=\"recent-transactions-title\">Recent Transactions</h2>\n    <table id=\"transactions-table\" class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Amount</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for transaction in transactions %}\n            <tr>\n                <td>{{ transaction.date }}</td>\n                <td>{{ transaction.description }}</td>\n                <td>${{ transaction.amount }}</td>\n            </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n    <a id=\"add-transaction-button\" href=\"{% url 'add_transaction' %}\" class=\"btn btn-primary\">Add Transaction</a>\n</div>\n{% endblock %}"}, {"file": "templates/balance_tracker.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"balance-tracker-container\" class=\"container mt-5\">\n    <h1 id=\"balance-tracker-title\" class=\"mb-4\">Balance Tracker</h1>\n\n    <canvas id=\"balance-chart\" width=\"400\" height=\"200\"></canvas>\n\n    <h2 id=\"transactions-list-title\">Transactions</h2>\n    <table id=\"transactions-table\" class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Amount</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for transaction in transactions %}\n            <tr>\n                <td>{{ transaction.date }}</td>\n                <td>{{ transaction.description }}</td>\n                <td>${{ transaction.amount }}</td>\n                <td>{{ transaction.category.name if transaction.category else 'N/A' }}</td>\n                <td>\n                    <a id=\"edit-transaction-{{ transaction.id }}-button\" href=\"{% url 'edit_transaction' transaction.id %}\" class=\"btn btn-sm btn-warning\">Edit</a>\n                    <a id=\"delete-transaction-{{ transaction.id }}-button\" href=\"{% url 'delete_transaction' transaction.id %}\" class=\"btn btn-sm btn-danger\">Delete</a>\n                </td>\n            </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n    <a id=\"add-transaction-button\" href=\"{% url 'add_transaction' %}\" class=\"btn btn-primary\">Add Transaction</a>\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script>\n  const balanceHistory = {{ balance_history|safe }};\n  const labels = balanceHistory.map(item => item.date);\n  const data = balanceHistory.map(item => item.balance);\n\n  const ctx = document.getElementById('balance-chart').getContext('2d');\n  const myChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: labels,\n      datasets: [{\n        label: 'Balance Over Time',\n        data: data,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    },\n    options: {\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n    }\n  });\n</script>\n{% endblock %}"}, {"file": "templates/add_transaction.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"add-transaction-container\" class=\"container mt-5\">\n    <h1 id=\"add-transaction-title\" class=\"mb-4\">Add Transaction</h1>\n    <form id=\"add-transaction-form\" method=\"post\">\n        {% csrf_token %}\n        <div id=\"form-fields\" class=\"form-group\">\n            {{ form.as_p }}\n        </div>\n        <button id=\"submit-button\" type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <a id=\"cancel-button\" href=\"{% url 'balance_tracker' %}\" class=\"btn btn-secondary\">Cancel</a>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/edit_transaction.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"edit-transaction-container\" class=\"container mt-5\">\n    <h1 id=\"edit-transaction-title\" class=\"mb-4\">Edit Transaction</h1>\n    <form id=\"edit-transaction-form\" method=\"post\">\n        {% csrf_token %}\n        <div id=\"form-fields\" class=\"form-group\">\n            {{ form.as_p }}\n        </div>\n        <button id=\"submit-button\" type=\"submit\" class=\"btn btn-primary\">Update</button>\n        <a id=\"cancel-button\" href=\"{% url 'balance_tracker' %}\" class=\"btn btn-secondary\">Cancel</a>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/delete_transaction.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"delete-transaction-container\" class=\"container mt-5\">\n    <h1 id=\"delete-transaction-title\" class=\"mb-4\">Delete Transaction</h1>\n    <p id=\"delete-confirmation\" class=\"lead\">Are you sure you want to delete this transaction?</p>\n    <form id=\"delete-transaction-form\" method=\"post\">\n        {% csrf_token %}\n        <button id=\"confirm-delete-button\" type=\"submit\" class=\"btn btn-danger\">Confirm Delete</button>\n        <a id=\"cancel-button\" href=\"{% url 'balance_tracker' %}\" class=\"btn btn-secondary\">Cancel</a>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/reports.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"reports-container\" class=\"container mt-5\">\n    <h1 id=\"reports-title\" class=\"mb-4\">Reports</h1>\n\n    <h2 id=\"monthly-report-title\">Monthly Report</h2>\n    <table id=\"transactions-table\" class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Amount</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for transaction in transactions %}\n            <tr>\n                <td>{{ transaction.date }}</td>\n                <td>{{ transaction.description }}</td>\n                <td>${{ transaction.amount }}</td>\n            </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n\n    <button id=\"export-data-button\" class=\"btn btn-secondary\">Export Data (CSV)</button>\n</div>\n{% endblock %}"}, {"file": "templates/settings.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"settings-container\" class=\"container mt-5\">\n    <h1 id=\"settings-title\" class=\"mb-4\">Settings</h1>\n\n    <h2 id=\"category-management-title\">Category Management</h2>\n    <table id=\"categories-table\" class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for category in categories %}\n            <tr>\n                <td>{{ category.name }}</td>\n                <td>\n                    <a id=\"edit-category-{{ category.id }}-button\" href=\"{% url 'edit_category' category.id %}\" class=\"btn btn-sm btn-warning\">Edit</a>\n                    <form id=\"delete-category-form-{{ category.id }}\" method=\"post\" action=\"{% url 'delete_category' category.id %}\" style=\"display: inline;\">\n                        {% csrf_token %}\n                        <button id=\"delete-category-{{ category.id }}-button\" type=\"submit\" class=\"btn btn-sm btn-danger\">Delete</button>\n                    </form>\n                </td>\n            </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n\n    <h3 id=\"add-category-title\">Add New Category</h3>\n    <form id=\"add-category-form\" method=\"post\" action=\"{% url 'add_category' %}\">\n        {% csrf_token %}\n        <div id=\"add-category-form-fields\" class=\"form-group\">\n            {{ form.as_p }}\n        </div>\n        <button id=\"add-category-button\" type=\"submit\" class=\"btn btn-primary\">Add Category</button>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/edit_category.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"edit-category-container\" class=\"container mt-5\">\n    <h1 id=\"edit-category-title\" class=\"mb-4\">Edit Category</h1>\n    <form id=\"edit-category-form\" method=\"post\">\n        {% csrf_token %}\n        <div id=\"form-fields\" class=\"form-group\">\n            {{ form.as_p }}\n        </div>\n        <button id=\"submit-button\" type=\"submit\" class=\"btn btn-primary\">Update</button>\n        <a id=\"cancel-button\" href=\"{% url 'settings' %}\" class=\"btn btn-secondary\">Cancel</a>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/delete_category.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"delete-category-container\" class=\"container mt-5\">\n    <h1 id=\"delete-category-title\" class=\"mb-4\">Delete Category</h1>\n    <p id=\"delete-confirmation\" class=\"lead\">Are you sure you want to delete this category?</p>\n    <form id=\"delete-category-form\" method=\"post\">\n        {% csrf_token %}\n        <button id=\"confirm-delete-button\" type=\"submit\" class=\"btn btn-danger\">Confirm Delete</button>\n        <a id=\"cancel-button\" href=\"{% url 'settings' %}\" class=\"btn btn-secondary\">Cancel</a>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/signup.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"signup-container\" class=\"container mt-5\">\n    <h1 id=\"signup-title\" class=\"mb-4\">Sign Up</h1>\n    <form id=\"signup-form\" method=\"post\">\n        {% csrf_token %}\n        <div id=\"form-fields\" class=\"form-group\">\n            {{ form.as_p }}\n        </div>\n        <button id=\"submit-button\" type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n        <a id=\"cancel-button\" href=\"{% url 'home' %}\" class=\"btn btn-secondary\">Cancel</a>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/login.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"login-container\" class=\"container mt-5\">\n    <h1 id=\"login-title\" class=\"mb-4\">Login</h1>\n    <form id=\"login-form\" method=\"post\">\n        {% csrf_token %}\n        <div id=\"form-fields\" class=\"form-group\">\n            {{ form.as_p }}\n        </div>\n        <button id=\"submit-button\" type=\"submit\" class=\"btn btn-primary\">Login</button>\n    </form>\n</div>\n{% endblock %}"}, {"file": "templates/help.html", "path": "templates/", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"help-container\" class=\"container mt-5\">\n    <h1 id=\"help-title\" class=\"mb-4\">Help</h1>\n    <h2 id=\"faq-title\">Frequently Asked Questions</h2>\n    <p id=\"faq-content\">[Add FAQs here]</p>\n\n    <h2 id=\"contact-support-title\">Contact Support</h2>\n    <p id=\"contact-support-info\">Email: support@example.com</p>\n</div>\n{% endblock %}"}, {"file": "templates/base.html", "path": "templates/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Budget Control</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n    <style>\n        body {\n            padding-top: 56px; /* Adjust for fixed navbar */\n        }\n    </style>\n</head>\n<body>\n    <nav id=\"main-nav\" class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n        <a id=\"nav-brand\" class=\"navbar-brand\" href=\"#\">Budget Control</a>\n        <button id=\"nav-toggler\" class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n                {% if user.is_authenticated %}\n                    <li class=\"nav-item\">\n                        <a id=\"nav-dashboard\" class=\"nav-link\" href=\"{% url 'dashboard' %}\">Dashboard</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a id=\"nav-balance-tracker\" class=\"nav-link\" href=\"{% url 'balance_tracker' %}\">Balance Tracker</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a id=\"nav-reports\" class=\"nav-link\" href=\"{% url 'reports' %}\">Reports</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a id=\"nav-settings\" class=\"nav-link\" href=\"{% url 'settings' %}\">Settings</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a id=\"nav-logout\" class=\"nav-link\" href=\"{% url 'logout' %}\">Logout</a>\n                    </li>\n\n                {% else %}\n                  <li class=\"nav-item\">\n                      <a id=\"nav-help\" class=\"nav-link\" href=\"{% url 'help' %}\">Help</a>\n                  </li>\n                    <li class=\"nav-item\">\n                        <a id=\"nav-login\" class=\"nav-link\" href=\"{% url 'login' %}\">Login</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a  id=\"nav-signup\" class=\"nav-link\" href=\"{% url 'signup' %}\">Sign Up</a>\n                    </li>\n                {% endif %}\n            </ul>\n        </div>\n    </nav>\n\n    <div id=\"content-area\" class=\"container\">\n        {% block content %}\n        {% endblock %}\n    </div>\n\n    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</body>\n</html>"}, {"file": "static/style.css", "path": "static/", "code": "/* Add your custom styles here */"}], "8": [{"file": "manage.py", "path": "/", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calendar_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "/calendar_project/", "code": ""}, {"file": "settings.py", "path": "/calendar_project/", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calendar_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'calendar_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'calendar_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "/calendar_project/", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calendar_app.urls')),\n]"}, {"file": "wsgi.py", "path": "/calendar_project/", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calendar_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "/calendar_app/", "code": "default_app_config = 'calendar_app.apps.CalendarAppConfig'"}, {"file": "admin.py", "path": "/calendar_app/", "code": "from django.contrib import admin\nfrom .models import Event\n\nadmin.site.register(Event)"}, {"file": "apps.py", "path": "/calendar_app/", "code": "from django.apps import AppConfig\n\n\nclass CalendarAppConfig(AppConfig):\n    name = 'calendar_app'"}, {"file": "forms.py", "path": "/calendar_app/", "code": "from django import forms\nfrom .models import Event\n\nclass EventForm(forms.ModelForm):\n    class Meta:\n        model = Event\n        fields = ['title', 'description', 'start_time', 'end_time']\n        widgets = {\n            'start_time': forms.DateTimeInput(attrs={'type': 'datetime-local'}),\n            'end_time': forms.DateTimeInput(attrs={'type': 'datetime-local'}),\n        }"}, {"file": "models.py", "path": "/calendar_app/", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()\n\n    def __str__(self):\n        return self.title"}, {"file": "urls.py", "path": "/calendar_app/", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar_view, name='calendar'),\n    path('event/<int:event_id>/', views.event_details, name='event_details'),\n    path('event/new/', views.event_new, name='event_new'),\n    path('event/<int:event_id>/edit/', views.event_edit, name='event_edit'),\n    path('event/<int:event_id>/delete/', views.event_delete, name='event_delete'),\n    path('events/all/', views.event_list, name='event_list'),\n    path('search/', views.search_events, name='search_events'),\n    path('help/', views.help_page, name='help_page'),\n]"}, {"file": "views.py", "path": "/calendar_app/", "code": "from django.shortcuts import render, get_object_or_404, redirect\nfrom django.utils import timezone\nfrom .models import Event\nfrom .forms import EventForm\nfrom django.db.models import Q\n\n\ndef home(request):\n    current_date = timezone.now().date()\n    return render(request, 'calendar_app/home.html', {'current_date': current_date})\n\n\ndef calendar_view(request):\n    events = Event.objects.all()\n    return render(request, 'calendar_app/calendar.html', {'events': events})\n\n\ndef event_details(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)\n    return render(request, 'calendar_app/event_details.html', {'event': event})\n\n\ndef event_new(request):\n    if request.method == \"POST\":\n        form = EventForm(request.POST)\n        if form.is_valid():\n            event = form.save()\n            return redirect('home')  # Redirect to home after adding event\n    else:\n        form = EventForm()\n    return render(request, 'calendar_app/event_edit.html', {'form': form})\n\n\ndef event_edit(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)\n    if request.method == \"POST\":\n        form = EventForm(request.POST, instance=event)\n        if form.is_valid():\n            form.save()\n            return redirect('event_details', event_id=event.pk)\n    else:\n        form = EventForm(instance=event)\n    return render(request, 'calendar_app/event_edit.html', {'form': form})\n\n\ndef event_delete(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)\n    if request.method == \"POST\":\n        event.delete()\n        return redirect('calendar')\n    return render(request, 'calendar_app/event_delete.html', {'event': event})\n\n\ndef event_list(request):\n    events = Event.objects.all()\n    return render(request, 'calendar_app/event_list.html', {'events': events})\n\n\ndef search_events(request):\n    query = request.GET.get('q')\n    results = []\n    if query:\n        results = Event.objects.filter(\n            Q(title__icontains=query) | Q(description__icontains=query)\n        )\n    return render(request, 'calendar_app/search_results.html', {'results': results, 'query': query})\n\n\ndef help_page(request):\n    return render(request, 'calendar_app/help.html')"}, {"file": "home.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"home-title\" class=\"title\">Calendar Application</h1>\n        <p id=\"current-date\" class=\"date\">Today is: {{ current_date }}</p>\n        <a id=\"calendar-link\" class=\"button\" href=\"{% url 'calendar' %}\">Go to Calendar</a>\n    </div>\n\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "calendar.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Calendar</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"calendar-container\" class=\"container\">\n        <h1 id=\"calendar-title\" class=\"title\">Calendar</h1>\n        <a id=\"add-event-link\" class=\"button\" href=\"{% url 'event_new' %}\">Add New Event</a>\n\n        <ul id=\"event-list\" class=\"event-list\">\n        {% for event in events %}\n            <li id=\"event-item-{{ event.id }}\" class=\"event-item\">\n                <a class=\"event-link\" href=\"{% url 'event_details' event.id %}\">{{ event.title }}</a>\n            </li>\n        {% endfor %}\n        </ul>\n\n        <a id=\"home-link\" class=\"button\" href=\"{% url 'home' %}\">Back to Home</a>\n    </div>\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "event_details.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Event Details</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"event-details-container\" class=\"container\">\n        <h1 id=\"event-details-title\" class=\"title\">Event Details</h1>\n        <h2 id=\"event-title\" class=\"event-title\">{{ event.title }}</h2>\n        <p id=\"event-description\" class=\"event-description\">{{ event.description }}</p>\n        <p id=\"event-start-time\" class=\"event-time\">Start Time: {{ event.start_time }}</p>\n        <p id=\"event-end-time\" class=\"event-time\">End Time: {{ event.end_time }}</p>\n\n        <a id=\"edit-event-link\" class=\"button\" href=\"{% url 'event_edit' event.id %}\">Edit Event</a>\n        <a id=\"delete-event-link\" class=\"button\" href=\"{% url 'event_delete' event.id %}\">Delete Event</a>\n        <a id=\"back-to-calendar-link\" class=\"button\" href=\"{% url 'calendar' %}\">Back to Calendar</a>\n    </div>\n\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "event_edit.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Edit Event</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"event-edit-container\" class=\"container\">\n        <h1 id=\"event-edit-title\" class=\"title\">Edit Event</h1>\n        <form id=\"event-form\" method=\"post\">\n            {% csrf_token %}\n            <label id=\"title-label\" class=\"form-label\" for=\"id_title\">Title:</label>\n            {{ form.title }}\n            <label id=\"description-label\" class=\"form-label\" for=\"id_description\">Description:</label>\n            {{ form.description }}\n            <label id=\"start-time-label\" class=\"form-label\" for=\"id_start_time\">Start Time:</label>\n            {{ form.start_time }}\n            <label id=\"end-time-label\" class=\"form-label\" for=\"id_end_time\">End Time:</label>\n            {{ form.end_time }}\n            <button id=\"save-button\" class=\"button\" type=\"submit\">Save</button>\n        </form>\n        <a id=\"cancel-link\" class=\"button\" href=\"{% url 'calendar' %}\">Cancel</a>\n    </div>\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "event_delete.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Delete Event</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"event-delete-container\" class=\"container\">\n        <h1 id=\"event-delete-title\" class=\"title\">Delete Event</h1>\n        <p id=\"delete-confirmation\" class=\"confirmation\">Are you sure you want to delete \"{{ event.title }}\"?</p>\n        <form id=\"delete-form\" method=\"post\">\n            {% csrf_token %}\n            <button id=\"confirm-delete-button\" class=\"button\" type=\"submit\">Confirm Delete</button>\n        </form>\n        <a id=\"cancel-link\" class=\"button\" href=\"{% url 'event_details' event.id %}\">Cancel</a>\n    </div>\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "event_list.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>All Events</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"event-list-container\" class=\"container\">\n        <h1 id=\"event-list-title\" class=\"title\">All Events</h1>\n        <ul id=\"all-events-list\" class=\"all-events-list\">\n        {% for event in events %}\n            <li id=\"all-event-item-{{ event.id }}\" class=\"all-event-item\">\n                <a class=\"all-event-link\" href=\"{% url 'event_details' event.id %}\">{{ event.title }}</a>\n            </li>\n        {% endfor %}\n        </ul>\n        <a id=\"back-to-calendar-link\" class=\"button\" href=\"{% url 'calendar' %}\">Back to Calendar</a>\n    </div>\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "search_results.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Search Results</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"search-results-container\" class=\"container\">\n        <h1 id=\"search-results-title\" class=\"title\">Search Results</h1>\n        <form id=\"search-form\" class=\"search-form\" action=\"{% url 'search_events' %}\" method=\"get\">\n            <input id=\"search-input\" class=\"search-input\" type=\"text\" name=\"q\" placeholder=\"Search events...\" value=\"{{ query }}\">\n            <button id=\"search-button\" class=\"button\" type=\"submit\">Search</button>\n        </form>\n        {% if results %}\n            <ul id=\"search-results-list\" class=\"search-results-list\">\n            {% for event in results %}\n                <li id=\"search-result-item-{{ event.id }}\" class=\"search-result-item\">\n                    <a class=\"search-result-link\" href=\"{% url 'event_details' event.id %}\">{{ event.title }}</a>\n                </li>\n            {% endfor %}\n            </ul>\n        {% else %}\n            {% if query %}\n                <p id=\"no-results\" class=\"no-results\">No events found matching \"{{ query }}\".</p>\n            {% endif %}\n        {% endif %}\n        <a id=\"back-to-calendar-link\" class=\"button\" href=\"{% url 'calendar' %}\">Back to Calendar</a>\n    </div>\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "help.html", "path": "/templates/calendar_app/", "code": "{% load static %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Help</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <div id=\"help-container\" class=\"container\">\n        <h1 id=\"help-title\" class=\"title\">Help</h1>\n        <section id=\"faq-section\" class=\"help-section\">\n            <h2 id=\"faq-heading\" class=\"section-heading\">FAQ</h2>\n            <p id=\"faq-content\" class=\"section-content\">Frequently asked questions and answers will be displayed here.</p>\n        </section>\n        <section id=\"user-guide-section\" class=\"help-section\">\n            <h2 id=\"user-guide-heading\" class=\"section-heading\">User Guide</h2>\n            <p id=\"user-guide-content\" class=\"section-content\">A comprehensive user guide for using the calendar application will be displayed here.</p>\n        </section>\n        <a id=\"back-to-home-link\" class=\"button\" href=\"{% url 'home' %}\">Back to Home</a>\n    </div>\n    <script src=\"{% static 'calendar_app/script.js' %}\"></script>\n</body>\n</html>"}, {"file": "style.css", "path": "/static/calendar_app/", "code": "/* Basic Styling */\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n}\n\n.container {\n    width: 80%;\n    margin: 20px auto;\n    padding: 20px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n    text-align: center;\n    color: #333;\n}\n\n.button {\n    display: inline-block;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: #fff;\n    text-decoration: none;\n    border-radius: 5px;\n    margin-top: 10px;\n}\n\n.button:hover {\n    background-color: #0056b3;\n}\n\n/* Home Page */\n.date {\n    text-align: center;\n    margin-bottom: 20px;\n}\n\n/* Calendar Page */\n.event-list {\n    list-style: none;\n    padding: 0;\n}\n\n.event-item {\n    margin-bottom: 10px;\n}\n\n.event-link {\n    text-decoration: none;\n    color: #007bff;\n}\n\n.event-link:hover {\n    text-decoration: underline;\n}\n\n/* Event Details Page */\n.event-title {\n    color: #333;\n}\n\n.event-description {\n    margin-bottom: 15px;\n}\n\n.event-time {\n    font-style: italic;\n    color: #666;\n}\n\n/* Event Edit/New Page */\n.form-label {\n    display: block;\n    margin-top: 10px;\n}\n\n/* Event Delete Page */\n.confirmation {\n    margin-bottom: 20px;\n    color: #cc0000;\n}\n\n/* All Events Page */\n.all-events-list {\n    list-style: none;\n    padding: 0;\n}\n\n.all-event-item {\n    margin-bottom: 10px;\n}\n\n.all-event-link {\n    text-decoration: none;\n    color: #007bff;\n}\n\n.all-event-link:hover {\n    text-decoration: underline;\n}\n\n/* Search Results Page */\n.search-form {\n    margin-bottom: 20px;\n}\n\n.search-input {\n    padding: 8px;\n    width: 70%;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n\n.no-results {\n    color: #666;\n}\n\n/* Help Page */\n.help-section {\n    margin-bottom: 20px;\n}\n\n.section-heading {\n    color: #333;\n}\n\n.section-content {\n    color: #666;\n}"}, {"file": "script.js", "path": "/static/calendar_app/", "code": "// You can add JavaScript functionality here if needed\n// For example, handling calendar interactions, form submissions, etc.\n\n// Placeholder for demonstration\nconsole.log(\"Script.js loaded\");"}], "9": [{"file": "manage.py", "path": "chatbot_project/manage.py", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'chatbot_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "chatbot_project/chatbot_project/__init__.py", "code": ""}, {"file": "settings.py", "path": "chatbot_project/chatbot_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'chatbot_app',  # Our app\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'chatbot_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'chatbot_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "chatbot_project/chatbot_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom chatbot_app import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]"}, {"file": "wsgi.py", "path": "chatbot_project/chatbot_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'chatbot_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "chatbot_project/chatbot_app/__init__.py", "code": ""}, {"file": "admin.py", "path": "chatbot_project/chatbot_app/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "apps.py", "path": "chatbot_project/chatbot_app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass ChatbotAppConfig(AppConfig):\n    name = 'chatbot_app'"}, {"file": "models.py", "path": "chatbot_project/chatbot_app/models.py", "code": "from django.db import models\n\n# Create your models here.\n"}, {"file": "views.py", "path": "chatbot_project/chatbot_app/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'home.html')\n\n\ndef features(request):\n    return render(request, 'features.html')\n\n\ndef pricing(request):\n    return render(request, 'pricing.html')\n\n\ndef about(request):\n    return render(request, 'about.html')\n\n\ndef support(request):\n    return render(request, 'support.html')"}, {"file": "home.html", "path": "chatbot_project/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"home-container\">\n        <h1 id=\"home-title\">Welcome to Our AI Chatbot!</h1>\n        <p id=\"home-overview\" class=\"home-description\">Display a brief overview of the AI Chatbot's capabilities and benefits.</p>\n    </div>\n</body>\n</html>"}, {"file": "features.html", "path": "chatbot_project/templates/features.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Features</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"features-container\">\n        <h1 id=\"features-title\">Key Features</h1>\n        <ul id=\"features-list\">\n            <li>Feature 1: Showcase the main features of the AI Chatbot.</li>\n            <li>Feature 2: Showcase the main features of the AI Chatbot.</li>\n        </ul>\n    </div>\n</body>\n</html>"}, {"file": "pricing.html", "path": "chatbot_project/templates/pricing.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Pricing</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; }\n        .pricing-plan { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"pricing-container\">\n        <h1 id=\"pricing-title\">Pricing Plans</h1>\n\n        <div class=\"pricing-plan\" id=\"pricing-plan-1\">\n            <h2>Basic</h2>\n            <p>$10/month</p>\n            <p>Description of basic plan.</p>\n        </div>\n\n        <div class=\"pricing-plan\" id=\"pricing-plan-2\">\n            <h2>Premium</h2>\n            <p>$20/month</p>\n            <p>Description of premium plan.</p>\n        </div>\n\n        <h2 id=\"contact-sales-header\">Contact Sales</h2>\n        <form id=\"contact-sales-form\">\n            <label for=\"name\" id=\"name-label\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\"><br>\n            <label for=\"email\" id=\"email-label\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\"><br>\n            <label for=\"message\" id=\"message-label\">Message:</label><br>\n            <textarea id=\"message\" name=\"message\"></textarea><br>\n            <input type=\"submit\" value=\"Submit\" id=\"submit-button\">\n        </form>\n    </div>\n</body>\n</html>"}, {"file": "about.html", "path": "chatbot_project/templates/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About Us</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"about-container\">\n        <h1 id=\"about-title\">About Our Company</h1>\n        <p id=\"company-background\">Show information about the company and team behind the AI Chatbot.</p>\n    </div>\n</body>\n</html>"}, {"file": "support.html", "path": "chatbot_project/templates/support.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Support</title>\n    <style>\n        body { font-family: sans-serif; }\n        .container { width: 80%; margin: 0 auto; }\n    </style>\n</head>\n<body>\n    <div class=\"container\" id=\"support-container\">\n        <h1 id=\"support-title\">Support</h1>\n\n        <h2 id=\"faq-title\">Frequently Asked Questions</h2>\n        <ul id=\"faq-list\">\n            <li>Question 1: Answer to question 1.</li>\n            <li>Question 2: Answer to question 2.</li>\n        </ul>\n\n        <h2 id=\"support-message-header\">Need Assistance?</h2>\n        <form id=\"support-message-form\">\n            <label for=\"name\" id=\"support-name-label\">Name:</label><br>\n            <input type=\"text\" id=\"support-name\" name=\"name\"><br>\n            <label for=\"email\" id=\"support-email-label\">Email:</label><br>\n            <input type=\"email\" id=\"support-email\" name=\"email\"><br>\n            <label for=\"message\" id=\"support-message-label\">Message:</label><br>\n            <textarea id=\"support-message\" name=\"message\"></textarea><br>\n            <input type=\"submit\" value=\"Submit\" id=\"support-submit-button\">\n        </form>\n    </div>\n</body>\n</html>"}, {"file": "urls.py", "path": "chatbot_project/chatbot_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]\n"}, {"file": "style.css", "path": "chatbot_project/static/style.css", "code": "/*General Styling*/\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n    color: #333;\n}\n\n.container {\n    width: 80%;\n    margin: auto;\n    overflow: hidden;\n}\n/* Navigation */\nnav {\n    background: #333;\n    color: #fff;\n    padding-top: 15px;\n    padding-bottom: 15px;\n}\n\nnav ul {\n    padding: 0;\n    margin: 0;\n}\n\nnav li {\n    display: inline;\n    padding: 0 20px 0 20px;\n}\n\nnav a {\n    color: #fff;\n    text-decoration: none;\n    font-size: 16px;\n}\n\nnav a:hover {\n    color: #bbb;\n}\n\n/* Main Content Styling - Example Home Page*/\n#home-container {\n    padding: 20px;\n}\n\n#home-title {\n    color: #333;\n}\n\n.home-description {\n    font-size: 1.2em;\n    line-height: 1.6em;\n}\n/*Features page styling example*/\n\n#features-container {\n    padding: 20px;\n}\n\n#features-title {\n    color: #333;\n}\n\n#features-list {\n    list-style-type: disc;\n    padding-left: 20px;\n}\n\n/*Pricing page styling*/\n#pricing-container {\n    padding: 20px;\n}\n\n.pricing-plan {\n    border: 1px solid #ddd;\n    padding: 15px;\n    margin-bottom: 20px;\n    background-color: #fff;\n    border-radius: 5px;\n}\n\n#contact-sales-form label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\n#contact-sales-form input[type=text],\n#contact-sales-form input[type=email],\n#contact-sales-form textarea {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 15px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-sizing: border-box; /* Makes padding and border part of the elements total width*/\n}\n\n#contact-sales-form input[type=submit] {\n    background-color: #5cb85c;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n#contact-sales-form input[type=submit]:hover {\n    background-color: #449d44;\n}\n\n\n/*About Us page styling example*/\n#about-container {\n    padding: 20px;\n}\n\n#about-title {\n    color: #333;\n}\n\n#company-background {\n    font-size: 1.2em;\n    line-height: 1.6em;\n}\n\n\n/*Support page styling*/\n#support-container {\n    padding: 20px;\n}\n\n#faq-list {\n    list-style-type: disc;\n    padding-left: 20px;\n}\n\n#support-message-form label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\n#support-message-form input[type=text],\n#support-message-form input[type=email],\n#support-message-form textarea {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 15px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\n#support-message-form input[type=submit] {\n    background-color: #5bc0de;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n#support-message-form input[type=submit]:hover {\n    background-color: #31b0d5;\n}\n\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n    .container {\n        width: 95%;\n    }\n\n    nav li {\n        display: block;\n        text-align: center;\n        padding: 10px 0;\n    }\n\n    .pricing-plan {\n        width: 100%; /*Adjust pricing plans to fit smaller screens*/\n    }\n}"}, {"file": "base.html", "path": "chatbot_project/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{% block title %}AI Chatbot{% endblock %}</title>\n    <link rel=\"stylesheet\" href=\"/static/style.css\">\n</head>\n<body>\n    <nav id=\"main-nav\">\n        <div class=\"container\">\n            <ul>\n                <li><a href=\"{% url 'home' %}\" id=\"home-link\">Home</a></li>\n                <li><a href=\"{% url 'features' %}\" id=\"features-link\">Features</a></li>\n                <li><a href=\"{% url 'pricing' %}\" id=\"pricing-link\">Pricing</a></li>\n                <li><a href=\"{% url 'about' %}\" id=\"about-link\">About Us</a></li>\n                <li><a href=\"{% url 'support' %}\" id=\"support-link\">Support</a></li>\n            </ul>\n        </div>\n    </nav>\n\n    <div class=\"container\">\n        {% block content %}{% endblock %}\n    </div>\n\n</body>\n</html>"}, {"file": "home.html", "path": "chatbot_project/templates/home.html", "code": "{% extends 'base.html' %}\n\n{% block title %}Home{% endblock %}\n\n{% block content %}\n    <div class=\"container\" id=\"home-container\">\n        <h1 id=\"home-title\">Welcome to Our AI Chatbot!</h1>\n        <p id=\"home-overview\" class=\"home-description\">Display a brief overview of the AI Chatbot's capabilities and benefits.</p>\n    </div>\n{% endblock %}"}, {"file": "features.html", "path": "chatbot_project/templates/features.html", "code": "{% extends 'base.html' %}\n\n{% block title %}Features{% endblock %}\n\n{% block content %}\n    <div class=\"container\" id=\"features-container\">\n        <h1 id=\"features-title\">Key Features</h1>\n        <ul id=\"features-list\" class=\"features-list\">\n            <li id=\"feature-1\">Advanced Natural Language Processing (NLP)</li>\n            <li id=\"feature-2\">Personalized Responses</li>\n            <li id=\"feature-3\">24/7 Availability</li>\n            <li id=\"feature-4\">Easy Integration</li>\n        </ul>\n    </div>\n{% endblock %}"}, {"file": "pricing.html", "path": "chatbot_project/templates/pricing.html", "code": "{% extends 'base.html' %}\n\n{% block title %}Pricing{% endblock %}\n\n{% block content %}\n    <div class=\"container\" id=\"pricing-container\">\n        <h1 id=\"pricing-title\">Pricing Plans</h1>\n\n        <div class=\"pricing-plan\" id=\"pricing-plan-basic\">\n            <h2 class=\"plan-title\">Basic</h2>\n            <p class=\"plan-price\">$10/month</p>\n            <p class=\"plan-description\">Includes basic features and limited support.</p>\n        </div>\n\n        <div class=\"pricing-plan\" id=\"pricing-plan-premium\">\n            <h2 class=\"plan-title\">Premium</h2>\n            <p class=\"plan-price\">$20/month</p>\n            <p class=\"plan-description\">Includes all features and priority support.</p>\n        </div>\n\n        <h2 id=\"contact-sales-header\">Contact Sales</h2>\n        <form id=\"contact-sales-form\" class=\"contact-form\">\n            <label for=\"name\" id=\"name-label\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\" class=\"form-input\"><br>\n            <label for=\"email\" id=\"email-label\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\" class=\"form-input\"><br>\n            <label for=\"message\" id=\"message-label\">Message:</label><br>\n            <textarea id=\"message\" name=\"message\" class=\"form-textarea\"></textarea><br>\n            <input type=\"submit\" value=\"Submit\" id=\"submit-button\" class=\"form-submit-button\">\n        </form>\n    </div>\n{% endblock %}"}, {"file": "about.html", "path": "chatbot_project/templates/about.html", "code": "{% extends 'base.html' %}\n\n{% block title %}About Us{% endblock %}\n\n{% block content %}\n    <div class=\"container\" id=\"about-container\">\n        <h1 id=\"about-title\">About Our Company</h1>\n        <p id=\"company-background\" class=\"company-description\">We are a team of passionate AI enthusiasts dedicated to providing innovative chatbot solutions.</p>\n    </div>\n{% endblock %}"}, {"file": "support.html", "path": "chatbot_project/templates/support.html", "code": "{% extends 'base.html' %}\n\n{% block title %}Support{% endblock %}\n\n{% block content %}\n    <div class=\"container\" id=\"support-container\">\n        <h1 id=\"support-title\">Support</h1>\n\n        <h2 id=\"faq-title\">Frequently Asked Questions</h2>\n        <ul id=\"faq-list\" class=\"faq-list\">\n            <li id=\"faq-1\">What is the AI Chatbot?</li>\n            <p>The AI Chatbot is an automated assistant that uses artificial intelligence to respond to user inquiries.</p>\n            <li id=\"faq-2\">How do I get started?</li>\n            <p>Simply sign up for an account and follow the setup instructions.</p>\n        </ul>\n\n        <h2 id=\"support-message-header\">Need Assistance?</h2>\n        <form id=\"support-message-form\" class=\"support-form\">\n            <label for=\"name\" id=\"support-name-label\">Name:</label><br>\n            <input type=\"text\" id=\"support-name\" name=\"name\" class=\"form-input\"><br>\n            <label for=\"email\" id=\"support-email-label\">Email:</label><br>\n            <input type=\"email\" id=\"support-email\" name=\"email\" class=\"form-input\"><br>\n            <label for=\"message\" id=\"support-message-label\">Message:</label><br>\n            <textarea id=\"support-message\" name=\"message\" class=\"form-textarea\"></textarea><br>\n            <input type=\"submit\" value=\"Submit\" id=\"support-submit-button\" class=\"form-submit-button\">\n        </form>\n    </div>\n{% endblock %}"}], "11": [{"file": "settings.py", "path": "review_project/review_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'reviewer',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'review_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'review_project.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]"}, {"file": "urls.py", "path": "review_project/review_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('reviewer.urls')),\n]"}, {"file": "wsgi.py", "path": "review_project/review_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'review_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "manage.py", "path": "review_project/manage.py", "code": "import os\nimport sys\n\n\ndef main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'review_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "apps.py", "path": "review_project/reviewer/apps.py", "code": "from django.apps import AppConfig\n\n\nclass ReviewerConfig(AppConfig):\n    name = 'reviewer'"}, {"file": "models.py", "path": "review_project/reviewer/models.py", "code": "from django.db import models\n\nclass Review(models.Model):\n    page = models.CharField(max_length=100)\n    function = models.CharField(max_length=200)\n    status = models.CharField(max_length=50, default='Select')\n    note = models.TextField(blank=True)\n\n    def __str__(self):\n        return f'{self.page} - {self.function}'"}, {"file": "views.py", "path": "review_project/reviewer/views.py", "code": "from django.shortcuts import render, redirect\nfrom django.http import HttpResponse\nimport json\nfrom .models import Review\n\nREQUIREMENTS = [\n    {\n        'page': 'Home',\n        'required': True,\n        'function': [\n            {'function': 'Display Welcome Message', 'description': 'Review the test code for ensuring the welcome message or website title is displayed correctly.', 'required': True},\n            {'function': 'Select Status for the Testcode', 'description': 'A select box of three  status \"Pass\", \"Fail\" and \"Select\" for the user to review the code. DO NOT forget about the submit button.', 'required': True},\n            {'function': 'Import File', 'description': 'A form for importing JSON file mentioned in the requirements.', 'required': False},\n            {'function': 'Note for Reviewing', 'description': 'An input box or area that for users to give reviewing notes for each testcode.', 'required': True}\n        ]\n    },\n    {\n        'page': 'About',\n        'required': False,\n        'function': [\n            {'function': 'About Page', 'description': 'The about page that describe the function and other information of the website', 'required': False}\n        ]\n    }\n]\n\ndef home(request):\n    reviews = []\n    for page_data in REQUIREMENTS:\n        for func_data in page_data['function']:\n            review, created = Review.objects.get_or_create(\n                page=page_data['page'],\n                function=func_data['function'],\n                defaults={'status': 'Select', 'note': ''}\n            )\n            reviews.append(review)\n\n    if request.method == 'POST':\n        for review in reviews:\n            status_key = f'status_{review.id}'\n            note_key = f'note_{review.id}'\n\n            if status_key in request.POST and note_key in request.POST:\n                review.status = request.POST[status_key]\n                review.note = request.POST[note_key]\n                review.save()\n\n        return redirect('home') # Redirect to refresh the page with updated data\n\n    return render(request, 'home.html', {'requirements': REQUIREMENTS, 'reviews': reviews})\n\n\ndef about(request):\n    return render(request, 'about.html')\n\n\ndef import_json(request):\n    if request.method == 'POST' and request.FILES.get('json_file'):\n        json_file = request.FILES['json_file']\n        try:\n            data = json.load(json_file)\n\n            # Clear existing reviews (optional, based on desired behavior)\n            Review.objects.all().delete()\n\n            for item in data:\n                page = item.get('page', '')\n                function_data = item.get('function', [])\n\n                for func in function_data:\n                    function_name = func.get('function', '')\n                    status = func.get('status', 'Select')\n                    note = func.get('note', '')\n\n                    Review.objects.create(page=page, function=function_name, status=status, note=note)\n\n            return redirect('home')  # Redirect to home after import\n\n        except json.JSONDecodeError:\n            return HttpResponse(\"Invalid JSON file.\", status=400)\n        except Exception as e:\n            return HttpResponse(f\"Error processing JSON: {e}\", status=500)\n\n    return render(request, 'import.html')"}, {"file": "urls.py", "path": "review_project/reviewer/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n    path('import/', views.import_json, name='import_json'),\n]"}, {"file": "home.html", "path": "review_project/templates/home.html", "code": "{% load static %}\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Code Review</title>\n    <link rel=\"stylesheet\" href=\"{% static 'style.css' %}\">\n</head>\n<body>\n    <div id=\"header\" class=\"header\">\n        <h1>Code Review</h1>\n    </div>\n\n    <div id=\"navigation\" class=\"navigation\">\n        <a href=\"{% url 'home' %}\" class=\"nav-link\">Home</a>\n        <a href=\"{% url 'about' %}\" class=\"nav-link\">About</a>\n        <a href=\"{% url 'import_json' %}\" class=\"nav-link\">Import JSON</a>\n    </div>\n\n    <div id=\"content\" class=\"content\">\n        <form method=\"post\">\n            {% csrf_token %}\n            {% for page_data in requirements %}\n                <div class=\"page-section\">\n                    <h2 class=\"page-title\">{{ page_data.page }}</h2>\n                    {% for func_data in page_data.function %}\n                        <div class=\"function-section\">\n                            <h3 class=\"function-title\">{{ func_data.function }}</h3>\n                            <p class=\"function-description\">{{ func_data.description }}</p>\n\n                            {% for review in reviews %}\n                                {% if review.page == page_data.page and review.function == func_data.function %}\n                                    <div class=\"review-item\">\n                                        <label for=\"status_{{ review.id }}\" class=\"status-label\">Status:</label>\n                                        <select id=\"status_{{ review.id }}\" name=\"status_{{ review.id }}\" class=\"status-select\">\n                                            <option value=\"Select\" {% if review.status == 'Select' %}selected{% endif %}>Select</option>\n                                            <option value=\"Pass\" {% if review.status == 'Pass' %}selected{% endif %}>Pass</option>\n                                            <option value=\"Fail\" {% if review.status == 'Fail' %}selected{% endif %}>Fail</option>\n                                        </select><br>\n\n                                        <label for=\"note_{{ review.id }}\" class=\"note-label\">Note:</label>\n                                        <textarea id=\"note_{{ review.id }}\" name=\"note_{{ review.id }}\" class=\"note-textarea\">{{ review.note }}</textarea><br>\n                                    </div>\n                                {% endif %}\n                            {% endfor %}\n                        </div>\n                    {% endfor %}\n                </div>\n            {% endfor %}\n\n            <button type=\"submit\" id=\"submit-button\" class=\"submit-button\">Submit</button>\n        </form>\n    </div>\n\n    <div id=\"footer\" class=\"footer\">\n        <p>&copy; 2024 Code Review Tool</p>\n    </div>\n</body>\n</html>"}, {"file": "about.html", "path": "review_project/templates/about.html", "code": "{% load static %}\n<!DOCTYPE html>\n<html>\n<head>\n    <title>About</title>\n    <link rel=\"stylesheet\" href=\"{% static 'style.css' %}\">\n</head>\n<body>\n    <div id=\"header\" class=\"header\">\n        <h1>About This Tool</h1>\n    </div>\n\n    <div id=\"navigation\" class=\"navigation\">\n        <a href=\"{% url 'home' %}\" class=\"nav-link\">Home</a>\n        <a href=\"{% url 'about' %}\" class=\"nav-link\">About</a>\n        <a href=\"{% url 'import_json' %}\" class=\"nav-link\">Import JSON</a>\n    </div>\n\n    <div id=\"content\" class=\"content\">\n        <p>This tool is designed to facilitate code review based on predefined requirements.  It allows reviewers to mark the status of each requirement (Pass, Fail, or Select) and add notes.</p>\n        <p>The tool supports importing requirements from a JSON file to streamline the setup process.</p>\n    </div>\n\n    <div id=\"footer\" class=\"footer\">\n        <p>&copy; 2024 Code Review Tool</p>\n    </div>\n</body>\n</html>"}, {"file": "import.html", "path": "review_project/templates/import.html", "code": "{% load static %}\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Import JSON</title>\n    <link rel=\"stylesheet\" href=\"{% static 'style.css' %}\">\n</head>\n<body>\n    <div id=\"header\" class=\"header\">\n        <h1>Import JSON</h1>\n    </div>\n\n    <div id=\"navigation\" class=\"navigation\">\n        <a href=\"{% url 'home' %}\" class=\"nav-link\">Home</a>\n        <a href=\"{% url 'about' %}\" class=\"nav-link\">About</a>\n        <a href=\"{% url 'import_json' %}\" class=\"nav-link\">Import JSON</a>\n    </div>\n\n    <div id=\"content\" class=\"content\">\n        <form method=\"post\" enctype=\"multipart/form-data\">\n            {% csrf_token %}\n            <label for=\"json_file_upload\" class=\"file-upload-label\">Select JSON file:</label>\n            <input type=\"file\" id=\"json_file_upload\" name=\"json_file\" class=\"file-upload-input\"><br><br>\n            <button type=\"submit\" id=\"import-button\" class=\"import-button\">Import</button>\n        </form>\n    </div>\n\n    <div id=\"footer\" class=\"footer\">\n        <p>&copy; 2024 Code Review Tool</p>\n    </div>\n</body>\n</html>"}, {"file": "style.css", "path": "review_project/static/style.css", "code": "/* Basic Styling */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n    color: #333;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 1em 0;\n    text-align: center;\n}\n\n.navigation {\n    background-color: #ddd;\n    padding: 0.5em 0;\n    text-align: center;\n}\n\n.nav-link {\n    margin: 0 1em;\n    text-decoration: none;\n    color: #333;\n    font-weight: bold;\n}\n\n.nav-link:hover {\n    color: #007bff;\n}\n\n.content {\n    padding: 1em;\n    margin: 1em;\n    background-color: white;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.footer {\n    text-align: center;\n    padding: 1em 0;\n    background-color: #333;\n    color: white;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n}\n\n/* Home Page Specific Styles */\n.page-section {\n    margin-bottom: 1em;\n    padding: 0.5em;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n}\n\n.page-title {\n    font-size: 1.5em;\n    margin-bottom: 0.5em;\n}\n\n.function-section {\n    margin-left: 1em;\n    margin-bottom: 0.5em;\n    padding: 0.5em;\n    border: 1px solid #eee;\n    border-radius: 3px;\n    background-color: #f9f9f9;\n}\n\n.function-title {\n    font-size: 1.2em;\n    margin-bottom: 0.3em;\n}\n\n.function-description {\n    font-size: 0.9em;\n    color: #666;\n}\n\n.status-label, .note-label {\n    display: inline-block;\n    width: 5em;\n    text-align: right;\n    margin-right: 0.5em;\n}\n\n.status-select {\n    width: 10em;\n}\n\n.note-textarea {\n    width: 90%;\n    height: 5em;\n    padding: 0.5em;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n}\n\n.submit-button, .import-button {\n    background-color: #007bff;\n    color: white;\n    padding: 0.7em 1.5em;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 1em;\n    margin-top: 1em;\n}\n\n.submit-button:hover, .import-button:hover {\n    background-color: #0056b3;\n}\n\n/* Import JSON Page */\n.file-upload-label {\n    display: inline-block;\n    margin-bottom: 0.5em;\n    font-weight: bold;\n}\n\n.file-upload-input {\n    margin-bottom: 1em;\n}"}, {"file": "__init__.py", "path": "review_project/reviewer/__init__.py", "code": ""}, {"file": "__init__.py", "path": "review_project/review_project/__init__.py", "code": ""}], "13": [{"file": "settings.py", "path": "mysite/mysite/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key_here'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'crm'\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'mysite.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mysite.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "mysite/mysite/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('crm.urls')),  # Include the CRM app's URLs\n]\n"}, {"file": "wsgi.py", "path": "mysite/mysite/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "models.py", "path": "mysite/crm/models.py", "code": "from django.db import models\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=200)\n    birthday = models.DateField(null=True, blank=True)\n    age = models.IntegerField(null=True, blank=True)\n    sex = models.CharField(max_length=10, blank=True)\n    company = models.CharField(max_length=200, blank=True)\n    phone_number = models.CharField(max_length=20, blank=True)\n\n    def __str__(self):\n        return self.name\n\nclass Product(models.Model):\n    name = models.CharField(max_length=200)\n    category = models.CharField(max_length=200)\n    recommended_price = models.DecimalField(max_digits=10, decimal_places=2)\n\n    def __str__(self):\n        return self.name\n\nclass PurchaseRecord(models.Model):\n    datetime = models.DateTimeField()\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n\n    def __str__(self):\n        return f'{self.customer.name} - {self.product.name} - {self.datetime}'\n\nclass PreferredProduct(models.Model):\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return f'{self.customer.name} - {self.product.name}'\n"}, {"file": "views.py", "path": "mysite/crm/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef home(request):\n    return render(request, 'home.html')\n"}, {"file": "urls.py", "path": "mysite/crm/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]\n"}, {"file": "admin.py", "path": "mysite/crm/admin.py", "code": "from django.contrib import admin\nfrom .models import Customer, Product, PurchaseRecord, PreferredProduct\n\nadmin.site.register(Customer)\nadmin.site.register(Product)\nadmin.site.register(PurchaseRecord)\nadmin.site.register(PreferredProduct)\n"}, {"file": "home.html", "path": "mysite/templates/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home Page</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"welcome-message\" class=\"welcome-message\">Welcome to the CRM System</h1>\n        <p id=\"overview\" class=\"overview\">This system helps you manage customers, products, purchase records, and analyze sales data.</p>\n        <div id=\"navigation\" class=\"navigation\">\n            <ul id=\"nav-list\" class=\"nav-list\">\n                <li class=\"nav-item\"><a href=\"#\" id=\"customer-management-link\">Customer Management</a></li>\n                <li class=\"nav-item\"><a href=\"#\" id=\"product-management-link\">Product Management</a></li>\n                <li class=\"nav-item\"><a href=\"#\" id=\"purchase-records-link\">Purchase Records</a></li>\n                <li class=\"nav-item\"><a href=\"#\" id=\"preferred-products-link\">Preferred Products</a></li>\n                <li class=\"nav-item\"><a href=\"#\" id=\"sales-analysis-link\">Sales Analysis</a></li>\n            </ul>\n        </div>\n    </div>\n</body>\n</html>"}], "14": [{"file": "manage.py", "path": "", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'helloworld.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "__init__.py", "path": "helloworld/", "code": "default_app_config = 'helloworld.apps.HelloworldConfig'"}, {"file": "apps.py", "path": "helloworld/", "code": "from django.apps import AppConfig\n\n\nclass HelloworldConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'helloworld'"}, {"file": "models.py", "path": "helloworld/", "code": "from django.db import models\n\n# Create your models here."}, {"file": "admin.py", "path": "helloworld/", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "views.py", "path": "helloworld/", "code": "from django.shortcuts import render\n\n\ndef hello_world(request):\n    return render(request, 'helloworld/hello_world.html')"}, {"file": "urls.py", "path": "helloworld/", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.hello_world, name='hello_world'),\n]"}, {"file": "tests.py", "path": "helloworld/", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "hello_world.html", "path": "helloworld/templates/helloworld/", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"Hello World Page\">\n    <title>Hello World</title>\n    {% load static %}\n    <link rel=\"stylesheet\" href=\"{% static 'helloworld/style.css' %}\">\n</head>\n<body>\n    <div id=\"container\" class=\"container\">\n        <h1 id=\"hello-text\" class=\"hello-text\">Hello World</h1>\n    </div>\n</body>\n</html>"}, {"file": "style.css", "path": "helloworld/static/helloworld/", "code": ".container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    text-align: center;\n}\n\n.hello-text {\n    font-family: sans-serif;\n    font-size: 3em;\n    color: #333;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .hello-text {\n        font-size: 2em;\n    }\n}\n\n@media (max-width: 480px) {\n    .hello-text {\n        font-size: 1.5em;\n    }\n}"}, {"file": "__init__.py", "path": "helloworld/static/helloworld/", "code": ""}, {"file": "__init__.py", "path": "helloworld/templates/helloworld/", "code": ""}, {"file": "settings.py", "path": "helloworld/", "code": "import os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'helloworld',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'helloworld.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'helloworld' / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'helloworld.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'helloworld' / 'static',\n]\n\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "helloworld/", "code": "from django.urls import include, path\nfrom django.contrib import admin\n\nurlpatterns = [\n    path('', include('helloworld.urls')),\n    path('admin/', admin.site.urls),\n]"}, {"file": "wsgi.py", "path": "helloworld/", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'helloworld.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "helloworld/", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'helloworld.settings')\n\napplication = get_asgi_application()"}], "15": [{"file": "manage.py", "path": "manage.py", "code": "import os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hello_world_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it is installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()"}, {"file": "hello_world_project/settings.py", "path": "hello_world_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'hello_world_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'hello_world_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'hello_world_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]"}, {"file": "hello_world_project/urls.py", "path": "hello_world_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('hello_world_app.urls')),\n]"}, {"file": "hello_world_project/wsgi.py", "path": "hello_world_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hello_world_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "hello_world_app/apps.py", "path": "hello_world_app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass HelloWorldAppConfig(AppConfig):\n    name = 'hello_world_app'"}, {"file": "hello_world_app/models.py", "path": "hello_world_app/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "hello_world_app/views.py", "path": "hello_world_app/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'home.html')\n\n\ndef hello_world(request):\n    return render(request, 'hello_world.html')"}, {"file": "hello_world_app/urls.py", "path": "hello_world_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('hello_world/', views.hello_world, name='hello_world'),\n]"}, {"file": "templates/home.html", "path": "templates/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"home-heading\" class=\"heading\">Welcome to the Home Page!</h1>\n        <a id=\"hello-world-button\" class=\"button\" href=\"hello_world/\">Go to Hello World Page</a>\n    </div>\n</body>\n</html>"}, {"file": "templates/hello_world.html", "path": "templates/hello_world.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World</title>\n</head>\n<body>\n    <div id=\"hello-world-container\" class=\"container\">\n        <h1 id=\"hello-world-message\" class=\"message\">Hello, World!</h1>\n        <a id=\"back-to-home\" class=\"button\" href=\"/\">Back to Home</a>\n    </div>\n</body>\n</html>"}, {"file": "hello_world_app/static/styles.css", "path": "hello_world_app/static/styles.css", "code": ".container {\n  text-align: center;\n  padding: 20px;\n}\n\n.heading {\n  font-size: 2em;\n  margin-bottom: 20px;\n}\n\n.message {\n  font-size: 3em;\n  color: blue;\n  margin-bottom: 20px;\n}\n\n.button {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  text-decoration: none;\n  border-radius: 5px;\n}\n"}, {"file": "__init__.py", "path": "hello_world_app/__init__.py", "code": ""}, {"file": "__init__.py", "path": "hello_world_project/__init__.py", "code": ""}, {"file": "hello_world_app/static/hello_world_app/script.js", "path": "hello_world_app/static/hello_world_app/script.js", "code": "// Optional: Add some client-side JavaScript if needed.\nconsole.log('Hello from script.js!');"}], "18": [{"file": "main.py", "path": "src/main.py", "code": "import cmd\nimport json\nimport os\n\nclass Game(cmd.Cmd):\n    intro = 'Welcome to the Text Adventure Game! Type help or ? to list commands.\\n'\n    prompt = '> '\n    doc_header = 'Commands available:'\n\n    def __init__(self, game_data_file):\n        super().__init__()\n        self.game_data_file = game_data_file\n        self.game_data = self.load_game_data()\n        self.current_location = 'start'\n        self.inventory = []\n        self.game_over = False\n\n    def load_game_data(self):\n        try:\n            with open(self.game_data_file, 'r') as f:\n                return json.load(f)\n        except FileNotFoundError:\n            print(f'Error: Game data file not found: {self.game_data_file}')\n            exit()\n        except json.JSONDecodeError:\n            print(f'Error: Invalid JSON in game data file: {self.game_data_file}')\n            exit()\n\n    def do_start(self, arg):\n        \"\"Start the game.\"\"        \n        self.display_location()\n\n    def do_look(self, arg):\n        \"\"Look around the current location.\"\"        \n        self.display_location()\n\n    def display_location(self):\n        location = self.game_data['locations'].get(self.current_location)\n        if location:\n            print(location['description'])\n            if 'items' in location:\n                for item in location['items']:\n                    print(f'You see a {item}.')\n        else:\n            print('You are in an unknown location.')\n\n    def do_go(self, arg):\n        \"\"Move to a different location. Usage: go [direction]\"\"        \n        location = self.game_data['locations'].get(self.current_location)\n        if location and 'exits' in location:\n            if arg in location['exits']:\n                self.current_location = location['exits'][arg]\n                self.display_location()\n            else:\n                print(\"You can't go that way.\")\n        else:\n            print('You are in an unknown location.')\n\n    def do_take(self, arg):\n        \"\"Take an item from the current location. Usage: take [item]\"\"        \n        location = self.game_data['locations'].get(self.current_location)\n        if location and 'items' in location and arg in location['items']:\n            self.inventory.append(arg)\n            location['items'].remove(arg)\n            print(f'You take the {arg}.')\n        else:\n            print(f'There is no {arg} here.')\n\n    def do_inventory(self, arg):\n        \"\"Check your inventory.\"\"        \n        if self.inventory:\n            print('You are carrying:')\n            for item in self.inventory:\n                print(f'- {item}')\n        else:\n            print('You are not carrying anything.')\n\n    def do_help(self, arg):\n         \"\"Display help information.\"\"        \n         if arg:\n             try:\n                 help(getattr(self, 'do_' + arg))\n             except AttributeError:\n                 print(\"Unknown command\")\n         else:\n             print(Game.intro)\n             print(Game.doc_header)\n             print(self.get_names())\n\n    def do_exit(self, arg):\n        \"\"Exit the game.\"\"        \n        print('Thank you for playing!')\n        self.game_over = True\n        return True\n\n    def preloop(self):\n       if not os.path.exists(self.game_data_file):\n           print(f\"Error: Game data file '{self.game_data_file}' not found.\")\n           exit(1)\n\n    def postloop(self):\n        # called after loop termination\n        if self.game_over:\n          return True\n        else: \n          return False\n\n    def default(self, line):\n        print(f\"I don't understand '{line}'. Type 'help' for available commands.\")\n\n\n\nif __name__ == '__main__':\n    game = Game('game_data.json')\n    game.cmdloop()"}, {"file": "game_data.json", "path": "src/game_data.json", "code": "{\n  \"locations\": {\n    \"start\": {\n      \"description\": \"You are standing in a dimly lit room. A wooden door is to the north.\",\n      \"exits\": {\n        \"north\": \"hallway\"\n      },\n      \"items\": [\"key\"]\n    },\n    \"hallway\": {\n      \"description\": \"You are in a long, narrow hallway. There's a door to the west and east.\",\n      \"exits\": {\n        \"west\": \"kitchen\",\n        \"east\": \"library\",\n        \"south\": \"start\"\n      }\n    },\n    \"kitchen\": {\n      \"description\": \"You are in a messy kitchen. There is a rusty knife on the counter.\",\n      \"exits\": {\n        \"east\": \"hallway\"\n      },\n      \"items\": [\"knife\"]\n    },\n    \"library\": {\n      \"description\": \"You are in a grand library. Books line the walls. A secret passage is hidden behind a bookshelf to the north.\",\n      \"exits\": {\n        \"west\": \"hallway\",\n        \"north\": \"secret_passage\"\n      },\n      \"items\": []\n    },\n    \"secret_passage\": {\n      \"description\": \"You've found a secret passage. It leads deeper into the unknown.\",\n      \"exits\": {\n        \"south\": \"library\"\n      }\n    }\n  }\n}"}, {"file": "README.md", "path": "README.md", "code": "# Text Adventure Game\n\nA simple text-based adventure game implemented in Python using the `cmd` module.\n\n## Features\n\n- Explore different locations\n- Examine your surroundings\n- Pick up and carry items\n- Navigate using directional commands\n\n## How to Run\n\n1.  Make sure you have Python installed (3.6+).\n2.  Save `main.py` and `game_data.json` in the same directory, creating a directory called `src`.\n3.  Open a terminal or command prompt.\n4.  Navigate to the directory containing the files.\n5.  Run the game using the command: `python src/main.py`\n\n## Commands\n\n-   `start`: Start the game and see the initial location description.\n-   `look`: Examine the current location.\n-   `go [direction]`: Move to a different location (e.g., `go north`).\n-   `take [item]`: Pick up an item from the current location (e.g., `take key`).\n-   `inventory`: Check your inventory.\n-   `help`: Display help information.\n-   `exit`: Exit the game."}], "19": [{"file": "death_analysis.py", "path": "src/death_analysis.py", "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport os\n\nclass DeathAnalysis:\n    def __init__(self, deathlist_path):\n        self.deathlist_path = deathlist_path\n        self.df = None\n\n    def ReadDeathlistData(self):\n        try:\n            self.df = pd.read_csv(self.deathlist_path)\n            print(\"Data loaded successfully.\")\n        except FileNotFoundError:\n            print(f\"Error: File not found at {self.deathlist_path}\")\n            self.df = None\n        except Exception as e:\n            print(f\"Error loading data: {e}\")\n            self.df = None\n\n    def ValidateDataset(self):\n        if self.df is None:\n            print(\"Error: No data loaded.  Please load the data first.\")\n            return False\n\n        required_columns = ['Date', 'Cause']  # Example, adjust as needed\n        if not all(col in self.df.columns for col in required_columns):\n            print(f\"Error: Missing required columns. Required columns are: {required_columns}\")\n            return False\n\n        if self.df.empty:\n            print(\"Error: The dataset is empty.\")\n            return False\n\n        print(\"Dataset validation successful.\")\n        return True\n\n\n    def ProcessData(self):\n        if self.df is None:\n            print(\"Error: No data to process. Load data first.\")\n            return\n\n        try:\n            # Assuming 'Date' column is in a string format.  Adjust the format string as needed.\n            self.df['Date'] = pd.to_datetime(self.df['Date'], errors='coerce')  # Handle potential parsing errors\n            self.df = self.df.dropna(subset=['Date']) # Remove rows where Date parsing failed\n            self.df['Week'] = self.df['Date'].dt.isocalendar().week\n            print(\"Data processing complete.\")\n        except Exception as e:\n            print(f\"Error processing data: {e}\")\n\n    def CalculateWeeklyDeaths(self):\n        if self.df is None:\n            print(\"Error: No data to calculate. Load and process data first.\")\n            return None\n\n        try:\n            weekly_deaths = self.df.groupby('Week').size()\n            print(\"Weekly deaths calculated.\")\n            return weekly_deaths\n        except Exception as e:\n            print(f\"Error calculating weekly deaths: {e}\")\n            return None\n\n    def GenerateHistogram(self, weekly_deaths):\n        if weekly_deaths is None:\n            print(\"Error: No weekly deaths data to generate histogram.\")\n            return\n\n        try:\n            plt.figure(figsize=(12, 6))\n            weekly_deaths.plot(kind='bar')\n            plt.title('Weekly Deaths Histogram', id='histogram-title', class='histogram-title')\n            plt.xlabel('Week', id='histogram-xlabel', class='histogram-xlabel')\n            plt.ylabel('Number of Deaths', id='histogram-ylabel', class='histogram-ylabel')\n            plt.grid(axis='y', linestyle='--')\n            plt.tight_layout()\n            plt.savefig('weekly_deaths_histogram.png') #Save the histogram as a file\n            print(\"Histogram generated and saved as weekly_deaths_histogram.png.\")\n            plt.close()\n        except Exception as e:\n            print(f\"Error generating histogram: {e}\")\n\n    def OutputHistogram(self):\n        #Since we saved the histogram to a file, this function is not actually displaying it on screen.\n        #If you wish to display on the screen, you must remove the plt.close() from above, and add plt.show() here.  \n        print(\"Histogram output is the saved image file: weekly_deaths_histogram.png\")\n\n\ndef main():\n    deathlist_file = 'Deathlist.csv'\n    analysis = DeathAnalysis(deathlist_file)\n\n    analysis.ReadDeathlistData()\n    if analysis.ValidateDataset():\n        analysis.ProcessData()\n        weekly_deaths = analysis.CalculateWeeklyDeaths()\n        if weekly_deaths is not None:\n            analysis.GenerateHistogram(weekly_deaths)\n            analysis.OutputHistogram()\n\nif __name__ == \"__main__\":\n    main()"}, {"file": "Deathlist.csv", "path": "data/Deathlist.csv", "code": "Date,Cause\n2023-01-02,Heart Disease\n2023-01-09,Cancer\n2023-01-16,Accident\n2023-01-23,Heart Disease\n2023-01-30,Stroke\n2023-02-06,Cancer\n2023-02-13,Accident\n2023-02-20,Heart Disease\n2023-02-27,Stroke\n2023-03-06,Cancer\n2023-03-13,Accident\n2023-03-20,Heart Disease\n2023-03-27,Stroke\n2023-04-03,Cancer\n2023-04-10,Accident\n2023-04-17,Heart Disease\n2023-04-24,Stroke\n2023-05-01,Cancer\n2023-05-08,Accident\n2023-05-15,Heart Disease\n2023-05-22,Stroke\n2023-05-29,Cancer\n2023-06-05,Accident\n2023-06-12,Heart Disease\n2023-06-19,Stroke\n2023-06-26,Cancer\n2023-07-03,Accident\n2023-07-10,Heart Disease\n2023-07-17,Stroke\n2023-07-24,Cancer\n2023-07-31,Accident\n2023-08-07,Heart Disease\n2023-08-14,Stroke\n2023-08-21,Cancer\n2023-08-28,Accident\n2023-09-04,Heart Disease\n2023-09-11,Stroke\n2023-09-18,Cancer\n2023-09-25,Accident\n2023-10-02,Heart Disease\n2023-10-09,Stroke\n2023-10-16,Cancer\n2023-10-23,Accident\n2023-10-30,Heart Disease\n2023-11-06,Stroke\n2023-11-13,Cancer\n2023-11-20,Accident\n2023-11-27,Heart Disease\n2023-12-04,Stroke\n2023-12-11,Cancer\n2023-12-18,Accident\n2023-12-25,Heart Disease"}, {"file": "requirements.txt", "path": "requirements.txt", "code": "pandas\nmatplotlib"}]}