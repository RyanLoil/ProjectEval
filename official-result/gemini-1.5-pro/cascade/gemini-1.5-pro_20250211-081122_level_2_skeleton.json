{"1": [{"file": "urls.py", "path": "bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.HomePageView.as_view(), name='home'),\n    path('calculator/', views.BMICalculatorView.as_view(), name='calculator'),\n]"}, {"file": "views.py", "path": "bmi_calculator/views.py", "code": "from django.shortcuts import render\nfrom django.views.generic import TemplateView\n\nclass HomePageView(TemplateView):\n    template_name = 'home.html'\n\nclass BMICalculatorView(TemplateView):\n    template_name = 'calculator.html'\n"}, {"file": "home.html", "path": "bmi_calculator/templates/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h1>Welcome to the BMI Calculator</h1>\n<p>Introduction to BMI and how it works...</p>\n<a href=\"{% url 'calculator' %}\">Go to Calculator</a>\n{% endblock %}"}, {"file": "calculator.html", "path": "bmi_calculator/templates/calculator.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<h1>BMI Calculator</h1>\n<form method=\"post\">\n    {% csrf_token %}\n    <label for=\"height\">Height:</label><br>\n    <input type=\"number\" name=\"height\" required><br>\n    <label for=\"weight\">Weight:</label><br>\n    <input type=\"number\" name=\"weight\" required><br><br>\n    <input type=\"submit\" value=\"Calculate\">\n</form>\n\n{% if bmi %}\n    <p>Your BMI: {{ bmi }}</p>\n    <p>Your BMI Category: {{ bmi_category }}</p>\n{% endif %}\n\n{% endblock %}"}, {"file": "base.html", "path": "bmi_calculator/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>BMI Calculator</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "forms.py", "path": "bmi_calculator/forms.py", "code": "from django import forms\n\nclass BMIForm(forms.Form):\n    height = forms.FloatField(label='Height', required=True)\n    weight = forms.FloatField(label='Weight', required=True)"}], "2": [{"file": "urls.py", "path": "currency_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('currency_details/', views.currency_details, name='currency_details'),\n    path('settings/', views.settings, name='settings'),\n]"}, {"file": "views.py", "path": "currency_converter/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    context = {}\n    return render(request, 'currency_converter/home.html', context)\n\ndef currency_details(request):\n    context = {}\n    return render(request, 'currency_converter/currency_details.html', context)\n\ndef settings(request):\n    context = {}\n    return render(request, 'currency_converter/settings.html', context)"}, {"file": "home.html", "path": "currency_converter/templates/currency_converter/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    {/* Select Base Currency */}\n    {/* Select Target Currency */}\n    {/* Enter Amount */}\n    {/* Convert Button */}\n    {/* Display Conversion Result */}\n    {/* Exchange Rate Info */}\n{% endblock %}"}, {"file": "currency_details.html", "path": "currency_converter/templates/currency_converter/currency_details.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    {/* Currency Information */}\n    {/* Historical Exchange Rates */}\n{% endblock %}"}, {"file": "settings.html", "path": "currency_converter/templates/currency_converter/settings.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    {/* Set Default Currencies */}\n    {/* Set Update Frequency */}\n{% endblock %}"}, {"file": "models.py", "path": "currency_converter/models.py", "code": ""}, {"file": "forms.py", "path": "currency_converter/forms.py", "code": ""}, {"file": "base.html", "path": "templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Currency Converter</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}], "3": [{"file": "urls.py", "path": "password_generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.password_options, name='password_options'),\n    path('password/', views.generated_password, name='generated_password'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "password_generator/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'generator/home.html')\n\ndef about(request):\n    return render(request, 'generator/about.html')\n\ndef password_options(request):\n    return render(request, 'generator/password_options.html')\n\n\ndef generated_password(request):\n    return render(request, 'generator/generated_password.html')"}, {"file": "home.html", "path": "password_generator/templates/generator/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n\n{% endblock %}"}, {"file": "about.html", "path": "password_generator/templates/generator/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n\n{% endblock %}"}, {"file": "password_options.html", "path": "password_generator/templates/generator/password_options.html", "code": "{% extends 'base.html' %}\n{% block content %}\n\n{% endblock %}"}, {"file": "generated_password.html", "path": "password_generator/templates/generator/generated_password.html", "code": "{% extends 'base.html' %}\n{% block content %}\n\n{% endblock %}"}, {"file": "base.html", "path": "password_generator/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n    {% block content %}\n    {% endblock %}\n</body>\n</html>"}], "4": [{"file": "urls.py", "path": "qr_project/qr_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.generate, name='generate'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "qr_project/qr_app/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'qr_app/home.html')\n\ndef generate(request):\n    return render(request, 'qr_app/generate.html')\n\ndef about(request):\n    return render(request, 'qr_app/about.html')"}, {"file": "home.html", "path": "qr_project/qr_app/templates/qr_app/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <h1>Welcome to the QR Code Generator</h1>\n    <p>This website allows you to easily generate QR codes for any text or URL.</p>\n    <a href=\"{% url 'generate' %}\" class=\"btn btn-primary\">Generate QR Code</a>\n{% endblock %}"}, {"file": "generate.html", "path": "qr_project/qr_app/templates/qr_app/generate.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <h1>QR Code Generator</h1>\n\n    <form method=\"post\">\n        {% csrf_token %}\n        <label for=\"text\">Text or URL:</label>\n        <input type=\"text\" id=\"text\" name=\"text\" required><br><br>\n\n        <label for=\"box_size\">Box Size (Max 128):</label>\n        <input type=\"number\" id=\"box_size\" name=\"box_size\" min=\"1\" max=\"128\" value=\"10\" required><br><br>\n\n         <label for=\"border\">Border Size (Max 10):</label>\n        <input type=\"number\" id=\"border\" name=\"border\" min=\"0\" max=\"10\" value=\"4\" required><br><br>\n\n        <label for=\"error_correction\">Error Correction:</label>\n        <select id=\"error_correction\" name=\"error_correction\">\n            <option value=\"L\">Small</option>\n            <option value=\"M\" selected>Medium</option>\n            <option value=\"Q\">Large</option>\n            <option value=\"H\">Extra Large</option>\n        </select><br><br>\n\n        <label for=\"fill_color\">Fill Color:</label>\n        <input type=\"color\" id=\"fill_color\" name=\"fill_color\" value=\"#000000\"><br><br>\n\n        <label for=\"back_color\">Back Color:</label>\n        <input type=\"color\" id=\"back_color\" name=\"back_color\" value=\"#ffffff\"><br><br>\n\n        <button type=\"submit\">Generate</button>\n    </form>\n\n    {% if qr_code %}\n        <div>\n            <img src=\"{{ qr_code }}\" alt=\"QR Code\">\n            <a href=\"{{ qr_code }}\" download>Download</a>\n        </div>\n    {% endif %}\n\n{% endblock %}"}, {"file": "about.html", "path": "qr_project/qr_app/templates/qr_app/about.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <h1>About Us</h1>\n    <p>This is a simple QR code generator website.</p>\n \n    <h2>Privacy Policy</h2>\n    <p>Your privacy is important to us.  We do not collect or store any personal information.</p>\n\n    <h2>Terms of Service</h2>\n    <p>By using this website, you agree to our terms of service.</p>\n{% endblock %}"}, {"file": "base.html", "path": "qr_project/qr_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <header>\n    <nav>\n        <a href=\"{% url 'home' %}\">Home</a> |\n        <a href=\"{% url 'about' %}\">About</a>\n    </nav>\n    </header>\n    <main>\n        {% block content %}\n        {% endblock %}\n    </main>\n</body>\n</html>"}], "5": [{"file": "urls.py", "path": "converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "converter/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'converter/home.html')\n\ndef convert(request):\n    return render(request, 'converter/convert.html')\n\ndef about(request):\n    return render(request, 'converter/about.html')\n"}, {"file": "home.html", "path": "converter/templates/converter/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <!-- Welcome Message -->\n    <h1>Welcome to the Markdown to HTML Converter</h1>\n\n    <!-- Introduction to Converter -->\n    <p>This tool allows you to easily convert Markdown text to HTML.</p>\n\n    <!-- Navigation Links -->\n    <a href=\"{% url 'convert' %}\">Convert</a>\n    <a href=\"{% url 'about' %}\">About</a>\n{% endblock %}"}, {"file": "convert.html", "path": "converter/templates/converter/convert.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <!-- Markdown Input Area -->\n    <textarea id=\"markdown-input\"></textarea>\n\n    <!-- Convert Button -->\n    <button id=\"convert-button\">Convert</button>\n\n    <!-- HTML Output Area -->\n    <div id=\"html-output\"></div>\n\n    <!-- Upload File (Optional) -->\n    <!--<input type=\"file\" id=\"upload-file\">-->\n\n    <!-- Download HTML (Optional) -->\n    <!--<button id=\"download-html\">Download HTML</button>-->\n{% endblock %}"}, {"file": "about.html", "path": "converter/templates/converter/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <!-- Team Information (Optional) -->\n    <!--<div>Team Information</div>-->\n\n    <!-- FAQ Section (Optional) -->\n    <!--<div>FAQ</div>-->\n{% endblock %}"}, {"file": "base.html", "path": "converter/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Markdown to HTML Converter</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}], "6": [{"file": "urls.py", "path": "todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('lists/', views.todo_lists, name='todo_lists'),\n    path('lists/<int:list_id>/', views.todo_list, name='todo_list'),\n    path('tasks/<int:task_id>/', views.task, name='task'),\n    path('analysis/', views.analysis, name='analysis'),\n]"}, {"file": "views.py", "path": "todo_app/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'todo_app/home.html')\n\ndef todo_lists(request):\n    return render(request, 'todo_app/todo_lists.html')\n\ndef todo_list(request, list_id):\n    return render(request, 'todo_app/todo_list.html', {'list_id': list_id})\n\ndef task(request, task_id):\n    return render(request, 'todo_app/task.html', {'task_id': task_id})\n\ndef analysis(request):\n    return render(request, 'todo_app/analysis.html')"}, {"file": "models.py", "path": "todo_app/models.py", "code": "from django.db import models\n\nclass TodoList(models.Model):\n    name = models.CharField(max_length=200)\n\nclass Task(models.Model):\n    todo_list = models.ForeignKey(TodoList, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True)\n    completed = models.BooleanField(default=False)"}, {"file": "home.html", "path": "todo_app/templates/todo_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Welcome to the Todo App</h1>\n{% endblock %}"}, {"file": "todo_lists.html", "path": "todo_app/templates/todo_app/todo_lists.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Todo Lists</h1>\n{% endblock %}"}, {"file": "todo_list.html", "path": "todo_app/templates/todo_app/todo_list.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Todo List {{ list_id }}</h1>\n{% endblock %}"}, {"file": "task.html", "path": "todo_app/templates/todo_app/task.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Task {{ task_id }}</h1>\n{% endblock %}"}, {"file": "analysis.html", "path": "todo_app/templates/todo_app/analysis.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Analysis</h1>\n{% endblock %}"}], "7": [{"file": "urls.py", "path": "budget_control/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('balance/', views.balance_tracker, name='balance_tracker'),\n    path('reports/', views.reports, name='reports'),\n    path('settings1/', views.settings1, name='settings1'),\n    path('settings2/', views.settings2, name='settings2'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "budget_control/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'budget_control/home.html')\n\ndef balance_tracker(request):\n    return render(request, 'budget_control/balance_tracker.html')\n\ndef reports(request):\n    return render(request, 'budget_control/reports.html')\n\ndef settings1(request):\n    return render(request, 'budget_control/settings1.html')\n\ndef settings2(request):\n    return render(request, 'budget_control/settings2.html')\n\ndef help(request):\n    return render(request, 'budget_control/help.html')\n"}, {"file": "models.py", "path": "budget_control/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Transaction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    date = models.DateField()\n    category = models.ForeignKey('Category', on_delete=models.SET_NULL, null=True, blank=True)\n    description = models.CharField(max_length=200)\n\nclass Category(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=50)\n"}, {"file": "forms.py", "path": "budget_control/forms.py", "code": "from django import forms\nfrom .models import Transaction, Category\n\nclass TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = ['amount', 'date', 'category', 'description']\n\nclass CategoryForm(forms.ModelForm):\n    class Meta:\n        model = Category\n        fields = ['name']"}, {"file": "admin.py", "path": "budget_control/admin.py", "code": "from django.contrib import admin\nfrom .models import Transaction, Category\n\nadmin.site.register(Transaction)\nadmin.site.register(Category)"}], "8": [{"file": "urls.py", "path": "calendar_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar, name='calendar'),\n    path('event/<int:event_id>/', views.event_detail, name='event_detail'),\n    path('event/add/', views.add_event, name='add_event'),\n    path('event/<int:event_id>/edit/', views.edit_event, name='edit_event'),\n    path('event/<int:event_id>/delete/', views.delete_event, name='delete_event'),\n    path('search/', views.search_events, name='search_events'), \n    path('all_events/', views.all_events, name='all_events'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "calendar_app/views.py", "code": "from django.shortcuts import render, redirect\nfrom django.http import HttpResponse\nfrom .models import Event # Assuming you'll have an Event model\nfrom datetime import date\n\ndef home(request):\n    current_date = date.today()\n    # ... logic for calendar quick access ...\n    return render(request, 'calendar_app/home.html', {'current_date': current_date})\n\ndef calendar(request):\n    # ... calendar logic ...\n    return render(request, 'calendar_app/calendar.html')\n\ndef event_detail(request, event_id):\n    # ... event details logic ...\n    return render(request, 'calendar_app/event_detail.html')\n\n\ndef add_event(request):\n    if request.method == 'POST':\n        # ... logic to add event ...\n        return redirect('home')\n    return render(request, 'calendar_app/add_event.html')\n\ndef edit_event(request, event_id):\n    # ... logic to edit event ...\n    return render(request, 'calendar_app/edit_event.html')\n\ndef delete_event(request, event_id):\n    # ... logic to delete event ...\n    return redirect('calendar')  # Or wherever you want to redirect after deletion\n\ndef search_events(request):\n    # ... logic for search events\n    return render(request, 'calendar_app/search_events.html')\n\ndef all_events(request):\n    # ... all events logic ...\n    return render(request, 'calendar_app/all_events.html')\n\ndef help(request):\n    return render(request, 'calendar_app/help.html')"}, {"file": "models.py", "path": "calendar_app/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    # ... fields for event details (e.g., title, date, description) ...\n    title = models.CharField(max_length=200)\n    date = models.DateField()\n    description = models.TextField()\n\n    def __str__(self):\n        return self.title"}, {"file": "home.html", "path": "calendar_app/templates/calendar_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Welcome to the Calendar App</h1>\n<p>Current Date: {{ current_date }}</p>\n\n{% endblock %}"}, {"file": "calendar.html", "path": "calendar_app/templates/calendar_app/calendar.html", "code": "{% extends 'base.html' %}\n{% block content %}\n\n<h1>Calendar</h1>\n\n{% endblock %}"}, {"file": "event_detail.html", "path": "calendar_app/templates/calendar_app/event_detail.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Event Details</h1>\n\n{% endblock %}"}, {"file": "add_event.html", "path": "calendar_app/templates/calendar_app/add_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Add Event</h1>\n<form method=\"post\">\n    {% csrf_token %}\n    \n    <button type=\"submit\">Add Event</button>\n</form>\n{% endblock %}"}, {"file": "edit_event.html", "path": "calendar_app/templates/calendar_app/edit_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Edit Event</h1>\n\n{% endblock %}"}, {"file": "all_events.html", "path": "calendar_app/templates/calendar_app/all_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>All Events</h1>\n\n{% endblock %}"}, {"file": "search_events.html", "path": "calendar_app/templates/calendar_app/search_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Search Events</h1>\n\n{% endblock %}"}, {"file": "help.html", "path": "calendar_app/templates/calendar_app/help.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Help</h1>\n\n{% endblock %}"}], "9": [{"file": "urls.py", "path": "myproject/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]"}, {"file": "views.py", "path": "myproject/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef features(request):\n    return render(request, 'features.html')\n\ndef pricing(request):\n    return render(request, 'pricing.html')\n\ndef about(request):\n    return render(request, 'about.html')\n\ndef support(request):\n    return render(request, 'support.html')"}, {"file": "home.html", "path": "myproject/templates/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Home</h1>\n<p>Product Overview Content</p>\n{% endblock %}"}, {"file": "features.html", "path": "myproject/templates/features.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Features</h1>\n<ul>\n    <li>Feature 1</li>\n    <li>Feature 2</li>\n    <li>Feature 3</li>\n</ul>\n{% endblock %}"}, {"file": "pricing.html", "path": "myproject/templates/pricing.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Pricing</h1>\n<p>Pricing Plans Content</p>\n<p>Contact Sales Form</p>\n{% endblock %}"}, {"file": "about.html", "path": "myproject/templates/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>About Us</h1>\n<p>Company Background Content</p>\n{% endblock %}"}, {"file": "support.html", "path": "myproject/templates/support.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Support</h1>\n<h2>FAQ</h2>\n<p>FAQ Content</p>\n<p>Support Message Form</p>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Site</title>\n</head>\n<body>\n    <nav>\n        <a href=\"{% url 'home' %}\">Home</a>\n        <a href=\"{% url 'features' %}\">Features</a>\n        <a href=\"{% url 'pricing' %}\">Pricing</a>\n        <a href=\"{% url 'about' %}\">About</a>\n        <a href=\"{% url 'support' %}\">Support</a>\n    </nav>\n    {% block content %}{% endblock %}\n</body>\n</html>"}], "10": [{"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('meal_log/', views.meal_log, name='meal_log'),\n    path('activity_log/', views.activity_log, name='activity_log'),\n    path('analysis/', views.analysis, name='analysis'),\n    path('settings/', views.settings, name='settings'),\n    path('help/', views.help, name='help'),\n    # Add paths for signup and login\n    path('signup/', views.signup, name='signup'),\n    path('login/', views.login, name='login'),\n]"}, {"file": "views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'calorie_tracker/home.html')\n\ndef dashboard(request):\n    return render(request, 'calorie_tracker/dashboard.html')\n\ndef meal_log(request):\n    return render(request, 'calorie_tracker/meal_log.html')\n\ndef activity_log(request):\n    return render(request, 'calorie_tracker/activity_log.html')\n\ndef analysis(request):\n    return render(request, 'calorie_tracker/analysis.html')\n\ndef settings(request):\n    return render(request, 'calorie_tracker/settings.html')\n\ndef help(request):\n    return render(request, 'calorie_tracker/help.html')\n\ndef signup(request):\n    return render(request, 'calorie_tracker/signup.html')\n\ndef login(request):\n    return render(request, 'calorie_tracker/login.html')\n"}, {"file": "models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\n# Create your models here.\nclass Meal(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    # ... other fields\n\nclass Activity(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    # ... other fields"}, {"file": "forms.py", "path": "calorie_tracker/forms.py", "code": "from django import forms\nfrom .models import Meal, Activity\n\nclass MealForm(forms.ModelForm):\n    class Meta:\n        model = Meal\n        # ... fields\n        \nclass ActivityForm(forms.ModelForm):\n    class Meta:\n        model = Activity\n        # ... fields\n"}, {"file": "home.html", "path": "calorie_tracker/templates/calorie_tracker/home.html", "code": "<!-- home.html -->\n<h1>Welcome to the Calorie Tracker</h1>\n<a href=\"{% url 'signup' %}\">Sign Up</a>\n<a href=\"{% url 'login' %}\">Log In</a>"}, {"file": "dashboard.html", "path": "calorie_tracker/templates/calorie_tracker/dashboard.html", "code": "<!-- dashboard.html -->\n<h1>Dashboard</h1>"}, {"file": "signup.html", "path": "calorie_tracker/templates/calorie_tracker/signup.html", "code": "<!-- signup.html -->\n<h1>Sign Up</h1>\n<form method=\"post\"> \n    {% csrf_token %}\n    <!-- Your signup form fields here -->\n    <button type=\"submit\">Sign Up</button>\n</form>"}, {"file": "login.html", "path": "calorie_tracker/templates/calorie_tracker/login.html", "code": "<!-- login.html -->\n<h1>Log In</h1>\n<form method=\"post\"> \n    {% csrf_token %}\n    <!-- Your login form fields here -->\n    <button type=\"submit\">Log In</button>\n</form>"}], "11": "```json\n[\n    {\n        \"file\": \"views.py\",\n        \"path\": \"testapp/views.py\",\n        \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom .models import TestCode\nimport json\n\ndef home(request):\n    if request.method == 'POST':\n        if 'test_code_status' in request.POST:\n            # Handle status update\n            pass\n        elif 'import_file' in request.FILES:\n            # Handle file import\n            try:\n                data = json.load(request.FILES['import_file'])\n                for item in data:\n                    TestCode.objects.create(file=item['file'], path=item['path'], code=item['code'])\n            except json.JSONDecodeError:\n                # Handle JSON decode error\n                pass\n            except Exception as e:\n                # Handle other exceptions\n                pass\n\n\n    return render('testapp/home.html', {})\n\ndef about(request):\n    return render('testapp/about.html', {})\n\"\"\"\n    },\n    {\n        \"file\": \"models.py\",\n        \"path\": \"testapp/models.py\",\n        \"code\": \"\"\"\nfrom django.db import models\n\nclass TestCode(models.Model):\n    file = models.CharField(max_length=255)\n    path = models.CharField(max_length=255)\n    code = models.TextField()\n    status = models.CharField(max_length=10, choices=[('pass', 'Pass'), ('fail', 'Fail'), ('select', 'Select')], default='select')\n    notes = models.TextField(blank=True)\n\n\"\"\"\n    },\n    {\n        \"file\": \"urls.py\",\n        \"path\": \"testapp/urls.py\",\n        \"code\": \"\"\"\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n]\n\"\"\"\n    },\n    {\n        \"file\": \"home.html\",\n        \"path\": \"testapp/templates/testapp/home.html\",\n        \"code\": \"\"\"\n<h1>Welcome</h1>\n\n<form method=\"post\">\n    {% csrf_token %}\n    <select name=\"test_code_status\">\n        <option value=\"pass\">Pass</option>\n        <option value=\"fail\">Fail</option>\n        <option value=\"select\">Select</option>\n    </select>\n    <input type=\"submit\" value=\"Submit Status\">\n</form>\n\n<form method=\"post\" enctype=\"multipart/form-data\">\n    {% csrf_token %}\n    <input type=\"file\" name=\"import_file\" accept=\".json\">\n    <input type=\"submit\" value=\"Import\">\n\n</form>\n\n<textarea name=\"notes\"></textarea>\n\"\"\"\n    },\n    {\n        \"file\": \"about.html\",\n        \"path\": \"testapp/templates/testapp/about.html\",\n        \"code\": \"\"\"\n<h1>About</h1>\n<p>This website allows you to review and manage test code.</p>\n\n\"\"\"\n    },\n    {\n        \"file\": \"forms.py\",\n        \"path\": \"testapp/forms.py\",\n        \"code\": \"\"\n    }\n\n]\n```", "12": [{"file": "urls.py", "path": "expense_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('signup/', views.signup, name='signup'),\n    path('login/', views.login, name='login'),\n    path('employee/', views.employee_portal, name='employee_portal'),\n    path('submit_claim/', views.submit_claim, name='submit_claim'),\n    path('view_claim_status/', views.view_claim_status, name='view_claim_status'),\n    path('edit_claim/<int:claim_id>/', views.edit_claim, name='edit_claim'),\n    path('admin/', views.admin_portal, name='admin_portal'),\n    path('approve_claim/<int:claim_id>/', views.approve_claim, name='approve_claim'),\n    path('reject_claim/<int:claim_id>/', views.reject_claim, name='reject_claim'),\n    path('view_claim_details/<int:claim_id>/', views.view_claim_details, name='view_claim_details'),\n    path('search_filter_claims/', views.search_filter_claims, name='search_filter_claims'),\n    path('budget/', views.budget_control, name='budget_control'),\n    path('analyze_expenses/', views.analyze_expenses, name='analyze_expenses'),\n    path('generate_reports/', views.generate_reports, name='generate_reports'),\n    path('set_budget_limits/', views.set_budget_limits, name='set_budget_limits'),\n]"}, {"file": "views.py", "path": "expense_tracker/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Claim\nfrom django.contrib.auth import authenticate, login, logout\nfrom .forms import ClaimForm\n\n# ... other import statements\n\ndef home(request):\n    return render(request, 'expense_tracker/home.html')\n\n# ... other view functions\n"}, {"file": "models.py", "path": "expense_tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Claim(models.Model):\n    # Define fields such as employee, expense_type, amount, description, status, etc.\n    pass"}, {"file": "forms.py", "path": "expense_tracker/forms.py", "code": "from django import forms\nfrom .models import Claim\n\nclass ClaimForm(forms.ModelForm):\n    class Meta:\n        model = Claim\n        fields = '__all__'"}, {"file": "home.html", "path": "expense_tracker/templates/expense_tracker/home.html", "code": "<!-- HTML for the home page -->"}, {"file": "admin.py", "path": "expense_tracker/admin.py", "code": "from django.contrib import admin\nfrom .models import Claim\n\nadmin.site.register(Claim)"}], "13": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('customer/', views.customer_management, name='customer_management'),\n    path('customer/add/', views.add_customer, name='add_customer'),\n    path('customer/edit/<int:customer_id>/', views.edit_customer, name='edit_customer'),\n    path('customer/delete/<int:customer_id>/', views.delete_customer, name='delete_customer'),\n    path('customer/<int:customer_id>/', views.view_customer, name='view_customer'),\n    path('product/', views.product_management, name='product_management'),\n    path('product/add/', views.add_product, name='add_product'),\n    path('product/edit/<int:product_id>/', views.edit_product, name='edit_product'),\n    path('product/delete/<int:product_id>/', views.delete_product, name='delete_product'),\n    path('product/<int:product_id>/', views.view_product, name='view_product'),\n    path('purchase/', views.purchase_records, name='purchase_records'),\n    path('purchase/add/', views.add_purchase, name='add_purchase'),\n    path('purchase/edit/<int:purchase_id>/', views.edit_purchase, name='edit_purchase'),\n    path('purchase/delete/<int:purchase_id>/', views.delete_purchase, name='delete_purchase'),\n    path('purchase/<int:purchase_id>/', views.view_purchase, name='view_purchase'),\n    path('preferred/', views.preferred_products, name='preferred_products'),\n    path('preferred/add/', views.add_preferred_product, name='add_preferred_product'),\n    path('preferred/edit/<int:preferred_product_id>/', views.edit_preferred_product, name='edit_preferred_product'),\n    path('preferred/delete/<int:preferred_product_id>/', views.delete_preferred_product, name='delete_preferred_product'), \n    path('preferred/<int:customer_id>/', views.view_preferred_products, name='view_preferred_products'),\n    path('sales/', views.sales_analysis, name='sales_analysis'),\n    path('sales/report/', views.generate_sales_report, name='generate_sales_report'),\n    path('sales/trends/', views.analyze_sales_trends, name='analyze_sales_trends'),\n    path('sales/performance/', views.product_performance_analysis, name='product_performance_analysis'),\n]\n"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'myapp/home.html')\n\n# other views with matching urls\n"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\n# Create your models here.\nclass Customer(models.Model):\n    # Customer fields\n    pass\n\nclass Product(models.Model):\n    # Product fields\n    pass\n\nclass Purchase(models.Model):\n    # Purchase fields\n    pass\n\nclass PreferredProduct(models.Model):\n    # PreferredProduct fields\n    pass"}, {"file": "forms.py", "path": "myproject/myapp/forms.py", "code": "from django import forms\nfrom .models import Customer, Product, Purchase, PreferredProduct\n\nclass CustomerForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = '__all__'\n\n# similar forms for other models"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "<h1>Welcome to the System</h1>\n<p>Overview of system features...</p>"}], "14": [{"file": "views.py", "path": "helloworld/views.py", "code": "from django.shortcuts import render\n\n\ndef hello_world(request):\n    context = {}\n    return render(request, 'helloworld/hello_world.html', context)"}, {"file": "urls.py", "path": "helloworld/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.hello_world, name='hello_world'),\n]"}, {"file": "hello_world.html", "path": "helloworld/templates/helloworld/hello_world.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n    {% block extrahead %}{% endblock %}\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "urls.py", "path": "myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('helloworld.urls')),\n]"}], "15": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'myapp/home.html')\n\ndef helloworld(request):\n    return render(request, 'myapp/helloworld.html')\n"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <a href=\"{% url 'helloworld' %}\">Button to HelloWorld page</a>\n{% endblock %}"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/myapp/helloworld.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <h1>HelloWorld</h1>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/myapp/templates/myapp/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Django App</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}], "16": [{"file": "input_validation.py", "path": "src/input_validation.py", "code": "# Input File Validation Functions\n\nimport pandas as pd\n\nINPUT_FILE = 'Spring Semester Subjects.xlsx'\nEXPECTED_HEADERS = ['#', 'Name', 'Weekday', 'Time']\nALLOWED_TIMES = ['First period', 'Second period', 'Third period', 'Fourth period']\n\ndef CheckFileExistence():\n  \"\"\"Ensure that 'Spring Semester Subjects.xlsx' file exists.\"\"\"\n  pass  # Implementation to check file existence\n\ndef ValidateHeaders(df):\n  \"\"\"Verify that the file headers are ['#', 'Name', 'Weekday', 'Time'].\"\"\"\n  pass # Implementation to validate headers\n\ndef ValidateTimeColumn(df):\n  \"\"\"Check if the 'Time' column contains only allowed values.\"\"\"\n  pass # Implementation to validate 'Time' column values\n\ndef ValidateDataIntegrity(df):\n  \"\"\"Ensure that all columns have the correct and complete data without any missing fields.\"\"\"\n  pass # Implementation to validate data integrity\n\ndef ValidateNullValue(df):\n  \"\"\"Check if there are any missing value in the table.\"\"\"\n  pass  # Implementation to check for null values\n\ndef validate_input():\n    \"\"\"Validates the input Excel file.\"\"\"\n    CheckFileExistence()\n    df = pd.read_excel(INPUT_FILE)  # Read the Excel file after existence check\n    ValidateHeaders(df)\n    ValidateTimeColumn(df)\n    ValidateDataIntegrity(df)\n    ValidateNullValue(df)\n    return df"}, {"file": "data_transformation.py", "path": "src/data_transformation.py", "code": "# Data Transformation Functions\n\ndef TransformToTwoDimensionTable(df):\n  \"\"\"Convert the list of subjects into a two-dimensional table format.\"\"\"\n  pass  # Implementation to transform data to 2D table\n\ndef DataMapping(table):\n  \"\"\"Map data correctly into the two-dimensional table based on weekday and time period.\"\"\"\n  pass  # Implementation for data mapping"}, {"file": "output_creation.py", "path": "src/output_creation.py", "code": "# Output File Creation Functions\n\ndef CreateOutputExcelFile():\n  \"\"\"Generate a new Excel file for the transformed two-dimensional subject table.\"\"\"\n  pass  # Implementation to create output Excel file\n\ndef SaveTableToExcel(table, output_file):\n  \"\"\"Save the two-dimensional table data into the newly created Excel file.\"\"\"\n  pass  # Implementation to save table to Excel\n"}, {"file": "main.py", "path": "src/main.py", "code": "# Main script\nfrom input_validation import validate_input\nfrom data_transformation import TransformToTwoDimensionTable, DataMapping\nfrom output_creation import CreateOutputExcelFile, SaveTableToExcel\n\nif __name__ == \"__main__\":\n    df = validate_input()\n    two_dim_table = TransformToTwoDimensionTable(df)\n    final_table = DataMapping(two_dim_table)\n    output_file = CreateOutputExcelFile()\n    SaveTableToExcel(final_table, output_file)"}], "17": [{"file": "DataPreparation.py", "path": "src/DataPreparation.py", "code": "# DataPreparation.py\nimport pandas as pd\n\nclass DataPreparation:\n    def __init__(self, filepath):\n        self.filepath = filepath\n        self.df = None\n\n    def ReadDataset(self):\n        try:\n            self.df = pd.read_excel(self.filepath)\n        except FileNotFoundError:\n            raise FileNotFoundError(f\"File not found: {self.filepath}\")\n        except Exception as e:\n            raise Exception(f\"Error reading dataset: {e}\")\n\n    def LagDependentVariable(self):\n        if self.df is None:\n            raise ValueError(\"Dataset not loaded. Call ReadDataset() first.\")\n        self.df['result_lagged'] = self.df['result'].shift(1)\n        self.df = self.df.dropna(subset=['result_lagged'])  # Remove rows with NaN introduced by shift\n\n    def PrepareIndependentVariables(self):\n        if self.df is None:\n            raise ValueError(\"Dataset not loaded. Call ReadDataset() first.\")\n        if self.df.isnull().values.any():\n            raise ValueError(\"Null values found in the dataset.\")\n        if self.df.empty:\n            raise ValueError(\"Dataset is empty.\")\n        self.X = self.df.drop(['result', 'result_lagged'], axis=1)  # Assuming 'result' is the dependent variable\n        self.y = self.df['result_lagged']"}, {"file": "ModelCreation.py", "path": "src/ModelCreation.py", "code": "# ModelCreation.py\nfrom sklearn.linear_model import LogisticRegression\nimport statsmodels.api as sm\n\nclass ModelCreation:\n    def __init__(self, X, y):\n        self.X = X\n        self.y = y\n        self.model = None\n        self.model_summary = None\n\n    def CreateLogisticModel(self):\n        self.X = sm.add_constant(self.X)\n        self.model = sm.Logit(self.y, self.X).fit()\n\n    def GenerateModelSummary(self):\n        if self.model is None:\n            raise ValueError(\"Model not created. Call CreateLogisticModel() first.\")\n        self.model_summary = self.model.summary()"}, {"file": "Output.py", "path": "src/Output.py", "code": "# Output.py\nimport pandas as pd\n\nclass Output:\n    def __init__(self, model_summary):\n        self.model_summary = model_summary\n\n    def WriteSummary(self, output_filepath):\n        if self.model_summary is None:\n            raise ValueError(\"Model summary not available.\")\n        with open('model_summary.txt', 'w') as f:\n            print(self.model_summary, file=f)\n        summary_df = pd.read_html(str(self.model_summary))[1]  # Extract coefficients table\n        summary_df.to_excel(output_filepath, index=False)"}, {"file": "main.py", "path": "src/main.py", "code": "# main.py\nfrom DataPreparation import DataPreparation\nfrom ModelCreation import ModelCreation\nfrom Output import Output\n\nfilepath = 'Gamedata.xlsx'\noutput_filepath = 'Logistic.xlsx'\n\ntry:\n    data_prep = DataPreparation(filepath)\n    data_prep.ReadDataset()\n    data_prep.LagDependentVariable()\n    data_prep.PrepareIndependentVariables()\n\n    model_creation = ModelCreation(data_prep.X, data_prep.y)\n    model_creation.CreateLogisticModel()\n    model_creation.GenerateModelSummary()\n\n    output = Output(model_creation.model_summary)\n    output.WriteSummary(output_filepath)\n\nexcept Exception as e:\n    print(f\"An error occurred: {e}\")"}], "18": [{"file": "main.py", "path": "src/main.py", "code": "# Main game loop and menu handling\n\nimport game_env\nimport game_logic\n\ndef main():\n    while True:\n        # Display main menu\n        # Get player input\n        # Handle menu choices (start game, instructions, exit)\n        if start_game:\n            game_env.initialize_game()\n            game_logic.game_loop()\n\nif __name__ == \"__main__\":\n    main()"}, {"file": "game_env.py", "path": "src/game_env.py", "code": "# Game environment and interactions\n\ndef initialize_game():\n    # Initialize game state (player, rooms, items, etc.)\n    pass\n\ndef move_player(direction):\n    # Update player position\n    pass\n\ndef look_around():\n    # Display current room description\n    pass\n\ndef pick_item(item):\n    # Add item to player inventory\n    pass\n\ndef check_inventory():\n    # Display player's inventory\n    pass"}, {"file": "game_logic.py", "path": "src/game_logic.py", "code": "# Game logic and updates\n\nimport game_env\n\ndef game_loop():\n    while True:\n        # Get player input\n        parse_command(input)\n        update_game_state()\n        # Check for game over conditions\n\ndef parse_command(command):\n    # Interpret player commands\n    pass\n\ndef update_game_state():\n    # Update game state based on player actions\n    pass"}, {"file": "help_support.py", "path": "src/help_support.py", "code": "# Help and Support\n\ndef display_help():\n    # Display help information\n    pass"}], "19": [{"file": "batch_program.py", "path": "somepath/somedir/batch_program.py", "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndef ReadDeathlistData(filepath='Deathlist.csv'):\n    try:\n        df = pd.read_csv(filepath)\n        return df\n    except FileNotFoundError:\n        print(f\"Error: File not found at {filepath}\")\n        return None\n    except Exception as e:\n        print(f\"An error occurred while reading the file: {e}\")\n        return None\n\ndef ValidateDataset(df):\n    # Add validation logic here (e.g. check for required columns, data types)\n    pass\n\ndef ProcessData(df):\n    # Add data processing logic here\n    pass\n\ndef CalculateWeeklyDeaths(df):\n    # Add weekly death calculation logic here\n    pass\n\ndef GenerateHistogram(weekly_deaths):\n    # Add histogram generation logic here using matplotlib\n    pass\n\ndef OutputHistogram(histogram):\n    # Add histogram display logic here using plt.show() or saving\n    pass\n\nif __name__ == \"__main__\":\n    df = ReadDeathlistData()\n    if df is not None:\n        if ValidateDataset(df) is not False:  # Assuming ValidateDataset returns explicit False on failure and None otherwise.\n            processed_data = ProcessData(df)\n            weekly_deaths = CalculateWeeklyDeaths(processed_data)\n            histogram = GenerateHistogram(weekly_deaths)\n            OutputHistogram(histogram)\n"}], "20": [{"file": "urls.py", "path": "blog_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n]"}, {"file": "urls.py", "path": "blog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('blog/<int:pk>/', views.blog_post, name='blog_post'),\n    path('about/', views.about, name='about'),\n    path('categories/', views.categories, name='categories'),\n    path('archive/', views.archive, name='archive'),\n]"}, {"file": "views.py", "path": "blog/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'blog/home.html')\n\ndef blog_post(request, pk):\n    return render(request, 'blog/blog_post.html', {'pk': pk})\n\n\ndef about(request):\n    return render(request, 'blog/about.html')\n\n\ndef categories(request):\n    return render(request, 'blog/categories.html')\n\n\ndef archive(request):\n    return render(request, 'blog/archive.html')\n"}, {"file": "models.py", "path": "blog/models.py", "code": "from django.db import models\n\n\nclass BlogPost(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    # Add other fields as needed (e.g., author, date, category)\n\nclass Category(models.Model):\n    name = models.CharField(max_length=100)\n\nclass Comment(models.Model):\n    post = models.ForeignKey(BlogPost, on_delete=models.CASCADE)\n    # Add other fields as needed."}, {"file": "home.html", "path": "blog/templates/blog/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <h1>Home</h1>\n    {% for post in latest_posts %}\n        <h2>{{ post.title }}</h2>\n    {% endfor %}\n{% endblock %}"}, {"file": "blog_post.html", "path": "blog/templates/blog/blog_post.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>{{ post.title }}</h1>\n<p>{{ post.content }}</p>\n{% endblock %}"}, {"file": "about.html", "path": "blog/templates/blog/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>About</h1>\n{% endblock %}"}, {"file": "categories.html", "path": "blog/templates/blog/categories.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Categories</h1>\n{% endblock %}"}, {"file": "archive.html", "path": "blog/templates/blog/archive.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Archive</h1>\n{% endblock %}"}]}