{"1": [{"file": "manage.py", "path": "bmi_project/manage.py", "code": "#!/usr/bin/env python\n\nimport os\nimport sys\n\n\nif __name__ == \"__main__\":\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "bmi_project/bmi_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'bmi_calculator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "bmi_project/bmi_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('bmi_calculator.urls')),\n]"}, {"file": "urls.py", "path": "bmi_project/bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calculator/', views.calculator, name='calculator'),\n]"}, {"file": "views.py", "path": "bmi_project/bmi_calculator/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'bmi_calculator/home.html')\n\n\ndef calculator(request):\n    bmi = None\n    category = None\n    if request.method == 'POST':\n        height = float(request.POST.get('height'))\n        weight = float(request.POST.get('weight'))\n        bmi = weight / (height * height)\n        if bmi < 18.5:\n            category = 'Underweight'\n        elif bmi < 25:\n            category = 'Normal weight'\n        elif bmi < 30:\n            category = 'Overweight'\n        else:\n            category = 'Obese'\n\n    return render(request, 'bmi_calculator/calculator.html', {'bmi': bmi, 'category': category})\n"}, {"file": "models.py", "path": "bmi_project/bmi_calculator/models.py", "code": ""}, {"file": "home.html", "path": "bmi_project/bmi_calculator/templates/bmi_calculator/home.html", "code": "<h1 id=\"home-title\" class=\"title\">BMI Calculator</h1>\n<p id=\"home-intro\" class=\"intro\">Introduction to BMI Calculator</p>\n<a id=\"calculator-link\" class=\"link\" href=\"{% url 'calculator' %}\">Go to Calculator</a>"}, {"file": "calculator.html", "path": "bmi_project/bmi_calculator/templates/bmi_calculator/calculator.html", "code": "<form id=\"bmi-form\" class=\"form\" method=\"post\">\n    {% csrf_token %}\n    <label for=\"height\" id=\"height-label\" class=\"label\">Height (m):</label>\n    <input type=\"number\" name=\"height\" id=\"height-input\" class=\"input\" step=\"0.01\" required><br><br>\n    <label for=\"weight\" id=\"weight-label\" class=\"label\">Weight (kg):</label>\n    <input type=\"number\" name=\"weight\" id=\"weight-input\" class=\"input\" required><br><br>\n    <button type=\"submit\" id=\"calculate-button\" class=\"button\">Calculate</button>\n    <button type=\"reset\" id=\"reset-button\" class=\"button\">Reset</button>\n</form>\n\n{% if bmi %}\n    <p id=\"bmi-result\" class=\"result\">Your BMI: {{ bmi }}</p>\n    <p id=\"category-result\" class=\"result\">Category: {{ category }}</p>\n{% endif %}"}, {"file": "asgi.py", "path": "bmi_project/bmi_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "bmi_project/bmi_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "bmi_project/bmi_project/__init__.py", "code": ""}, {"file": "apps.py", "path": "bmi_project/bmi_calculator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BmiCalculatorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'bmi_calculator'"}, {"file": "admin.py", "path": "bmi_project/bmi_calculator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "__init__.py", "path": "bmi_project/bmi_calculator/__init__.py", "code": ""}], "3": [{"file": "manage.py", "path": "password_generator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "password_generator/password_generator/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'YOUR_SECRET_KEY_HERE'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'generator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'password_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'password_generator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('generator.urls')),\n]"}, {"file": "urls.py", "path": "password_generator/generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('password/', views.password_options, name='password_options'),\n    path('generated/', views.generated_password, name='generated_password'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "password_generator/generator/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'generator/home.html')\n\ndef password_options(request):\n    return render(request, 'generator/password_options.html')\n\ndef generated_password(request):\n    return render(request, 'generator/generated_password.html')\n\ndef about(request):\n    return render(request, 'generator/about.html')"}, {"file": "home.html", "path": "password_generator/generator/templates/generator/home.html", "code": "<a id=\"generate-password-link\" class=\"btn\" href=\"{% url 'password_options' %}\">Generate Password</a>"}, {"file": "password_options.html", "path": "password_generator/generator/templates/generator/password_options.html", "code": "<form id=\"password-options-form\" class=\"form\" method=\"post\" action=\"{% url 'generated_password' %}\">\n    {% csrf_token %}\n    <label for=\"length\" class=\"label\">Password Length:</label>\n    <input type=\"number\" id=\"length\" name=\"length\" min=\"8\" class=\"input\" required><br><br>\n\n    <input type=\"checkbox\" id=\"uppercase\" name=\"uppercase\" class=\"checkbox\">\n    <label for=\"uppercase\" class=\"label\">Include Uppercase</label><br>\n    <input type=\"checkbox\" id=\"lowercase\" name=\"lowercase\" class=\"checkbox\">\n    <label for=\"lowercase\" class=\"label\">Include Lowercase</label><br>\n    <input type=\"checkbox\" id=\"numbers\" name=\"numbers\" class=\"checkbox\">\n    <label for=\"numbers\" class=\"label\">Include Numbers</label><br>\n    <input type=\"checkbox\" id=\"symbols\" name=\"symbols\" class=\"checkbox\">\n    <label for=\"symbols\" class=\"label\">Include Symbols</label><br><br>\n\n    <input type=\"submit\" value=\"Generate\"  class=\"btn\">\n</form>"}, {"file": "generated_password.html", "path": "password_generator/generator/templates/generator/generated_password.html", "code": "<div id=\"generated-password-container\" class=\"container\">\n    {% if generated_password %}\n        <p id=\"generated-password\" class=\"password\">Your password: {{ generated_password }}</p>\n        <button id=\"copy-button\" class=\"btn\" onclick=\"copyToClipboard()\">Copy to Clipboard</button>\n    {% endif %}\n</div>"}, {"file": "about.html", "path": "password_generator/generator/templates/generator/about.html", "code": ""}, {"file": "asgi.py", "path": "password_generator/password_generator/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "password_generator/password_generator/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "password_generator/password_generator/__init__.py", "code": ""}, {"file": "apps.py", "path": "password_generator/generator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass GeneratorConfig(AppConfig):\n    name = 'generator'"}, {"file": "admin.py", "path": "password_generator/generator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "password_generator/generator/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "password_generator/generator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "__init__.py", "path": "password_generator/generator/__init__.py", "code": ""}], "4": [{"file": "manage.py", "path": "qr_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "qr_project/qr_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@u-c4n-ch4nge-th1s!'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qr_generator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qr_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qr_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "qr_project/qr_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qr_generator.urls')),\n]"}, {"file": "wsgi.py", "path": "qr_project/qr_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "urls.py", "path": "qr_project/qr_generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.generate, name='generate'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "qr_project/qr_generator/views.py", "code": "from django.shortcuts import render\nimport qrcode\nfrom io import BytesIO\nfrom django.core.files.base import ContentFile\nfrom django.http import HttpResponse\n\n\ndef home(request):\n    return render(request, 'qr_generator/home.html')\n\n\ndef generate(request):\n    if request.method == 'POST':\n        data = request.POST.get('data')\n        box_size = int(request.POST.get('box_size', 10))\n        border = int(request.POST.get('border', 4))\n        error_correction = request.POST.get('error_correction', 'M')\n        fill_color = request.POST.get('fill_color', 'black')\n        back_color = request.POST.get('back_color', 'white')\n\n        qr = qrcode.QRCode(\n            version=None,\n            error_correction=getattr(qrcode.constants, f'ERROR_CORRECT_{error_correction}'),\n            box_size=box_size,\n            border=border\n        )\n        qr.add_data(data)\n        qr.make(fit=True)\n\n        img = qr.make_image(fill_color=fill_color, back_color=back_color)\n\n        response = HttpResponse(content_type='image/png')\n        img.save(response, 'PNG')\n        return response\n\n    return render(request, 'qr_generator/generate.html')\n\n\ndef about(request):\n    return render(request, 'qr_generator/about.html')"}, {"file": "home.html", "path": "qr_project/qr_generator/templates/qr_generator/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"home-container\" class=\"home-container\">\n    <h1 id=\"home-title\" class=\"home-title\">Welcome to the QR Code Generator</h1>\n    <p id=\"home-description\" class=\"home-description\">This website allows you to easily generate QR codes for any text or URL.</p>\n    <a id=\"generate-btn\" href=\"{% url 'generate' %}\" class=\"btn btn-primary generate-btn\">Generate QR Code</a>\n</div>\n{% endblock %}"}, {"file": "generate.html", "path": "qr_project/qr_generator/templates/qr_generator/generate.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"generate-container\" class=\"generate-container\">\n    <h1 id=\"generate-title\">QR Code Generator</h1>\n    <form id=\"generate-form\" method=\"post\" class=\"generate-form\">\n        {% csrf_token %}\n        <label for=\"data\">Data:</label><br>\n        <input type=\"text\" id=\"data\" name=\"data\" required><br><br>\n        <label for=\"box_size\">Box Size (Max 128):</label><br>\n        <input type=\"number\" id=\"box_size\" name=\"box_size\" min=\"1\" max=\"128\" value=\"10\"><br><br>\n        <label for=\"error_correction\">Error Correction:</label><br>\n        <select id=\"error_correction\" name=\"error_correction\">\n            <option value=\"L\">Small</option>\n            <option value=\"M\" selected>Medium</option>\n            <option value=\"Q\">Large</option>\n            <option value=\"H\">Maximum</option>\n        </select><br><br>\n        <label for=\"border\">Border Size (Max 10):</label><br>\n        <input type=\"number\" id=\"border\" name=\"border\" min=\"1\" max=\"10\" value=\"4\"><br><br>\n        <label for=\"fill_color\">Fill Color:</label><br>\n        <input type=\"color\" id=\"fill_color\" name=\"fill_color\" value=\"#000000\"><br><br>\n        <label for=\"back_color\">Back Color:</label><br>\n        <input type=\"color\" id=\"back_color\" name=\"back_color\" value=\"#ffffff\"><br><br>\n        <input type=\"submit\" value=\"Generate\">\n    </form>\n\n</div>\n{% endblock %}"}, {"file": "about.html", "path": "qr_project/qr_generator/templates/qr_generator/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"about-container\" class=\"about-container\">\n    <h1 id=\"about-title\">About</h1>\n    <p id=\"about-description\">This is a simple QR code generator website.</p>\n</div>\n{% endblock %}"}, {"file": "base.html", "path": "qr_project/qr_generator/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <nav id=\"main-nav\" class=\"main-nav\">\n        <a id=\"home-link\" href=\"{% url 'home' %}\" class=\"nav-link\">Home</a>\n        <a id=\"about-link\" href=\"{% url 'about' %}\" class=\"nav-link\">About</a>\n    </nav>\n    <div id=\"content-container\" class=\"content-container\">\n      {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "__init__.py", "path": "qr_project/qr_generator/__init__.py", "code": ""}, {"file": "__init__.py", "path": "qr_project/qr_project/__init__.py", "code": ""}, {"file": "asgi.py", "path": "qr_project/qr_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n\napplication = get_asgi_application()"}], "5": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@qnd)c2b!r2j6w0p#c-b62c)15$0+b#9h@51!c_j(r8u_@1'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('converter.urls')),\n]\n"}, {"file": "urls.py", "path": "myproject/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "views.py", "path": "myproject/converter/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'converter/home.html')\n\ndef convert(request):\n    return render(request, 'converter/convert.html')\n\ndef about(request):\n    return render(request, 'converter/about.html')\n"}, {"file": "home.html", "path": "myproject/converter/templates/converter/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"home-title\" class=\"title\">Welcome to Markdown to HTML Converter</h1>\n    <p id=\"home-description\" class=\"description\">This tool helps you convert Markdown text to HTML.</p>\n    <a id=\"convert-link\" class=\"link\" href=\"{% url 'convert' %}\">Convert</a>\n    <a id=\"about-link\" class=\"link\" href=\"{% url 'about' %}\">About</a>\n{% endblock %}"}, {"file": "convert.html", "path": "myproject/converter/templates/converter/convert.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"convert-title\" class=\"title\">Convert Markdown to HTML</h1>\n    <textarea id=\"markdown-input\" class=\"input\"></textarea>\n    <div id=\"html-output\" class=\"output\"></div>\n    <button id=\"convert-button\" class=\"button\">Convert</button>\n{% endblock %}"}, {"file": "about.html", "path": "myproject/converter/templates/converter/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"about-title\" class=\"title\">About Us</h1>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/converter/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Markdown to HTML Converter</title>\n</head>\n<body id=\"main-body\">\n    <div id=\"content-container\" class=\"container\">\n    {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "apps.py", "path": "myproject/converter/apps.py", "code": "from django.apps import AppConfig\n\n\nclass ConverterConfig(AppConfig):\n    name = 'converter'\n"}, {"file": "admin.py", "path": "myproject/converter/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "__init__.py", "path": "myproject/converter/__init__.py", "code": ""}, {"file": "models.py", "path": "myproject/converter/models.py", "code": "from django.db import models\n\n# Create your models here.\n"}, {"file": "tests.py", "path": "myproject/converter/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here.\n"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()\n"}], "6": [{"file": "manage.py", "path": "todo_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "todo_project/todo_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 's3cr3t_k3y'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'todo_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'todo_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'todo_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "todo_project/todo_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('todo_app.urls')),\n]"}, {"file": "urls.py", "path": "todo_project/todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('lists/', views.todo_lists, name='todo_lists'),\n    path('lists/create/', views.create_todo_list, name='create_todo_list'),\n    path('lists/<int:list_id>/', views.todo_list, name='todo_list'),\n    path('tasks/create/', views.create_task, name='create_task'),\n    path('tasks/<int:task_id>/edit/', views.edit_task, name='edit_task'),\n    path('tasks/<int:task_id>/delete/', views.delete_task, name='delete_task'),\n    path('tasks/<int:task_id>/complete/', views.complete_task, name='complete_task'),\n    path('analysis/', views.analysis, name='analysis'),\n]"}, {"file": "views.py", "path": "todo_project/todo_app/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import TodoList, Task\nfrom .forms import TaskForm, TodoListForm\n\n# Create your views here.\ndef home(request):\n    context = {}\n    return render(request, 'todo_app/home.html', context)\n\ndef todo_lists(request):\n    todo_lists = TodoList.objects.all()\n    context = {'todo_lists': todo_lists}\n    return render(request, 'todo_app/todo_lists.html', context)\n\ndef create_todo_list(request):\n    if request.method == 'POST':\n        form = TodoListForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('todo_lists')\n    else:\n        form = TodoListForm()\n    return render(request, 'todo_app/create_todo_list.html', {'form': form})\n\n\ndef todo_list(request, list_id):\n    todo_list = TodoList.objects.get(pk=list_id)\n    tasks = todo_list.task_set.all()  # Access tasks related to the list\n    context = {'todo_list': todo_list, 'tasks': tasks}\n    return render(request, 'todo_app/todo_list.html', context)\n\ndef create_task(request):\n    if request.method == 'POST':\n        form = TaskForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('todo_lists') # Redirect to the appropriate list view\n    else:\n        form = TaskForm()\n    return render(request, 'todo_app/create_task.html', {'form': form})\n\ndef edit_task(request, task_id):\n    task = Task.objects.get(pk=task_id)\n    if request.method == 'POST':\n        form = TaskForm(request.POST, instance=task)\n        if form.is_valid():\n            form.save()\n            return redirect('todo_list', list_id=task.todo_list.id)\n    else:\n        form = TaskForm(instance=task)\n    return render(request, 'todo_app/edit_task.html', {'form': form, 'task': task})\n\ndef delete_task(request, task_id):\n    task = Task.objects.get(pk=task_id)\n    list_id = task.todo_list.id\n    task.delete()\n    return redirect('todo_list', list_id=list_id)\n\n\ndef complete_task(request, task_id):\n    task = Task.objects.get(pk=task_id)\n    task.completed = not task.completed\n    task.save()\n    return redirect('todo_list', list_id=task.todo_list.id)\n\ndef analysis(request):\n    context = {}\n    return render(request, 'todo_app/analysis.html', context)"}, {"file": "models.py", "path": "todo_project/todo_app/models.py", "code": "from django.db import models\n\nclass TodoList(models.Model):\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return self.name\n\nclass Task(models.Model):\n    title = models.CharField(max_length=255)\n    description = models.TextField(blank=True)\n    completed = models.BooleanField(default=False)\n    todo_list = models.ForeignKey(TodoList, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title"}, {"file": "forms.py", "path": "todo_project/todo_app/forms.py", "code": "from django import forms\nfrom .models import Task, TodoList\n\nclass TaskForm(forms.ModelForm):\n    class Meta:\n        model = Task\n        fields = ['title', 'description', 'todo_list'] # Or '__all__' \n\nclass TodoListForm(forms.ModelForm):\n    class Meta:\n        model = TodoList\n        fields = ['name']"}, {"file": "home.html", "path": "todo_project/todo_app/templates/todo_app/home.html", "code": "<div id=\"home-container\" class=\"home-container\">\n    <!-- Dashboard content -->\n    <p>Welcome to the Todo App!</p>\n</div>\n<a id=\"todo-lists-link\" class=\"main-link\" href=\"{% url 'todo_lists' %}\">Todo Lists</a>"}, {"file": "todo_lists.html", "path": "todo_project/todo_app/templates/todo_app/todo_lists.html", "code": "<div id=\"todo-lists-container\" class=\"list-container\">\n    <!-- Display Todo lists -->\n    {% for todo_list in todo_lists %}\n        <div id=\"todo-list-{{ todo_list.id }}\" class=\"todo-list-item\">\n            <a href=\"{% url 'todo_list' todo_list.id %}\">{{ todo_list.name }}</a>\n        </div>\n    {% endfor %}\n</div>\n<a id=\"create-list-link\" class=\"action-link\" href=\"{% url 'create_todo_list' %}\">Create New List</a>"}, {"file": "create_todo_list.html", "path": "todo_project/todo_app/templates/todo_app/create_todo_list.html", "code": "<form id=\"create-list-form\" method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\">Create List</button>\n</form>"}, {"file": "todo_list.html", "path": "todo_project/todo_app/templates/todo_app/todo_list.html", "code": "<div id=\"todo-list-container\" class=\"list-container\">\n    <h2 id=\"list-name\">{{ todo_list.name }}</h2>\n    <!-- Display tasks for the selected list -->\n    <div id=\"tasks-container\" class=\"tasks-container\">\n      {% for task in tasks %}\n      <div id=\"task-{{ task.id }}\" class=\"task-item\">\n          <input type=\"checkbox\" id=\"complete-task-{{ task.id }}\" class=\"complete-checkbox\"{% if task.completed %} checked{% endif %}>\n          <span>{{ task.title }}</span> - <a href=\"{% url 'edit_task' task.id %}\">Edit</a> - <a href=\"{% url 'delete_task' task.id %}\">Delete</a>\n      </div>\n      {% endfor %}\n    </div>      \n</div>\n<a id=\"create-task-link\" class=\"action-link\" href=\"{% url 'create_task' %}\">Add New Task</a>"}, {"file": "create_task.html", "path": "todo_project/todo_app/templates/todo_app/create_task.html", "code": "<form id=\"create-task-form\" method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\">Create Task</button>\n</form>"}, {"file": "edit_task.html", "path": "todo_project/todo_app/templates/todo_app/edit_task.html", "code": "<form id=\"edit-task-form\" method=\"post\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\">Save Changes</button>\n</form>"}, {"file": "analysis.html", "path": "todo_project/todo_app/templates/todo_app/analysis.html", "code": "<div id=\"analysis-container\" class=\"analysis-container\">\n    <!-- Charts and analysis content -->\n    <p>Analysis page content here.</p>\n</div>"}, {"file": "asgi.py", "path": "todo_project/todo_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "todo_project/todo_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "todo_project/todo_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "todo_project/todo_app/__init__.py", "code": ""}, {"file": "admin.py", "path": "todo_project/todo_app/admin.py", "code": "from django.contrib import admin\nfrom .models import TodoList, Task # Import your models\n\nadmin.site.register(TodoList)\nadmin.site.register(Task)"}], "7": [{"file": "manage.py", "path": "budget_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "budget_project/budget_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'y@qnd)0$1^z!-#c)8f^x1b#^#z$o(r-(9v34t+&j=g8_p=s)'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'budget_control',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'budget_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'budget_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "budget_project/budget_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('budget_control.urls')),\n]"}, {"file": "urls.py", "path": "budget_project/budget_control/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('balance_tracker/', views.balance_tracker, name='balance_tracker'),\n    path('reports/', views.reports, name='reports'),\n    path('settings1/', views.settings1, name='settings1'),\n    path('settings2/', views.settings2, name='settings2'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "budget_project/budget_control/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'budget_control/home.html')\n\ndef balance_tracker(request):\n    return render(request, 'budget_control/balance_tracker.html')\n\ndef reports(request):\n    return render(request, 'budget_control/reports.html')\n\ndef settings1(request):\n    return render(request, 'budget_control/settings1.html')\n\ndef settings2(request):\n    return render(request, 'budget_control/settings2.html')\n\ndef help(request):\n    return render(request, 'budget_control/help.html')\n"}, {"file": "models.py", "path": "budget_project/budget_control/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Transaction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    date = models.DateField()\n    category = models.ForeignKey('Category', on_delete=models.CASCADE)\n    description = models.CharField(max_length=255)\n\nclass Category(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=50)\n"}, {"file": "forms.py", "path": "budget_project/budget_control/forms.py", "code": "from django import forms\nfrom .models import Transaction, Category\n\nclass TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = ['amount', 'date', 'category', 'description']\n\nclass CategoryForm(forms.ModelForm):\n    class Meta:\n        model = Category\n        fields = ['name']"}, {"file": "admin.py", "path": "budget_project/budget_control/admin.py", "code": "from django.contrib import admin\nfrom .models import Transaction, Category\n\nadmin.site.register(Transaction)\nadmin.site.register(Category)"}, {"file": "home.html", "path": "budget_project/budget_control/templates/budget_control/home.html", "code": "<div id=\"home-container\" class=\"main-container\">\n    <h1 id=\"home-title\" class=\"title\">Welcome to Budget Control</h1>\n    <p id=\"home-description\" class=\"description\">This app will help you to control your budget.</p>\n\n    <a href=\"{% url 'balance_tracker' %}\" id=\"balance-tracker-link\" class=\"navigation-link\">Go to Balance Tracker</a><br>\n    <a href=\"{% url 'reports' %}\" id=\"reports-link\" class=\"navigation-link\">Go to Reports</a><br>\n    <a href=\"{% url 'settings1' %}\" id=\"settings-link\" class=\"navigation-link\">Go to Settings</a><br>\n    <a href=\"{% url 'help' %}\" id=\"help-link\" class=\"navigation-link\">Go to Help</a>\n</div>"}, {"file": "balance_tracker.html", "path": "budget_project/budget_control/templates/budget_control/balance_tracker.html", "code": "<div id=\"balance-tracker-container\" class=\"main-container\">\n  <h1 id=\"balance-tracker-title\" class=\"title\">Balance Tracker</h1>\n</div>"}, {"file": "reports.html", "path": "budget_project/budget_control/templates/budget_control/reports.html", "code": "<div id=\"reports-container\" class=\"main-container\">\n  <h1 id=\"reports-title\" class=\"title\">Reports</h1>\n</div>"}, {"file": "settings1.html", "path": "budget_project/budget_control/templates/budget_control/settings1.html", "code": "<div id=\"settings-container\" class=\"main-container\">\n  <h1 id=\"settings-title\" class=\"title\">Settings 1</h1>\n</div>"}, {"file": "settings2.html", "path": "budget_project/budget_control/templates/budget_control/settings2.html", "code": "<div id=\"settings2-container\" class=\"main-container\">\n  <h1 id=\"settings2-title\" class=\"title\">Settings 2</h1>\n</div>"}, {"file": "help.html", "path": "budget_project/budget_control/templates/budget_control/help.html", "code": "<div id=\"help-container\" class=\"main-container\">\n  <h1 id=\"help-title\" class=\"title\">Help</h1>\n</div>"}, {"file": "asgi.py", "path": "budget_project/budget_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "budget_project/budget_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "budget_project/budget_project/__init__.py", "code": ""}, {"file": "apps.py", "path": "budget_project/budget_control/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BudgetControlConfig(AppConfig):\n    name = 'budget_control'"}, {"file": "__init__.py", "path": "budget_project/budget_control/__init__.py", "code": ""}], "8": [{"file": "manage.py", "path": "my_calendar_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "my_calendar_project/my_calendar_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'y#m2g(9u(2=i4@7@r$x9p32$z74i1o^q7)73w#1l-j=k#r9$'  # Replace with a strong, randomly generated key\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calendar_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'my_calendar_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'my_calendar_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "my_calendar_project/my_calendar_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calendar_app.urls')),\n]"}, {"file": "wsgi.py", "path": "my_calendar_project/my_calendar_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "my_calendar_project/my_calendar_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n\napplication = get_asgi_application()"}, {"file": "urls.py", "path": "my_calendar_project/calendar_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar, name='calendar'),\n    path('event/<int:event_id>/', views.event_detail, name='event_detail'),\n    path('event/add/', views.add_event, name='add_event'),\n    path('event/<int:event_id>/edit/', views.edit_event, name='edit_event'),\n    path('event/<int:event_id>/delete/', views.delete_event, name='delete_event'),\n    path('search/', views.search_events, name='search_events'),\n    path('all_events/', views.all_events, name='all_events'),\n    path('help/', views.help, name='help'),\n]\n"}, {"file": "views.py", "path": "my_calendar_project/calendar_app/views.py", "code": "from django.shortcuts import render, redirect, get_object_or_404\nfrom .models import Event\nfrom django.http import HttpResponseRedirect\nfrom datetime import date\n\ndef home(request):\n    today = date.today()\n    return render(request, 'calendar_app/home.html', {'today': today})\n\ndef calendar(request):\n    return render(request, 'calendar_app/calendar.html')\n\ndef add_event(request):\n    if request.method == 'POST':\n        # Process form data (this is a placeholder, you'll need actual form handling)\n        return redirect('home')\n    return render(request, 'calendar_app/add_event.html')\n\ndef event_detail(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)  # Use get_object_or_404 for safety\n    return render(request, 'calendar_app/event_detail.html', {'event': event})\n\ndef edit_event(request, event_id):\n    return render(request, 'calendar_app/edit_event.html')\n\ndef delete_event(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)\n    event.delete()\n    return redirect('calendar')\n\ndef search_events(request):\n    return render(request, 'calendar_app/search_events.html')\n\ndef all_events(request):\n    events = Event.objects.all()\n    return render(request, 'calendar_app/all_events.html', {'events': events})\n\ndef help(request):\n    return render(request, 'calendar_app/help.html')"}, {"file": "models.py", "path": "my_calendar_project/calendar_app/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=200)\n    date = models.DateField()\n    description = models.TextField()\n\n    def __str__(self):\n        return self.title"}, {"file": "admin.py", "path": "my_calendar_project/calendar_app/admin.py", "code": "from django.contrib import admin\nfrom .models import Event\n\nadmin.site.register(Event)"}, {"file": "apps.py", "path": "my_calendar_project/calendar_app/apps.py", "code": "from django.apps import AppConfig\n\nclass CalendarAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'calendar_app'"}, {"file": "home.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"home-container\" class=\"home-container\">\n        <p id=\"current-date\" class=\"current-date\">Current Date: {{ today }}</p>\n        <a id=\"calendar-link\" class=\"calendar-link\" href=\"{% url 'calendar' %}\">Go to Calendar</a> \n    </div>\n{% endblock %}"}, {"file": "calendar.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/calendar.html", "code": "{% extends 'base.html' %}\n{% block content %}\n <div id=\"calendar-container\" class=\"calendar-container\">\n    </div>\n{% endblock %}"}, {"file": "event_detail.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/event_detail.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"event-detail-container\" class=\"event-detail-container\">\n        <h2 id=\"event-title\" class=\"event-title\">{{ event.title }}</h2>\n        <p id=\"event-date\" class=\"event-date\">Date: {{ event.date }}</p>\n        <p id=\"event-description\" class=\"event-description\">{{ event.description }}</p>\n        <a id=\"edit-event-link\" class=\"edit-event-link\" href=\"{% url 'edit_event' event.id %}\">Edit</a>\n        <a id=\"delete-event-link\" class=\"delete-event-link\" href=\"{% url 'delete_event' event.id %}\">Delete</a>\n    </div>\n{% endblock %}"}, {"file": "add_event.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/add_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"add-event-container\" class=\"add-event-container\">\n    </div>\n{% endblock %}"}, {"file": "edit_event.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/edit_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"edit-event-container\" class=\"edit-event-container\">\n</div>\n{% endblock %}"}, {"file": "search_events.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/search_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"search-events-container\" class=\"search-events-container\">\n    </div>\n{% endblock %}"}, {"file": "all_events.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/all_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n  <div id=\"all-events-container\" class=\"all-events-container\">  \n    </div>\n{% endblock %}"}, {"file": "help.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/help.html", "code": "{% extends 'base.html' %}\n{% block content %}\n <div id=\"help-container\" class=\"help-container\">\n    </div>\n{% endblock %}"}, {"file": "base.html", "path": "my_calendar_project/calendar_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Calendar App</title>\n</head>\n<body>\n    <div id=\"content-wrapper\" class=\"content-wrapper\">\n      {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}], "9": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@q_jt268#i&x$2r5l35n6u4j0)4f(y16v8z!v&8i#d-b4p4%'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef features(request):\n    return render(request, 'features.html')\n\ndef pricing(request):\n    return render(request, 'pricing.html')\n\ndef about(request):\n    return render(request, 'about.html')\n\ndef support(request):\n    return render(request, 'support.html')"}, {"file": "home.html", "path": "myproject/myapp/templates/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"home-title\" class=\"title\">Home</h1>\n    <p id=\"home-overview\" class=\"overview\">Product Overview</p>\n{% endblock %}"}, {"file": "features.html", "path": "myproject/myapp/templates/features.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"features-title\" class=\"title\">Features</h1>\n    <ul id=\"features-list\" class=\"feature-list\">\n        <li id=\"feature-1\" class=\"feature\">Feature 1</li>\n        <li id=\"feature-2\" class=\"feature\">Feature 2</li>\n    </ul>\n{% endblock %}"}, {"file": "pricing.html", "path": "myproject/myapp/templates/pricing.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"pricing-title\" class=\"title\">Pricing</h1>\n    <p id=\"pricing-plans\" class=\"plans\">Pricing plans</p>\n    <form id=\"pricing-form\" class=\"pricing-form\" action=\"\" method=\"post\">\n        {% csrf_token %}\n        <button id=\"contact-sales-button\" type=\"submit\">Contact Sales</button>\n    </form>\n{% endblock %}"}, {"file": "about.html", "path": "myproject/myapp/templates/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"about-title\" class=\"title\">About Us</h1>\n    <p id=\"about-background\" class=\"background\">Company Background</p>\n{% endblock %}"}, {"file": "support.html", "path": "myproject/myapp/templates/support.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"support-title\" class=\"title\">Support</h1>\n    <h2 id=\"faq-title\" class=\"faq-title\">FAQ</h2>\n    <p id=\"faq-content\" class=\"faq-content\">Frequently Asked Questions</p>\n    <form  id=\"support-form\" class=\"support-form\" action=\"\" method=\"post\">\n        {% csrf_token %}\n        <button id=\"contact-support-button\" type=\"submit\">Contact Support</button>\n    </form>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/myapp/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>AI Chatbot</title>\n</head>\n<body>\n    <nav id=\"main-nav\" class=\"main-nav\">\n        <a id=\"home-link\" href=\"{% url 'home' %}\">Home</a>\n        <a id=\"features-link\" href=\"{% url 'features' %}\">Features</a>\n        <a id=\"pricing-link\" href=\"{% url 'pricing' %}\">Pricing</a>\n        <a id=\"about-link\" href=\"{% url 'about' %}\">About</a>\n        <a id=\"support-link\" href=\"{% url 'support' %}\">Support</a>\n    </nav>\n    <main id=\"main-content\" class=\"main-content\">\n        {% block content %}\n        {% endblock %}\n    </main>\n</body>\n</html>"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\n\nclass MyappConfig(AppConfig):\n    name = 'myapp'"}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "10": [{"file": "manage.py", "path": "calorie_tracker_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "calorie_tracker_project/calorie_tracker_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'YOUR_SECRET_KEY'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calorie_tracker',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'calorie_tracker_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'calorie_tracker_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "calorie_tracker_project/calorie_tracker_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calorie_tracker.urls')),\n]"}, {"file": "urls.py", "path": "calorie_tracker_project/calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('meal_log/', views.meal_log, name='meal_log'),\n    path('activity_log/', views.activity_log, name='activity_log'),\n    path('analysis/', views.analysis, name='analysis'),\n    path('settings/', views.settings, name='settings'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "asgi.py", "path": "calorie_tracker_project/calorie_tracker_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "calorie_tracker_project/calorie_tracker_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "views.py", "path": "calorie_tracker_project/calorie_tracker/views.py", "code": "from django.shortcuts import render\n\n# ... other imports\n\ndef home(request):\n    # ... logic for welcome message, signup, login\n    return render(request, 'calorie_tracker/home.html')\n\ndef dashboard(request):\n    # ... logic for displaying dashboard data\n    return render(request, 'calorie_tracker/dashboard.html')\n\ndef meal_log(request):\n    return render(request, 'calorie_tracker/meal_log.html')\n\ndef activity_log(request):\n    return render(request, 'calorie_tracker/activity_log.html')\n\ndef analysis(request):\n    return render(request, 'calorie_tracker/analysis.html')\n\ndef settings(request):\n    return render(request, 'calorie_tracker/settings.html')\n\ndef help(request):\n    return render(request, 'calorie_tracker/help.html')"}, {"file": "models.py", "path": "calorie_tracker_project/calorie_tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Meal(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=255)\n    calories = models.IntegerField()\n    date = models.DateField()\n\nclass Activity(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=255)\n    calories_burned = models.IntegerField()\n    date = models.DateField()"}, {"file": "forms.py", "path": "calorie_tracker_project/calorie_tracker/forms.py", "code": "from django import forms\nfrom .models import Meal, Activity\n\nclass MealForm(forms.ModelForm):\n    class Meta:\n        model = Meal\n        fields = ['name', 'calories', 'date']\n\nclass ActivityForm(forms.ModelForm):\n    class Meta:\n        model = Activity\n        fields = ['name', 'calories_burned', 'date']"}, {"file": "home.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/home.html", "code": "<div id=\"home-container\" class=\"home-container\">\n  <!-- Welcome Message -->\n  <h1 id=\"welcome-title\" class=\"welcome-title\">Welcome to Calorie Tracker</h1>\n\n  <!-- Sign Up/Login Section -->\n <div id=\"auth-section\" class=\"auth-section\">\n    <!-- ... your signup/login form code ... -->\n  </div>\n</div>"}, {"file": "dashboard.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/dashboard.html", "code": "<div id=\"dashboard-container\" class=\"dashboard-container\">\n  <!-- Calorie Summary -->\n  <div id=\"calorie-summary\" class=\"calorie-summary\"> \n      <!-- ... calorie information ... -->\n  </div>\n\n  <!-- Charts/Graphs Section -->\n  <div id=\"charts-section\" class=\"charts-section\">\n      <!-- ... charts and graphs ... -->\n  </div>\n</div>"}, {"file": "meal_log.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/meal_log.html", "code": "<div id=\"meal-log-container\" class=\"meal-log-container\">\n    <!-- Meal Log Form -->\n    <div id=\"meal-log-form\" class=\"meal-log-form\">\n        <!-- ... your meal log form code ... -->\n    </div>\n  </div>\n    <!-- Meal Entries (Search, Edit, Delete) -->\n<div id=\"meal-entries\" class=\"meal-entries\">\n    <!-- ... your meal entries with edit/delete buttons ... -->\n</div>"}, {"file": "activity_log.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/activity_log.html", "code": "<div id=\"activity-log-container\" class=\"activity-log-container\">\n    <!-- Activity Log Form -->\n <div id=\"activity-log-form\" class=\"activity-log-form\">\n    <!-- ... your activity log form code ... -->\n  </div>\n    <!-- Activity Entries (Search, Edit, Delete) -->\n<div id=\"activity-entries\" class=\"activity-entries\">\n        <!-- ... your activity entries with edit/delete buttons ... -->\n    </div>\n</div>"}, {"file": "analysis.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/analysis.html", "code": "<div id=\"analysis-container\" class=\"analysis-container\">\n  <!-- Charts and Graphs -->\n  <div id=\"charts\" class=\"charts\">\n      <!-- ... your charts and graphs elements ... -->\n  </div>\n</div>"}, {"file": "settings.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/settings.html", "code": "<div id=\"settings-container\" class=\"settings-container\">\n  <!-- User Settings -->\n  <div id=\"user-settings\" class=\"user-settings\">\n    <!-- ... your user settings elements ... -->\n  </div>\n</div>"}, {"file": "help.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/help.html", "code": "<div id=\"help-container\" class=\"help-container\">\n  <!-- Help Content -->\n  <div id=\"help-content\" class=\"help-content\">\n    <!-- ... your help content ... -->\n  </div>\n</div>"}], "12": [{"file": "manage.py", "path": "expense_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "expense_project/expense_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '+=u!p6h&h)99$w0ve778t3#0gpjc7n+u211+c#p$lqx^m127o'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'expense_management',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'expense_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'expense_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "expense_project/expense_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('expense_management.urls')),\n]"}, {"file": "urls.py", "path": "expense_project/expense_management/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('signup/', views.signup, name='signup'),\n    path('login/', views.login, name='login'),\n    path('employee/', views.employee_portal, name='employee_portal'),\n    path('submit_claim/', views.submit_claim, name='submit_claim'),\n    path('view_claim_status/', views.view_claim_status, name='view_claim_status'),\n    path('edit_claim/<int:claim_id>/', views.edit_claim, name='edit_claim'),\n    path('admin/', views.admin_portal, name='admin_portal'),\n    path('approve_claim/<int:claim_id>/', views.approve_claim, name='approve_claim'),\n    path('reject_claim/<int:claim_id>/', views.reject_claim, name='reject_claim'),\n    path('view_claim_details/<int:claim_id>/', views.view_claim_details, name='view_claim_details'),\n    path('search_filter_claims/', views.search_filter_claims, name='search_filter_claims'),\n    path('budget/', views.budget_control, name='budget_control'),\n    path('analyze_expense_balances/', views.analyze_expense_balances, name='analyze_expense_balances'),\n    path('generate_reports/', views.generate_reports, name='generate_reports'),\n    path('set_budget_limits/', views.set_budget_limits, name='set_budget_limits'),\n\n]"}, {"file": "asgi.py", "path": "expense_project/expense_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "expense_project/expense_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "views.py", "path": "expense_project/expense_management/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Claim\nfrom .forms import ClaimForm\n\n# Placeholder functions - replace with actual implementation\n\ndef home(request):\n    return render(request, 'home.html')\n\n# ... (Other view functions with similar structure)\n\ndef set_budget_limits(request):\n    return render(request, 'set_budget_limits.html') "}, {"file": "models.py", "path": "expense_project/expense_management/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Claim(models.Model):\n    employee = models.ForeignKey(User, on_delete=models.CASCADE)\n    # ... (Other claim fields like type, amount, description, status, etc.)"}, {"file": "forms.py", "path": "expense_project/expense_management/forms.py", "code": "from django import forms\nfrom .models import Claim\n\nclass ClaimForm(forms.ModelForm):\n    class Meta:\n        model = Claim\n        fields = ['# ... Claim fields']"}, {"file": "home.html", "path": "expense_project/expense_management/templates/home.html", "code": "<p id=\"welcome-message\" class=\"welcome\">Welcome!</p>\n<a id=\"signup-link\" class=\"button\" href=\"signup/\">Sign Up</a>\n<a id=\"login-link\" class=\"button\" href=\"login/\">Log In</a>"}, {"file": "employee_portal.html", "path": "expense_project/expense_management/templates/employee_portal.html", "code": "<h1 id=\"employee-portal-title\" class=\"title\">Employee Portal</h1>\n<a id=\"submit-claim-link\" class=\"button\" href=\"submit_claim/\">Submit Claim</a>\n<a id=\"view-claim-status-link\" class=\"button\" href=\"view_claim_status/\">View Claim Status</a>"}, {"file": "admin_portal.html", "path": "expense_project/expense_management/templates/admin_portal.html", "code": "<h1 id=\"admin-portal-title\" class=\"title\">Admin Portal</h1>\n<!-- Add links/forms for admin functionalities -->"}, {"file": "budget_control.html", "path": "expense_project/expense_management/templates/budget_control.html", "code": "<h1 id=\"budget-control-title\" class=\"title\">Budget Control</h1>\n<!-- Add links/forms for budget control functionalities -->"}], "13": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'YOUR_SECRET_KEY_HERE'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('customers/', views.customer_management, name='customer_management'),\n    path('customers/add/', views.add_customer, name='add_customer'),\n    path('customers/edit/<int:customer_id>/', views.edit_customer, name='edit_customer'),\n    path('customers/delete/<int:customer_id>/', views.delete_customer, name='delete_customer'),\n    path('customers/view/<int:customer_id>/', views.view_customer, name='view_customer'),\n    path('products/', views.product_management, name='product_management'),\n    path('products/add/', views.add_product, name='add_product'),\n    path('products/edit/<int:product_id>/', views.edit_product, name='edit_product'),\n    path('products/delete/<int:product_id>/', views.delete_product, name='delete_product'),\n    path('products/view/<int:product_id>/', views.view_product, name='view_product'),\n    path('purchases/', views.purchase_records, name='purchase_records'),\n    path('purchases/add/', views.add_purchase_record, name='add_purchase_record'),\n    path('purchases/edit/<int:purchase_id>/', views.edit_purchase_record, name='edit_purchase_record'),\n    path('purchases/delete/<int:purchase_id>/', views.delete_purchase_record, name='delete_purchase_record'),\n    path('purchases/view/<int:purchase_id>/', views.view_purchase_record, name='view_purchase_record'),\n    path('preferred_products/', views.preferred_products_management, name='preferred_products_management'),\n    path('preferred_products/add/', views.add_preferred_product, name='add_preferred_product'),\n    path('preferred_products/edit/<int:preferred_product_id>/', views.edit_preferred_product, name='edit_preferred_product'),\n    path('preferred_products/delete/<int:preferred_product_id>/', views.delete_preferred_product, name='delete_preferred_product'),\n    path('preferred_products/view/<int:customer_id>/', views.view_preferred_products, name='view_preferred_products'),\n    path('sales_analysis/', views.sales_analysis, name='sales_analysis'),\n    path('sales_analysis/report/', views.generate_sales_report, name='generate_sales_report'),\n    path('sales_analysis/trends/', views.analyze_sales_trends, name='analyze_sales_trends'),\n    path('sales_analysis/product_performance/', views.product_performance_analysis, name='product_performance_analysis'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'home.html')\n\n# Other view functions for each functionality\n# ... (e.g., customer_management, add_customer, etc.)"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\n# Create your models here.\nclass Customer(models.Model):\n    # ... fields for customer details\n\nclass Product(models.Model):\n    # ... fields for product details\n\nclass PurchaseRecord(models.Model):\n    # ... fields for purchase details\n\nclass PreferredProduct(models.Model):\n    # ... fields for preferred products"}, {"file": "forms.py", "path": "myproject/myapp/forms.py", "code": "from django import forms\nfrom .models import Customer, Product, PurchaseRecord, PreferredProduct\n\n# Create your forms here.\nclass CustomerForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = '__all__'\n\n# Other forms for Product, PurchaseRecord, PreferredProduct\n# ..."}, {"file": "home.html", "path": "myproject/myapp/templates/home.html", "code": "<h1 id=\"home-title\" class=\"title\">Welcome to the System</h1>\n<p id=\"home-overview\" class=\"overview\">Overview of system features...</p>"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    name = 'myapp'"}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": ""}], "15": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]\n"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]\n"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef helloworld(request):\n    return render(request, 'helloworld.html')\n"}, {"file": "home.html", "path": "myproject/myapp/templates/home.html", "code": "<a id=\"helloworld-link\" class=\"button\" href=\"{% url 'helloworld' %}\">Button to 'HelloWorld' page</a>"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/helloworld.html", "code": "<h1 id=\"helloworld-title\" class=\"title\">HelloWorld</h1>"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y9*u5+u6_#ve%u_ep$!02w8=0+1p-v(o%0m%g(yik-zdz%2+'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\n\nclass MyappConfig(AppConfig):\n    name = 'myapp'\n"}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\n# Create your models here.\n"}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here.\n"}], "18": [{"file": "main_menu.py", "path": "src/ui/main_menu.py", "code": "from help_support import show_help\n\n\ndef display_main_menu():\n    print(\"Welcome to the Game!\")\n    print(\"1. Start Game\")\n    print(\"2. Help\")\n    print(\"3. Exit\")\n\n    choice = input(\"Enter your choice: \")\n\n    if choice == '1':\n        from game_environment import start_game\n        start_game()\n    elif choice == '2':\n        show_help()\n        display_main_menu()\n    elif choice == '3':\n        print(\"Exiting the game...\")\n        exit()\n    else:\n        print(\"Invalid choice. Please try again.\")\n        display_main_menu()"}, {"file": "game_environment.py", "path": "src/game/game_environment.py", "code": "from game_logic import play_game\n\ndef start_game():\n    print(\"Starting the game...\")\n    play_game()"}, {"file": "game_logic.py", "path": "src/game/game_logic.py", "code": "def play_game():\n    print(\"Game logic here...\")"}, {"file": "help_support.py", "path": "src/ui/help_support.py", "code": "def show_help():\n    print(\"Showing help information...\")"}, {"file": "main.py", "path": "src/main.py", "code": "from ui.main_menu import display_main_menu\n\nif __name__ == \"__main__\":\n    display_main_menu()"}, {"file": "index.html", "path": "src/ui/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Game</title>\n</head>\n<body>\n    <div id=\"main-menu\" class=\"menu\">\n        <h1 id=\"game-title\" class=\"title\">Welcome to the Game!</h1>\n        <button id=\"start-game\" class=\"button\">Start Game</button>\n        <button id=\"help\" class=\"button\">Help</button>\n        <button id=\"exit\" class=\"button\">Exit</button>\n    </div>\n    <div id=\"game-area\" class=\"game\" style=\"display: none;\">\n      </div>\n    <div id=\"help-section\" class=\"help\" style=\"display: none;\">\n        <p id=\"help-text\">Help information goes here...</p>\n    </div>\n</body>\n</html>"}], "19": [{"file": "batch_program.py", "path": "somepath/somedir/batch_program.py", "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndef ReadDeathlistData(filepath='Deathlist.csv'):\n    \"\"\"Load and read data from the 'Deathlist.csv' file.\"\"\"\n    try:\n        df = pd.read_csv(filepath)\n        return df\n    except FileNotFoundError:\n        print(f\"Error: File not found at {filepath}\")\n        return None\n    except pd.errors.EmptyDataError:\n        print(f\"Error: Empty or invalid data in {filepath}\")\n        return None\n    except Exception as e:\n        print(f\"An unexpected error occurred: {e}\")\n        return None\n\ndef ValidateDataset(df):\n    \"\"\"Validate the dataset to ensure it contains the required data and format before processing.\"\"\"\n    # Check for necessary columns\n    required_columns = ['Name', 'Date of Death']  # Example columns\n    if not all(col in df.columns for col in required_columns):\n        raise ValueError(\"Dataset missing required columns: \" + \", \".join(set(required_columns) - set(df.columns)))\n\n    # Check data types  (Adapt as needed)\n    if not pd.api.types.is_datetime64_any_dtype(df['Date of Death']):\n        raise TypeError(\"Date of Death column must be datetime type.\")\n\ndef ProcessData(df):\n    \"\"\"Process the dataset to structure data appropriately for weekly analysis.\"\"\"\n    df['Date of Death'] = pd.to_datetime(df['Date of Death']) # Ensure datetime\n    df['Week'] = df['Date of Death'].dt.isocalendar().week # Extract week number\n    return df\n\ndef CalculateWeeklyDeaths(df):\n    \"\"\"Aggregate the data to calculate the number of deaths per week.\"\"\"\n    weekly_deaths = df.groupby('Week')['Name'].count()\n    return weekly_deaths\n\ndef GenerateHistogram(weekly_deaths):\n    \"\"\"Create a histogram depicting the weekly deaths calculated from the dataset.\"\"\"\n    plt.figure(figsize=(10, 6))\n    plt.hist(weekly_deaths, bins='auto', edgecolor='black')\n    plt.title('Weekly Death Distribution')\n    plt.xlabel('Number of Deaths')\n    plt.ylabel('Frequency')\n    plt.savefig('weekly_deaths_histogram.png') # Save to a file\n\ndef OutputHistogram():\n    \"\"\"Save the generated histogram to a file.\"\"\"\n    print(\"Histogram saved to weekly_deaths_histogram.png\")\n\nif __name__ == \"__main__\":\n    death_data = ReadDeathlistData()\n    if death_data is not None:\n        ValidateDataset(death_data)\n        processed_data = ProcessData(death_data)\n        weekly_deaths = CalculateWeeklyDeaths(processed_data)\n        GenerateHistogram(weekly_deaths)\n        OutputHistogram()\n"}, {"file": "Deathlist.csv", "path": "somepath/somedir/Deathlist.csv", "code": "Name,Date of Death\nJohn Doe,2024-01-05\nJane Smith,2024-01-12\nPeter Jones,2024-01-19\nMary Brown,2024-01-26\nDavid Wilson,2024-02-02\nSarah Taylor,2024-02-09\nMichael Anderson,2024-02-16\nJessica Thomas,2024-02-23\nKevin Jackson,2024-03-01\nAshley White,2024-03-08\nChristopher Harris,2024-03-15\nEmily Martin,2024-03-22\nDaniel Thompson,2024-03-29\nMadison Garcia,2024-04-05\nAndrew Martinez,2024-04-12\nElizabeth Robinson,2024-04-19\nJoseph Clark,2024-04-26\nAngela Lewis,2024-05-03\nWilliam Lee,2024-05-10\nLinda Walker,2024-05-17"}], "20": [{"file": "manage.py", "path": "myblog_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myblog_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myblog_project/myblog_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'YOUR_SECRET_KEY'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myblog',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myblog_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myblog_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myblog_project/myblog_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myblog.urls')),\n]"}, {"file": "wsgi.py", "path": "myblog_project/myblog_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myblog_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "urls.py", "path": "myblog_project/myblog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('blog/<int:post_id>/', views.blog_post, name='blog_post'),\n    path('about/', views.about, name='about'),\n    path('categories/', views.categories, name='categories'),\n    path('archive/', views.archive, name='archive'),\n]"}, {"file": "views.py", "path": "myblog_project/myblog/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'myblog/home.html')\n\ndef blog_post(request, post_id):\n    return render(request, 'myblog/blog_post.html', {'post_id': post_id})\n\ndef about(request):\n    return render(request, 'myblog/about.html')\n\ndef categories(request):\n    return render(request, 'myblog/categories.html')\n\ndef archive(request):\n    return render(request, 'myblog/archive.html')\n\n"}, {"file": "home.html", "path": "myblog_project/myblog/templates/myblog/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"home-title\" class=\"title\">Home</h1>\n{% endblock %}"}, {"file": "blog_post.html", "path": "myblog_project/myblog/templates/myblog/blog_post.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"blog-post-title\" class=\"title\">Blog Post {{ post_id }}</h1>\n{% endblock %}"}, {"file": "about.html", "path": "myblog_project/myblog/templates/myblog/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"about-title\" class=\"title\">About</h1>\n{% endblock %}"}, {"file": "categories.html", "path": "myblog_project/myblog/templates/myblog/categories.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"categories-title\" class=\"title\">Categories</h1>\n{% endblock %}"}, {"file": "archive.html", "path": "myblog_project/myblog/templates/myblog/archive.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"archive-title\" class=\"title\">Archive</h1>\n{% endblock %}"}, {"file": "models.py", "path": "myblog_project/myblog/models.py", "code": "from django.db import models\n\n# Create your models here.\nclass BlogPost(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    pub_date = models.DateTimeField('date published')\n\nclass Category(models.Model):\n    name = models.CharField(max_length=50)\n\nclass Comment(models.Model):\n    post = models.ForeignKey(BlogPost, on_delete=models.CASCADE)\n    author = models.CharField(max_length=100)\n    text = models.TextField()\n    created_date = models.DateTimeField(auto_now_add=True)\n"}, {"file": "base.html", "path": "myblog_project/myblog/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Blog</title>\n</head>\n<body>\n    {% block content %}\n    {% endblock %}\n</body>\n</html>"}]}