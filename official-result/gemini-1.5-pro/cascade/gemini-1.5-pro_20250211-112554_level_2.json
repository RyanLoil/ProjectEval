{"1": [{"file": "manage.py", "path": "bmi_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "bmi_project/bmi_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'bmi_calculator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "bmi_project/bmi_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('bmi_calculator.urls')),\n]"}, {"file": "urls.py", "path": "bmi_project/bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calculator/', views.calculator, name='calculator'),\n]"}, {"file": "views.py", "path": "bmi_project/bmi_calculator/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'bmi_calculator/home.html')\n\n\ndef calculator(request):\n    bmi = None\n    category = None\n\n    if request.method == 'POST':\n        height = float(request.POST.get('height'))\n        weight = float(request.POST.get('weight'))\n        unit = request.POST.get('unit')\n\n        if unit == 'metric':\n            bmi = weight / (height / 100)**2\n        elif unit == 'imperial':\n            bmi = (weight * 703) / (height**2)\n\n        if bmi < 18.5:\n            category = 'Underweight'\n        elif 18.5 <= bmi < 25:\n            category = 'Normal Weight'\n        elif 25 <= bmi < 30:\n            category = 'Overweight'\n        else:\n            category = 'Obese'\n\n    context = {'bmi': bmi, 'category': category}\n    return render(request, 'bmi_calculator/calculator.html', context)"}, {"file": "home.html", "path": "bmi_project/bmi_calculator/templates/bmi_calculator/home.html", "code": "<h1 id=\"home-title\" class=\"title\">BMI Calculator</h1>\n<p id=\"home-intro\" class=\"intro\">Introduction to BMI Calculator...</p>\n<a id=\"calculator-link\" class=\"link\" href=\"{% url 'calculator' %}\">Go to Calculator</a>"}, {"file": "calculator.html", "path": "bmi_project/bmi_calculator/templates/bmi_calculator/calculator.html", "code": "<form id=\"bmi-form\" class=\"form\" method=\"post\">\n    {% csrf_token %}\n    <label for=\"height\" id=\"height-label\" class=\"label\">Height:</label><input type=\"number\" name=\"height\" id=\"height-input\" class=\"input\" required><br>\n    <label for=\"weight\" id=\"weight-label\" class=\"label\">Weight:</label><input type=\"number\" name=\"weight\" id=\"weight-input\" class=\"input\" required><br>\n    <select name=\"unit\" id=\"unit-select\" class=\"select\" required>\n         <option value=\"metric\">Metric (cm, kg)</option>\n         <option value=\"imperial\">Imperial (inches, lbs)</option>\n     </select><br>\n    <button type=\"submit\" id=\"calculate-button\" class=\"button\">Calculate</button>\n    <button type=\"reset\" id=\"reset-button\" class=\"button\">Reset</button>\n</form>\n\n{% if bmi %}\n    <p id=\"bmi-result\" class=\"result\">Your BMI: {{ bmi }}</p>\n    <p id=\"category-result\" class=\"result\">Category: {{ category }}</p>\n{% endif %}"}, {"file": "models.py", "path": "bmi_project/bmi_calculator/models.py", "code": ""}, {"file": "apps.py", "path": "bmi_project/bmi_calculator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass BmiCalculatorConfig(AppConfig):\n    name = 'bmi_calculator'"}, {"file": "admin.py", "path": "bmi_project/bmi_calculator/admin.py", "code": ""}, {"file": "wsgi.py", "path": "bmi_project/bmi_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "bmi_project/bmi_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_asgi_application()"}, {"file": "__init__.py", "path": "bmi_project/bmi_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "bmi_project/bmi_calculator/__init__.py", "code": ""}], "2": [{"file": "manage.py", "path": "currency_converter_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "currency_converter_project/currency_converter_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'currency_converter',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'currency_converter_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'currency_converter_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "currency_converter_project/currency_converter_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('currency_converter.urls')),\n]"}, {"file": "urls.py", "path": "currency_converter_project/currency_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('currency_details/', views.currency_details, name='currency_details'),\n    path('settings/', views.settings, name='settings'),\n]"}, {"file": "views.py", "path": "currency_converter_project/currency_converter/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'currency_converter/home.html')\n\ndef currency_details(request):\n    return render(request, 'currency_converter/currency_details.html')\n\ndef settings(request):\n    return render(request, 'currency_converter/settings.html')"}, {"file": "home.html", "path": "currency_converter_project/currency_converter/templates/currency_converter/home.html", "code": "<form id=\"currency-converter-form\" class=\"converter-form\">\n    <label for=\"base-currency\" class=\"base-label\">Base Currency:</label>\n    <input type=\"text\" id=\"base-currency\" class=\"currency-input\" name=\"base-currency\">\n\n    <label for=\"target-currency\" class=\"target-label\">Target Currency:</label>\n    <input type=\"text\" id=\"target-currency\" class=\"currency-input\" name=\"target-currency\">\n\n    <label for=\"amount\" class=\"amount-label\">Amount:</label>\n    <input type=\"number\" id=\"amount\" class=\"amount-input\" name=\"amount\">\n\n    <button type=\"submit\" id=\"convert-button\" class=\"convert-button\">Convert</button>\n</form>\n\n<div id=\"conversion-result\" class=\"result-area\">\n    <!-- Conversion result will be displayed here -->\n</div>\n\n<div id=\"exchange-rate\" class=\"rate-area\">\n    <!-- Exchange rate will be displayed here -->\n</div>"}, {"file": "currency_details.html", "path": "currency_converter_project/currency_converter/templates/currency_converter/currency_details.html", "code": "<div id=\"currency-info\" class=\"info-area\">\n    <!-- Currency information will be displayed here -->\n</div>\n\n<div id=\"historical-rates\" class=\"rates-area\">\n    <!-- Historical exchange rates will be displayed here -->\n</div>"}, {"file": "settings.html", "path": "currency_converter_project/currency_converter/templates/currency_converter/settings.html", "code": "<form id=\"default-currency-form\" class=\"currency-form\">\n    <!-- Form for setting default currencies -->\n</form>\n\n<form id=\"update-frequency-form\" class=\"frequency-form\">\n    <!-- Form for setting update frequency -->\n</form>\n"}, {"file": "models.py", "path": "currency_converter_project/currency_converter/models.py", "code": "# Consider adding models for storing exchange rates or user preferences if needed."}, {"file": "forms.py", "path": "currency_converter_project/currency_converter/forms.py", "code": "# Consider adding forms for user input validation and handling."}, {"file": "asgi.py", "path": "currency_converter_project/currency_converter_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "currency_converter_project/currency_converter_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "currency_converter_project/currency_converter_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "currency_converter_project/currency_converter/__init__.py", "code": ""}], "4": [{"file": "manage.py", "path": "qr_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "qr_project/qr_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@m99u%^0n5o&8u(0w969i&8y2p*5!c1$338s03+l=0v-x@0'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qr_generator',\n    'qrcode',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qr_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qr_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "qr_project/qr_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qr_generator.urls')),\n]"}, {"file": "urls.py", "path": "qr_project/qr_generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.generate, name='generate'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "qr_project/qr_generator/views.py", "code": "from django.shortcuts import render\nimport qrcode\nfrom io import BytesIO\nfrom django.core.files.uploadedfile import InMemoryUploadedFile\nimport sys\nfrom PIL import Image\n\n\ndef home(request):\n    return render(request, 'qr_generator/home.html')\n\n\ndef generate(request):\n    if request.method == 'POST':\n        text = request.POST.get('text', '')\n        size = int(request.POST.get('size', 25))\n        border = int(request.POST.get('border', 4))\n        error_correction = request.POST.get('error_correction', 'M')\n        fill_color = request.POST.get('fill_color', '#000000')\n        back_color = request.POST.get('back_color', '#FFFFFF')\n\n        qr = qrcode.QRCode(\n            version=None,\n            error_correction=getattr(qrcode.constants, f'ERROR_CORRECT_{error_correction}'),\n            box_size=size,\n            border=border,\n        )\n        qr.add_data(text)\n        qr.make(fit=True)\n\n        img = qr.make_image(fill_color=fill_color, back_color=back_color)\n\n        buffer = BytesIO()\n        img.save(buffer, 'PNG')\n        buffer.seek(0)\n\n        img_file = InMemoryUploadedFile(\n            buffer,\n            None,\n            'qrcode.png',\n            'image/png',\n            sys.getsizeof(buffer),\n            None\n        )\n\n        context = {'qr_code': img_file}\n        return render(request, 'qr_generator/generate.html', context)\n    return render(request, 'qr_generator/generate.html')\n\ndef about(request):\n    return render(request, 'qr_generator/about.html')"}, {"file": "home.html", "path": "qr_project/qr_generator/templates/qr_generator/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"home-title\" class=\"title\">Welcome to the QR Code Generator</h1>\n        <p id=\"home-description\" class=\"description\">This website allows you to easily generate QR codes for any text or URL.</p>\n        <a id=\"generate-button\" href=\"{% url 'generate' %}\" class=\"btn btn-primary\">Generate QR Code</a>\n    </div>\n{% endblock %}"}, {"file": "generate.html", "path": "qr_project/qr_generator/templates/qr_generator/generate.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"generate-container\" class=\"container\">\n        <h1 id=\"generate-title\" class=\"title\">QR Code Generator</h1>\n\n        <form id=\"generate-form\" method=\"post\">\n            {% csrf_token %}\n            <label for=\"text\" id=\"text-label\">Text or URL:</label><br>\n            <input type=\"text\" id=\"text\" name=\"text\" class=\"form-control\"><br><br>\n\n            <label for=\"size\" id=\"size-label\">Box Size (Max 128):</label><br>\n            <input type=\"number\" id=\"size\" name=\"size\" min=\"1\" max=\"128\" value=\"25\" class=\"form-control\"><br><br>\n\n            <label for=\"border\" id=\"border-label\">Border Size (Max 10):</label><br>\n            <input type=\"number\" id=\"border\" name=\"border\" min=\"0\" max=\"10\" value=\"4\" class=\"form-control\"><br><br>\n\n            <label for=\"error_correction\" id=\"error-correction-label\">Error Correction:</label><br>\n            <select id=\"error_correction\" name=\"error_correction\" class=\"form-control\">\n                <option value=\"L\">Small</option>\n                <option value=\"M\" selected>Medium</option>\n                <option value=\"Q\">Large</option>\n                <option value=\"H\">Maximum</option>\n            </select><br><br>\n\n            <label for=\"fill_color\" id=\"fill-color-label\">Fill Color:</label><br>\n            <input type=\"color\" id=\"fill_color\" name=\"fill_color\" value=\"#000000\" class=\"form-control\"><br><br>\n\n            <label for=\"back_color\" id=\"back_color-label\">Back Color:</label><br>\n            <input type=\"color\" id=\"back_color\" name=\"back_color\" value=\"#FFFFFF\" class=\"form-control\"><br><br>\n\n            <input type=\"submit\" value=\"Generate\" id=\"submit-button\" class=\"btn btn-primary\">\n        </form>\n\n        <div id=\"qrcode-container\">\n        {% if qr_code %}\n        <img id=\"qrcode-image\" src=\"data:image/png;base64,{{ qr_code|encode:'base64' }}\" alt=\"QR Code\">\n        {% endif %}\n        </div>\n    </div>\n{% endblock %}"}, {"file": "about.html", "path": "qr_project/qr_generator/templates/qr_generator/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"about-container\" class=\"container\">\n        <h1 id=\"about-title\" class=\"title\">About Us</h1>\n        <p id=\"about-description\" class=\"description\">This is a simple QR code generator website.</p>\n\n        <h2 id=\"privacy-title\" class=\"subtitle\">Privacy Policy</h2>\n        <p id=\"privacy-description\" class=\"description\">Your privacy matters.</p>\n\n        <h2  id=\"terms-title\" class=\"subtitle\">Terms of Service</h2>\n        <p id=\"terms-description\" class=\"description\">Please use this website responsibly.</p>\n    </div>\n{% endblock %}"}, {"file": "base.html", "path": "qr_project/qr_generator/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title id=\"page-title\">QR Code Generator</title>\n</head>\n<body>\n    <nav id=\"main-nav\" class=\"navbar\">\n        <a id=\"home-link\" href=\"{% url 'home' %}\" class=\"nav-link\">Home</a>\n        <a id=\"about-link\" href=\"{% url 'about' %}\" class=\"nav-link\">About</a>\n    </nav>\n\n    <div class=\"main-content\">\n        {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "wsgi.py", "path": "qr_project/qr_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "asgi.py", "path": "qr_project/qr_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n\napplication = get_asgi_application()\n"}, {"file": "__init__.py", "path": "qr_project/qr_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "qr_project/qr_generator/__init__.py", "code": ""}, {"file": "admin.py", "path": "qr_project/qr_generator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "apps.py", "path": "qr_project/qr_generator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass QrGeneratorConfig(AppConfig):\n    name = 'qr_generator'\n"}, {"file": "models.py", "path": "qr_project/qr_generator/models.py", "code": "# Create your models here.\n"}, {"file": "tests.py", "path": "qr_project/qr_generator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here.\n"}], "5": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y(5t_i@-n=u)32^$t6s(y8r5d2@9#7$!=w_j#o-o7%c*h9d+'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('converter.urls')),\n]\n"}, {"file": "urls.py", "path": "myproject/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "views.py", "path": "myproject/converter/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'converter/home.html')\n\ndef convert(request):\n    return render(request, 'converter/convert.html')\n\ndef about(request):\n    return render(request, 'converter/about.html')\n"}, {"file": "home.html", "path": "myproject/converter/templates/converter/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"home-title\" class=\"title\">Welcome to the Markdown to HTML Converter</h1>\n    <p id=\"home-description\" class=\"description\">This tool allows you to easily convert Markdown text to HTML.</p>\n    <a id=\"convert-link\" class=\"link\" href=\"{% url 'convert' %}\">Convert</a>\n    <a id=\"about-link\" class=\"link\" href=\"{% url 'about' %}\">About</a>\n{% endblock %}"}, {"file": "convert.html", "path": "myproject/converter/templates/converter/convert.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"convert-title\" class=\"title\">Convert Markdown to HTML</h1>\n    <textarea id=\"markdownInput\" class=\"input\"></textarea>\n    <button id=\"convertButton\" class=\"button\">Convert</button>\n    <div id=\"htmlOutput\" class=\"output\"></div>\n{% endblock %}"}, {"file": "about.html", "path": "myproject/converter/templates/converter/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"about-title\" class=\"title\">About this Converter</h1>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/converter/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Markdown to HTML Converter</title>\n</head>\n<body id=\"main-body\">\n    <div id=\"content-container\" class=\"content\">\n      {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/converter/__init__.py", "code": ""}], "6": [{"file": "manage.py", "path": "todo_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "todo_project/todo_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'YOUR_SECRET_KEY'  # Replace with a strong, randomly generated key\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'todo_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'todo_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'todo_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "todo_project/todo_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('todo_app.urls')),\n]\n"}, {"file": "asgi.py", "path": "todo_project/todo_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "todo_project/todo_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "urls.py", "path": "todo_project/todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('lists/', views.todo_lists, name='todo_lists'),\n    path('lists/<int:list_id>/', views.todo_list, name='todo_list'),\n    path('tasks/create/<int:list_id>/', views.create_task, name='create_task'),\n    path('tasks/<int:task_id>/edit/', views.edit_task, name='edit_task'),\n    path('tasks/<int:task_id>/delete/', views.delete_task, name='delete_task'),\n    path('tasks/<int:task_id>/complete/', views.complete_task, name='complete_task'),\n    path('analysis/', views.analysis, name='analysis'),\n]\n"}, {"file": "views.py", "path": "todo_project/todo_app/views.py", "code": "from django.shortcuts import render, redirect, get_object_or_404\nfrom .models import TodoList, Task\n\n# ... (Other import statements and helper functions)\n\ndef home(request):\n    # ... (Implementation)\n    return render(request, 'todo_app/home.html')\n\ndef todo_lists(request):\n    # ... (Implementation)\n    return render(request, 'todo_app/todo_lists.html')\n\ndef todo_list(request, list_id):\n    # ... (Implementation)\n    return render(request, 'todo_app/todo_list.html')\n\ndef create_task(request, list_id):\n    # ... (Implementation)\n\ndef edit_task(request, task_id):\n    # ... (Implementation)\n\ndef delete_task(request, task_id):\n    # ... (Implementation)\n\ndef complete_task(request, task_id):\n    # ... (Implementation)\n\ndef analysis(request):\n    # ... (Implementation)\n    return render(request, 'todo_app/analysis.html')\n"}, {"file": "models.py", "path": "todo_project/todo_app/models.py", "code": "from django.db import models\n\nclass TodoList(models.Model):\n    name = models.CharField(max_length=200)\n\n    def __str__(self):\n        return self.name\n\nclass Task(models.Model):\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True)\n    completed = models.BooleanField(default=False)\n    todo_list = models.ForeignKey(TodoList, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title"}, {"file": "home.html", "path": "todo_project/todo_app/templates/todo_app/home.html", "code": "<div id=\"home-container\" class=\"home-container\">\n  <!-- Template code -->\n</div>"}, {"file": "todo_lists.html", "path": "todo_project/todo_app/templates/todo_app/todo_lists.html", "code": "<div id=\"todo-lists-container\" class=\"todo-lists-container\">\n  <!-- Template code -->\n</div>"}, {"file": "todo_list.html", "path": "todo_project/todo_app/templates/todo_app/todo_list.html", "code": "<div id=\"todo-list-container\" class=\"todo-list-container\">\n  <!-- Template code -->\n</div>"}, {"file": "analysis.html", "path": "todo_project/todo_app/templates/todo_app/analysis.html", "code": "<div id=\"analysis-container\" class=\"analysis-container\">\n    <!-- Template code -->\n</div>"}, {"file": "__init__.py", "path": "todo_project/todo_app/__init__.py", "code": ""}, {"file": "apps.py", "path": "todo_project/todo_app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass TodoAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'todo_app'\n"}, {"file": "admin.py", "path": "todo_project/todo_app/admin.py", "code": "from django.contrib import admin\nfrom .models import TodoList, Task # Import your models\n\nadmin.site.register(TodoList)\nadmin.site.register(Task)\n"}, {"file": "__init__.py", "path": "todo_project/todo_project/__init__.py", "code": ""}], "7": [{"file": "manage.py", "path": "my_budget_app/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_budget_app.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "my_budget_app/my_budget_app/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'budget_control',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'my_budget_app.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'my_budget_app.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "my_budget_app/my_budget_app/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('budget_control.urls')),\n]"}, {"file": "wsgi.py", "path": "my_budget_app/my_budget_app/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_budget_app.settings')\n\napplication = get_wsgi_application()"}, {"file": "urls.py", "path": "my_budget_app/budget_control/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('balance/', views.balance_tracker, name='balance_tracker'),\n    path('reports/', views.reports, name='reports'),\n    path('settings1/', views.settings1, name='settings1'),\n    path('settings2/', views.settings2, name='settings2'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "my_budget_app/budget_control/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'budget_control/home.html')\n\ndef balance_tracker(request):\n    return render(request, 'budget_control/balance_tracker.html')\n\ndef reports(request):\n    return render(request, 'budget_control/reports.html')\n\ndef settings1(request):\n    return render(request, 'budget_control/settings1.html')\n\ndef settings2(request):\n    return render(request, 'budget_control/settings2.html')\n\ndef help(request):\n    return render(request, 'budget_control/help.html')\n"}, {"file": "models.py", "path": "my_budget_app/budget_control/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Category(models.Model):\n    name = models.CharField(max_length=255)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n\nclass Transaction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    date = models.DateField()\n    category = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True)\n    description = models.TextField(blank=True)\n"}, {"file": "forms.py", "path": "my_budget_app/budget_control/forms.py", "code": "from django import forms\nfrom .models import Transaction, Category\n\nclass TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = ['amount', 'date', 'category', 'description']\n\nclass CategoryForm(forms.ModelForm):\n    class Meta:\n        model = Category\n        fields = ['name']"}, {"file": "admin.py", "path": "my_budget_app/budget_control/admin.py", "code": "from django.contrib import admin\nfrom .models import Transaction, Category\n\nadmin.site.register(Transaction)\nadmin.site.register(Category)"}, {"file": "home.html", "path": "my_budget_app/budget_control/templates/budget_control/home.html", "code": "<html>\n<head><title>Budget Control Home</title></head>\n<body>\n    <div id=\"home-container\" class=\"main-container\">\n        <h1 id=\"home-title\" class=\"title\">Welcome to Budget Control</h1>\n        <p id=\"home-description\" class=\"description\">Manage your finances effectively.</p>\n\n        <ul id=\"navigation-links\" class=\"link-list\">\n            <li><a id=\"balance-link\" href=\"{% url 'balance_tracker' %}\" class=\"nav-link\">Balance Tracker</a></li>\n            <li><a id=\"reports-link\" href=\"{% url 'reports' %}\" class=\"nav-link\">Reports</a></li>\n            <li><a id=\"settings-link\" href=\"{% url 'settings1' %}\" class=\"nav-link\">Settings</a></li>\n            <li><a id=\"help-link\" href=\"{% url 'help' %}\" class=\"nav-link\">Help</a></li>\n        </ul>\n    </div>\n</body>\n</html>"}, {"file": "balance_tracker.html", "path": "my_budget_app/budget_control/templates/budget_control/balance_tracker.html", "code": "<html>\n<head><title>Balance Tracker</title></head>\n<body>\n<div id=\"balance-container\" class=\"main-container\">\n    <h1 id=\"balance-title\">Balance Tracker</h1>\n    </div>\n</body>\n</html>"}, {"file": "reports.html", "path": "my_budget_app/budget_control/templates/budget_control/reports.html", "code": "<html>\n<head><title>Reports</title></head>\n<body>\n<div id=\"reports-container\" class=\"main-container\">\n        <h1 id=\"reports-title\">Reports</h1>\n    </div>\n</body>\n</html>"}, {"file": "settings1.html", "path": "my_budget_app/budget_control/templates/budget_control/settings1.html", "code": "<html>\n<head><title>Settings 1</title></head>\n<body>\n<div id=\"settings1-container\" class=\"main-container\">\n    <h1  id=\"settings1-title\">Settings 1</h1>\n    </div>\n</body>\n</html>"}, {"file": "settings2.html", "path": "my_budget_app/budget_control/templates/budget_control/settings2.html", "code": "<html>\n<head><title>Settings 2</title></head>\n<body>\n<div id=\"settings2-container\" class=\"main-container\">\n    <h1 id=\"settings2-title\">Settings 2</h1>\n    </div>\n</body>\n</html>"}, {"file": "help.html", "path": "my_budget_app/budget_control/templates/budget_control/help.html", "code": "<html>\n<head><title>Help</title></head>\n<body>\n    <div id=\"help-container\" class=\"main-container\">\n        <h1 id=\"help-title\">Help</h1>\n    </div>\n</body>\n</html>"}], "8": [{"file": "manage.py", "path": "my_calendar_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "my_calendar_project/my_calendar_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'YOUR_SECRET_KEY' # Replace with a strong, randomly generated key\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calendar_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'my_calendar_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'my_calendar_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "my_calendar_project/my_calendar_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calendar_app.urls')),\n]"}, {"file": "urls.py", "path": "my_calendar_project/calendar_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar, name='calendar'),\n    path('event/<int:event_id>/', views.event_detail, name='event_detail'),\n    path('event/add/', views.add_event, name='add_event'),\n    path('event/edit/<int:event_id>/', views.edit_event, name='edit_event'),\n    path('event/delete/<int:event_id>/', views.delete_event, name='delete_event'),\n    path('all_events/', views.all_events, name='all_events'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "my_calendar_project/calendar_app/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Event\nfrom django.utils import timezone\n\ndef home(request):\n    current_date = timezone.now().date()\n    return render(request, 'calendar_app/home.html', {'current_date': current_date})\n\ndef calendar(request):\n    return render(request, 'calendar_app/calendar.html')\n\ndef event_detail(request, event_id):\n    event = Event.objects.get(pk=event_id)\n    return render(request, 'calendar_app/event_detail.html', {'event': event})\n\ndef add_event(request):\n    if request.method == 'POST':\n        # Process form data and create a new event\n        return redirect('home')\n    return render(request, 'calendar_app/add_event.html')\n\ndef edit_event(request, event_id):\n    return render(request, 'calendar_app/edit_event.html')\n\ndef delete_event(request, event_id):\n    event = Event.objects.get(pk=event_id)\n    event.delete()\n    return redirect('home')\n\ndef all_events(request):\n    return render(request, 'calendar_app/all_events.html')\n\ndef help(request):\n    return render(request, 'calendar_app/help.html')"}, {"file": "models.py", "path": "my_calendar_project/calendar_app/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()\n\n    def __str__(self):\n        return self.title"}, {"file": "home.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <p id=\"current_date_p\" class=\"current-date\">Current Date: {{ current_date }}</p>\n    <a id=\"calendar_link\" class=\"calendar-link\" href=\"{% url 'calendar' %}\">View Calendar</a>\n{% endblock %}"}, {"file": "calendar.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/calendar.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"calendar_title\" class=\"calendar-title\">Calendar</h1>\n{% endblock %}"}, {"file": "event_detail.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/event_detail.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"event_detail_title\" class=\"event-detail-title\">Event Details</h1>\n{% endblock %}"}, {"file": "add_event.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/add_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"add_event_title\" class=\"add-event-title\">Add Event</h1>\n{% endblock %}"}, {"file": "edit_event.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/edit_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"edit_event_title\" class=\"edit-event-title\">Edit Event</h1>\n{% endblock %}"}, {"file": "all_events.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/all_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"all_events_title\" class=\"all-events-title\">All Events</h1>\n{% endblock %}"}, {"file": "help.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/help.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"help_title\" class=\"help-title\">Help</h1>\n{% endblock %}"}, {"file": "base.html", "path": "my_calendar_project/calendar_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title id=\"page_title\" class=\"page-title\">Calendar App</title>\n</head>\n<body id=\"main_body\" class=\"main-body\">\n{% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "asgi.py", "path": "my_calendar_project/my_calendar_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "my_calendar_project/my_calendar_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "my_calendar_project/my_calendar_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "my_calendar_project/calendar_app/__init__.py", "code": ""}, {"file": "apps.py", "path": "my_calendar_project/calendar_app/apps.py", "code": "from django.apps import AppConfig\n\nclass CalendarAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'calendar_app'"}, {"file": "admin.py", "path": "my_calendar_project/calendar_app/admin.py", "code": "from django.contrib import admin\nfrom .models import Event # Import your Event model\n\n# Register your models here.\nadmin.site.register(Event)"}], "9": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y&u2@j2$j1+69l+u)o7p5d^4b$w(p@29@m80ph4m6kda^t_66'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'myapp/home.html')\n\ndef features(request):\n    return render(request, 'myapp/features.html')\n\ndef pricing(request):\n    return render(request, 'myapp/pricing.html')\n\ndef about(request):\n    return render(request, 'myapp/about.html')\n\ndef support(request):\n    return render(request, 'myapp/support.html')"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"home-title\" class=\"title\">Home</h1>\n    <p id=\"home-overview\" class=\"overview\">Product Overview Content</p>\n{% endblock %}"}, {"file": "features.html", "path": "myproject/myapp/templates/myapp/features.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"features-title\" class=\"title\">Features</h1>\n    <ul id=\"features-list\" class=\"features-list\">\n        <li id=\"feature-1\" class=\"feature\">Feature 1</li>\n        <li id=\"feature-2\" class=\"feature\">Feature 2</li>\n        <li id=\"feature-3\" class=\"feature\">Feature 3</li>\n    </ul>\n{% endblock %}"}, {"file": "pricing.html", "path": "myproject/myapp/templates/myapp/pricing.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"pricing-title\" class=\"title\">Pricing</h1>\n    <p id=\"pricing-plans\" class=\"pricing-plans\">Pricing Plans Content</p>\n    <p id=\"contact-sales\" class=\"contact-sales\">Contact Sales Form (Optional)</p>\n{% endblock %}"}, {"file": "about.html", "path": "myproject/myapp/templates/myapp/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"about-title\" class=\"title\">About Us</h1>\n    <p id=\"company-background\" class=\"company-background\">Company Background Content</p>\n{% endblock %}"}, {"file": "support.html", "path": "myproject/myapp/templates/myapp/support.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1 id=\"support-title\" class=\"title\">Support</h1>\n    <h2 id=\"faq-title\" class=\"faq-title\">FAQ</h2>\n    <p id=\"faq-content\" class=\"faq-content\">Frequently Asked Questions Content</p>\n    <p id=\"support-form\" class=\"support-form\">Support Message Form (Optional)</p>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/myapp/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My AI Chatbot</title>\n</head>\n<body>\n    <nav id=\"main-nav\" class=\"main-nav\">\n        <a id=\"home-link\" class=\"nav-link\" href=\"{% url 'home' %}\">Home</a>\n        <a id=\"features-link\" class=\"nav-link\" href=\"{% url 'features' %}\">Features</a>\n        <a id=\"pricing-link\" class=\"nav-link\" href=\"{% url 'pricing' %}\">Pricing</a>\n        <a id=\"about-link\" class=\"nav-link\" href=\"{% url 'about' %}\">About</a>\n        <a id=\"support-link\" class=\"nav-link\" href=\"{% url 'support' %}\">Support</a>\n    </nav>\n    <main id=\"main-content\" class=\"main-content\">\n        {% block content %}{% endblock %}\n    </main>\n</body>\n</html>"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}], "11": [{"file": "settings.py", "path": "testproject/testproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY = 'your_secret_key'\nDEBUG = True\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'testapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'testproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'testproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},\n]\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "testproject/testproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('testapp.urls')),\n]\n"}, {"file": "views.py", "path": "testapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom django.views.decorators.csrf import csrf_exempt\nimport json\n\n@csrf_exempt\ndef home(request):\n    if request.method == 'POST':\n        if 'file_upload' in request.FILES:\n            file_data = request.FILES['file_upload'].read().decode('utf-8')\n            try:\n                json_data = json.loads(file_data)\n                # Process the JSON data\n                return HttpResponse('File uploaded and processed successfully')\n            except json.JSONDecodeError:\n                return HttpResponse('Invalid JSON file')\n    return render(request, 'testapp/home.html')\n\n\ndef about(request):\n    return render(request, 'testapp/about.html')\n"}, {"file": "urls.py", "path": "testapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "home.html", "path": "testapp/templates/testapp/home.html", "code": "<h1 id=\"page-title\" class=\"title\">Welcome to the Test Code Review Tool</h1>\n\n<form id=\"upload-form\" class=\"upload-form\" method=\"post\" enctype=\"multipart/form-data\">\n    {% csrf_token %}\n    <label for=\"file_upload\" id=\"file-upload-label\" class=\"file-upload-label\">Import JSON File:</label>\n    <input type=\"file\" name=\"file_upload\" id=\"file_upload\" class=\"file-upload\" accept=\".json\">\n    <br><br>\n    <label for=\"status\" id=\"status-label\" class=\"status-label\">Status:</label>\n    <select name=\"status\" id=\"status\" class=\"status\">\n        <option value=\"select\">Select</option>\n        <option value=\"pass\">Pass</option>\n        <option value=\"fail\">Fail</option>\n    </select>\n    <br><br>\n    <label for=\"notes\" id=\"notes-label\" class=\"notes-label\">Reviewing Notes:</label>\n    <textarea name=\"notes\" id=\"notes\" class=\"notes\"></textarea>\n    <br><br>\n    <input type=\"submit\" id=\"submit-button\" class=\"submit-button\" value=\"Submit\">\n</form>"}, {"file": "about.html", "path": "testapp/templates/testapp/about.html", "code": "<h1 id=\"about-title\" class=\"title\">About This Website</h1>\n<p id=\"about-text\" class=\"about-text\">This website allows you to review test code and provide feedback.</p>"}, {"file": "apps.py", "path": "testapp/apps.py", "code": "from django.apps import AppConfig\n\nclass TestappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'testapp'"}, {"file": "admin.py", "path": "testapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "testapp/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "testapp/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "asgi.py", "path": "testproject/testproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "testproject/testproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "manage.py", "path": "testproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "__init__.py", "path": "testproject/testproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "testapp/__init__.py", "code": ""}], "13": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'YOUR_SECRET_KEY'  # Replace with a strong, randomly generated key\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    # ... (add or remove validators as needed)\n]\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('app.urls')),\n]"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "urls.py", "path": "myproject/app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('customer/', views.customer_management, name='customer_management'),\n    path('customer/add/', views.add_customer, name='add_customer'),\n    path('customer/edit/<int:customer_id>/', views.edit_customer, name='edit_customer'),\n    path('customer/delete/<int:customer_id>/', views.delete_customer, name='delete_customer'),\n    path('customer/<int:customer_id>/', views.view_customer, name='view_customer'),\n    path('product/', views.product_management, name='product_management'),\n    path('product/add/', views.add_product, name='add_product'),\n    path('product/edit/<int:product_id>/', views.edit_product, name='edit_product'),\n    path('product/delete/<int:product_id>/', views.delete_product, name='delete_product'),\n    path('product/<int:product_id>/', views.view_product, name='view_product'),\n    path('purchase/', views.purchase_records, name='purchase_records'),\n    path('purchase/add/', views.add_purchase_record, name='add_purchase_record'),\n    path('purchase/edit/<int:purchase_id>/', views.edit_purchase_record, name='edit_purchase_record'),\n    path('purchase/delete/<int:purchase_id>/', views.delete_purchase_record, name='delete_purchase_record'),\n    path('purchase/<int:purchase_id>/', views.view_purchase_record, name='view_purchase_record'),\n    path('preferred_product/', views.preferred_products, name='preferred_products'),\n    path('preferred_product/add/', views.add_preferred_product, name='add_preferred_product'),\n    path('preferred_product/edit/<int:preferred_product_id>/', views.edit_preferred_product, name='edit_preferred_product'),\n    path('preferred_product/delete/<int:preferred_product_id>/', views.delete_preferred_product, name='delete_preferred_product'),\n    path('preferred_product/<int:customer_id>/', views.view_preferred_products, name='view_preferred_products'),\n    path('sales_analysis/', views.sales_analysis, name='sales_analysis'),\n    # ... other paths for sales analysis features\n]"}, {"file": "views.py", "path": "myproject/app/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'home.html')\n\n# Other view functions for each functionality\n# Example:\ndef add_customer(request):\n    # Logic for adding a customer\n    return render(request, 'add_customer.html')"}, {"file": "models.py", "path": "myproject/app/models.py", "code": "from django.db import models\n\n# Create your models here.\nclass Customer(models.Model):\n    # Customer fields\n    pass\n\nclass Product(models.Model):\n    # Product fields\n    pass\n\nclass PurchaseRecord(models.Model):\n    # Purchase record fields\n    pass\n\nclass PreferredProduct(models.Model):\n    # Preferred Product fields\n    pass"}, {"file": "forms.py", "path": "myproject/app/forms.py", "code": "from django import forms\nfrom .models import Customer, Product, PurchaseRecord, PreferredProduct\n\n# Create your forms here.\nclass CustomerForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = '__all__'\n\n# Forms for other models"}, {"file": "home.html", "path": "myproject/app/templates/home.html", "code": "<!-- Home page content -->\n<div id=\"home-container\" class=\"home-container\">\n    <h1>Welcome to the CRM</h1>\n</div>"}, {"file": "add_customer.html", "path": "myproject/app/templates/add_customer.html", "code": "<!-- Add customer form -->\n<div id=\"add-customer-container\" class=\"add-customer-container\">\n    <h2>Add New Customer</h2>\n</div>"}, {"file": "admin.py", "path": "myproject/app/admin.py", "code": "from django.contrib import admin\nfrom .models import *\n\nadmin.site.register(Customer)\nadmin.site.register(Product)\nadmin.site.register(PurchaseRecord)\nadmin.site.register(PreferredProduct)"}, {"file": "__init__.py", "path": "myproject/app/__init__.py", "code": ""}], "14": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = '8b+j)-p@8$k*9zrz76=c9d!6y5h-m#j7i=z@2(e0t+_6i#j)3'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'helloworldapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('helloworldapp.urls')),\n]"}, {"file": "views.py", "path": "myproject/helloworldapp/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'helloworldapp/index.html')"}, {"file": "urls.py", "path": "myproject/helloworldapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}, {"file": "index.html", "path": "myproject/helloworldapp/templates/helloworldapp/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\" id=\"main-html\" class=\"main-html\">\n<head id=\"main-head\" class=\"main-head\">\n    <title id=\"main-title\" class=\"main-title\">Hello World</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            margin: 0;\n            font-family: sans-serif;\n        }\n        h1 {\n            color: #333;\n        }\n    </style>\n</head>\n<body id=\"main-body\" class=\"main-body\">\n    <h1 id=\"main-header\" class=\"main-header\">Hello World</h1>\n</body>\n</html>"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/helloworldapp/__init__.py", "code": ""}, {"file": "apps.py", "path": "myproject/helloworldapp/apps.py", "code": "from django.apps import AppConfig\n\nclass HelloworldappConfig(AppConfig):\n    name = 'helloworldapp'"}, {"file": "admin.py", "path": "myproject/helloworldapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "myproject/helloworldapp/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "myproject/helloworldapp/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "15": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = '=-_e9%o8+z!p(0k0f-d^y+i7*z0ao66n%0#b%f*s_775w1g(v'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myproject',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myproject/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef helloworld(request):\n    return render(request, 'helloworld.html')"}, {"file": "home.html", "path": "myproject/myproject/templates/home.html", "code": "<a id=\"helloworld-link\" class=\"home-link\" href=\"{% url 'helloworld' %}\">Button to 'HelloWorld' page</a>"}, {"file": "helloworld.html", "path": "myproject/myproject/templates/helloworld.html", "code": "<h1 id=\"helloworld-title\" class=\"helloworld-title\">HelloWorld</h1>"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "apps.py", "path": "myproject/myproject/apps.py", "code": "from django.apps import AppConfig\n\n\nclass MyprojectConfig(AppConfig):\n    name = 'myproject'"}, {"file": "__init__.py", "path": "myproject/__init__.py", "code": ""}], "16": [{"file": "input_validation.py", "path": "src/input_validation.py", "code": "# Input File Validation Functions\n\nimport pandas as pd\n\nINPUT_FILE = 'Spring Semester Subjects.xlsx'\nEXPECTED_HEADERS = ['#', 'Name', 'Weekday', 'Time']\nALLOWED_TIMES = ['First period', 'Second period', 'Third period', 'Fourth period']\n\ndef CheckFileExistence():\n    import os\n    return os.path.exists(INPUT_FILE)\n\ndef ValidateHeaders(df):\n    if list(df.columns) != EXPECTED_HEADERS:\n        raise ValueError(\"Headers mismatch. Expected: \"+ str(EXPECTED_HEADERS) + \", Found:\" + str(list(df.columns)))\n\ndef ValidateTimeColumn(df):\n    if not all(df['Time'].isin(ALLOWED_TIMES)):\n        raise ValueError(\"Invalid values in 'Time' column.\")\n\ndef ValidateDataIntegrity(df):\n    if df.duplicated(subset=['Name', 'Weekday', 'Time']).any():\n        raise ValueError(\"Duplicate entries found.\")\n\ndef ValidateNullValue(df):\n    if df.isnull().values.any():\n        raise ValueError(\"Null values found.\")"}, {"file": "data_transformation.py", "path": "src/data_transformation.py", "code": "# Data Transformation Functions\n\nimport pandas as pd\n\ndef TransformToTwoDimensionTable(df):\n    table = pd.pivot_table(df, values='Name', index=['Weekday', 'Time'], columns='#', aggfunc='first').reset_index()\n    return table\n\ndef DataMapping(table):\n    # Placeholder for more complex mapping if needed\n    return table"}, {"file": "output_creation.py", "path": "src/output_creation.py", "code": "# Output File Creation Functions\n\nimport pandas as pd\n\nOUTPUT_FILE = 'output.xlsx'\n\ndef CreateOutputExcelFile():\n    return OUTPUT_FILE\n\ndef SaveTableToExcel(table, output_file):\n    table.to_excel(output_file, index=False)"}, {"file": "main.py", "path": "src/main.py", "code": "# Main script\n\nfrom input_validation import *\nfrom data_transformation import *\nfrom output_creation import *\n\nif __name__ == \"__main__\":\n    if CheckFileExistence():\n        try:\n            df = pd.read_excel(INPUT_FILE)\n            ValidateHeaders(df)\n            ValidateTimeColumn(df)\n            ValidateDataIntegrity(df)\n            ValidateNullValue(df)\n\n            two_dim_table = TransformToTwoDimensionTable(df)\n            DataMapping(two_dim_table)\n\n            output_file = CreateOutputExcelFile()\n            SaveTableToExcel(two_dim_table, output_file)\n            print(f\"Output saved to {output_file}\")\n\n        except Exception as e:\n            print(f\"Error: {e}\")\n    else:\n        print(f\"Error: {INPUT_FILE} not found.\")"}, {"file": "Spring Semester Subjects.xlsx", "path": "src/Spring Semester Subjects.xlsx", "code": ""}], "17": [{"file": "DataPreparation.py", "path": "src/DataPreparation.py", "code": "import pandas as pd\n\nclass DataPreparation:\n    def __init__(self, filepath):\n        self.filepath = filepath\n        self.df = None\n\n    def ReadDataset(self):\n        try:\n            self.df = pd.read_excel(self.filepath)\n        except FileNotFoundError:\n            raise FileNotFoundError(f\"File not found: {self.filepath}\")\n\n    def LagDependentVariable(self):\n        if self.df is None:\n            raise ValueError(\"Dataset not loaded. Call ReadDataset() first.\")\n        self.df['result_lagged'] = self.df['result'].shift(-1)\n        self.df.dropna(subset=['result_lagged'], inplace=True)\n\n    def PrepareIndependentVariables(self):\n        if self.df is None:\n            raise ValueError(\"Dataset not loaded. Call ReadDataset() first.\")\n        if self.df.isnull().values.any():\n            raise ValueError(\"Null values found in the dataset.\")\n        if self.df.empty:\n            raise ValueError(\"Dataset is empty.\")\n        self.X = self.df.drop(columns=['result', 'result_lagged']) \n        self.y = self.df['result_lagged']"}, {"file": "ModelCreation.py", "path": "src/ModelCreation.py", "code": "import statsmodels.api as sm\n\nclass ModelCreation:\n    def __init__(self, X, y):\n        self.X = X\n        self.y = y\n        self.model = None\n        self.summary = None\n\n    def CreateLogisticModel(self):\n        self.X = sm.add_constant(self.X) \n        self.model = sm.Logit(self.y, self.X).fit()\n\n    def GenerateModelSummary(self):\n        if self.model is None:\n            raise ValueError(\"Model not created. Call CreateLogisticModel() first.\")\n        self.summary = self.model.summary()"}, {"file": "Output.py", "path": "src/Output.py", "code": "import pandas as pd\n\nclass Output:\n    def __init__(self, summary):\n        self.summary = summary\n\n    def WriteSummary(self, output_filepath):\n        summary_df = pd.DataFrame(self.summary.tables[1].data)\n        summary_df.columns = summary_df.iloc[0]\n        summary_df = summary_df[1:]\n\n        with pd.ExcelWriter(output_filepath, engine='xlsxwriter') as writer:\n            summary_df.to_excel(writer, sheet_name='ModelSummary', index=False)"}, {"file": "main.py", "path": "src/main.py", "code": "from DataPreparation import DataPreparation\nfrom ModelCreation import ModelCreation\nfrom Output import Output\n\nfilepath = 'Gamedata.xlsx'\noutput_filepath = 'Logistic.xlsx'\n\ntry:\n    data_prep = DataPreparation(filepath)\n    data_prep.ReadDataset()\n    data_prep.LagDependentVariable()\n    data_prep.PrepareIndependentVariables()\n\n    model_creation = ModelCreation(data_prep.X, data_prep.y)\n    model_creation.CreateLogisticModel()\n    model_creation.GenerateModelSummary()\n\n    output = Output(model_creation.summary)\n    output.WriteSummary(output_filepath)\n    print(f\"Model summary saved to {output_filepath}\")\n\nexcept Exception as e:\n    print(f\"An error occurred: {e}\")"}, {"file": "Gamedata.xlsx", "path": "src/Gamedata.xlsx", "code": ""}, {"file": "requirements.txt", "path": "src/requirements.txt", "code": "pandas\nstatsmodels\nopenpyxl\nXlsxWriter"}]}