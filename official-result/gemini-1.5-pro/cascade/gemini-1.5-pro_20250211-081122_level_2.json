{"1": [{"file": "manage.py", "path": "bmi_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "bmi_project/bmi_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y#i&707_x75@r2t+7q9+63-f%3_x@q%596+65w5u*u%ihh3u)'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'bmi_calculator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "bmi_project/bmi_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('bmi_calculator.urls')),\n]"}, {"file": "urls.py", "path": "bmi_project/bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.HomePageView.as_view(), name='home'),\n    path('calculator/', views.BMICalculatorView.as_view(), name='calculator'),\n]"}, {"file": "views.py", "path": "bmi_project/bmi_calculator/views.py", "code": "from django.shortcuts import render\nfrom django.views.generic import TemplateView, FormView\nfrom .forms import BMIForm\n\nclass HomePageView(TemplateView):\n    template_name = 'home.html'\n\nclass BMICalculatorView(FormView):\n    template_name = 'calculator.html'\n    form_class = BMIForm\n\n    def form_valid(self, form):n        height = form.cleaned_data['height']\n        weight = form.cleaned_data['weight']\n        bmi = weight / (height * height)\n\n        if bmi < 18.5:\n            bmi_category = 'Underweight'\n        elif bmi < 25:\n            bmi_category = 'Normal weight'\n        elif bmi < 30:\n            bmi_category = 'Overweight'\n        else:\n            bmi_category = 'Obese'\n\n        context = self.get_context_data(form=form, bmi=bmi, bmi_category=bmi_category)\n        return self.render_to_response(context)"}, {"file": "home.html", "path": "bmi_project/bmi_calculator/templates/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"home-container\" class=\"home-container\">\n    <h1 id=\"home-title\" class=\"home-title\">Welcome to the BMI Calculator</h1>\n    <p id=\"home-intro\" class=\"home-intro\">Introduction to BMI and how it works...</p>\n    <a id=\"calculator-link\" class=\"calculator-link\" href=\"{% url 'calculator' %}\">Go to Calculator</a>\n</div>\n{% endblock %}"}, {"file": "calculator.html", "path": "bmi_project/bmi_calculator/templates/calculator.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n<div id=\"calculator-container\" class=\"calculator-container\">\n    <h1 id=\"calculator-title\" class=\"calculator-title\">BMI Calculator</h1>\n    <form id=\"bmi-form\" class=\"bmi-form\" method=\"post\">\n        {% csrf_token %}\n        <label for=\"height\" id=\"height-label\" class=\"height-label\">Height (m):</label><br>\n        <input type=\"number\" step=\"0.01\" name=\"height\" id=\"height-input\" class=\"height-input\" required><br>\n        <label for=\"weight\" id=\"weight-label\" class=\"weight-label\">Weight (kg):</label><br>\n        <input type=\"number\" step=\"0.01\" name=\"weight\" id=\"weight-input\" class=\"weight-input\" required><br><br>\n        <input type=\"submit\" id=\"submit-button\" class=\"submit-button\" value=\"Calculate\">\n    </form>\n\n    {% if bmi %}\n        <div id=\"results-container\" class=\"results-container\">\n            <p id=\"bmi-result\" class=\"bmi-result\">Your BMI: {{ bmi }}</p>\n            <p id=\"bmi-category-result\" class=\"bmi-category-result\">Your BMI Category: {{ bmi_category }}</p>\n        </div>\n    {% endif %}\n</div>\n{% endblock %}"}, {"file": "base.html", "path": "bmi_project/bmi_calculator/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title id=\"page-title\" class=\"page-title\">BMI Calculator</title>\n</head>\n<body id=\"page-body\" class=\"page-body\">\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "forms.py", "path": "bmi_project/bmi_calculator/forms.py", "code": "from django import forms\n\nclass BMIForm(forms.Form):\n    height = forms.FloatField(label='Height (m)', required=True)\n    weight = forms.FloatField(label='Weight (kg)', required=True)"}, {"file": "asgi.py", "path": "bmi_project/bmi_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "bmi_project/bmi_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "bmi_project/bmi_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "bmi_project/bmi_calculator/__init__.py", "code": ""}, {"file": "admin.py", "path": "bmi_project/bmi_calculator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "apps.py", "path": "bmi_project/bmi_calculator/apps.py", "code": "from django.apps import AppConfig\n\nclass BmiCalculatorConfig(AppConfig):\n    name = 'bmi_calculator'"}, {"file": "models.py", "path": "bmi_project/bmi_calculator/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "bmi_project/bmi_calculator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "2": [{"file": "manage.py", "path": "currency_converter_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "currency_converter_project/currency_converter_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y#4h+801&p@k-t9)y4d=1b%(7h^6h!b3=5@6)t+p022)2#w@q'\n\n# SECURITY WARNING: don't run with DEBUG turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'currency_converter',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'currency_converter_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'currency_converter_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n"}, {"file": "urls.py", "path": "currency_converter_project/currency_converter_project/urls.py", "code": "from django.urls import path, include\n\nurlpatterns = [\n    path('', include('currency_converter.urls')),\n]"}, {"file": "urls.py", "path": "currency_converter_project/currency_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('currency_details/', views.currency_details, name='currency_details'),\n    path('settings/', views.settings, name='settings'),\n]"}, {"file": "views.py", "path": "currency_converter_project/currency_converter/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    context = {}\n    return render(request, 'currency_converter/home.html', context)\n\ndef currency_details(request):\n    context = {}\n    return render(request, 'currency_converter/currency_details.html', context)\n\ndef settings(request):\n    context = {}\n    return render(request, 'currency_converter/settings.html', context)"}, {"file": "home.html", "path": "currency_converter_project/currency_converter/templates/currency_converter/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id=\"converter-form\" class=\"converter-form\">\n        <label for=\"base-currency\" class=\"base-currency-label\">Base Currency:</label>\n        <select id=\"base-currency\" class=\"base-currency-select\"></select>\n\n        <label for=\"target-currency\" class=\"target-currency-label\">Target Currency:</label>\n        <select id=\"target-currency\" class=\"target-currency-select\"></select>\n\n        <label for=\"amount\" class=\"amount-label\">Amount:</label>\n        <input type=\"number\" id=\"amount\" class=\"amount-input\">\n\n        <button id=\"convert-button\" class=\"convert-button\">Convert</button>\n    </div>\n\n    <div id=\"conversion-result\" class=\"conversion-result\"></div>\n\n    <div id=\"exchange-rate-info\" class=\"exchange-rate-info\"></div>\n{% endblock %}"}, {"file": "currency_details.html", "path": "currency_converter_project/currency_converter/templates/currency_converter/currency_details.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id=\"currency-information\" class=\"currency-information\"></div>\n    <div id=\"historical-rates\" class=\"historical-rates\"></div>\n{% endblock %}"}, {"file": "settings.html", "path": "currency_converter_project/currency_converter/templates/currency_converter/settings.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id=\"default-currencies\" class=\"default-currencies\">\n      <label for=\"default-base\" class=\"default-base-label\">Default Base Currency:</label>\n      <select id=\"default-base\" class=\"default-base\"></select>\n\n        <label for=\"default-target\" class=\"default-target-label\">Default Target Currency:</label>\n        <select id=\"default-target\" class=\"default-target-select\"></select>\n    </div>\n\n    <div id=\"update-frequency\" class=\"update-frequency\"></div>\n{% endblock %}"}, {"file": "models.py", "path": "currency_converter_project/currency_converter/models.py", "code": ""}, {"file": "forms.py", "path": "currency_converter_project/currency_converter/forms.py", "code": ""}, {"file": "base.html", "path": "currency_converter_project/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Currency Converter</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "wsgi.py", "path": "currency_converter_project/currency_converter_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "currency_converter_project/currency_converter_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter_project.settings')\n\napplication = get_asgi_application()"}, {"file": "__init__.py", "path": "currency_converter_project/currency_converter_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "currency_converter_project/currency_converter/__init__.py", "code": ""}], "3": [{"file": "manage.py", "path": "mysite/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "mysite/mysite/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'y%j90f8e%_x0+t-o5l9@k^gs^n=t713x@u3r2z8k6_q!p&*2j'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'generator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'mysite.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mysite.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "mysite/mysite/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('generator.urls')),\n]"}, {"file": "urls.py", "path": "mysite/generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.password_options, name='password_options'),\n    path('password/', views.generated_password, name='generated_password'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "mysite/generator/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'generator/home.html')\n\ndef about(request):\n    return render(request, 'generator/about.html')\n\ndef password_options(request):\n    return render(request, 'generator/password_options.html')\n\n\ndef generated_password(request):\n    return render(request, 'generator/generated_password.html')"}, {"file": "home.html", "path": "mysite/generator/templates/generator/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"home-container\" class=\"container\">\n    <h1 id=\"home-title\" class=\"title\">Password Generator</h1>\n</div>\n{% endblock %}"}, {"file": "about.html", "path": "mysite/generator/templates/generator/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"about-container\" class=\"container\">\n  <h1 id=\"about-title\" class=\"title\">About</h1>\n</div>\n{% endblock %}"}, {"file": "password_options.html", "path": "mysite/generator/templates/generator/password_options.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"options-container\" class=\"container\">\n    <h1 id=\"options-title\" class=\"title\">Password Options</h1>\n</div>\n{% endblock %}"}, {"file": "generated_password.html", "path": "mysite/generator/templates/generator/generated_password.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"password-container\" class=\"container\">\n    <h1 id=\"password-title\" class=\"title\">Generated Password</h1>\n</div>\n{% endblock %}"}, {"file": "base.html", "path": "mysite/generator/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title id=\"head-title\">{% block title %}{% endblock %}</title>\n</head>\n<body id=\"body\">\n    <div id=\"content-container\" class=\"content\">\n        {% block content %}\n        {% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "asgi.py", "path": "mysite/mysite/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "mysite/mysite/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "mysite/mysite/__init__.py", "code": ""}, {"file": "apps.py", "path": "mysite/generator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass GeneratorConfig(AppConfig):\n    name = 'generator'"}, {"file": "admin.py", "path": "mysite/generator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "__init__.py", "path": "mysite/generator/__init__.py", "code": ""}, {"file": "models.py", "path": "mysite/generator/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "mysite/generator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "4": [{"file": "manage.py", "path": "qr_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "qr_project/qr_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your-secret-key'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qr_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qr_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qr_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # where the files will be stored\nMEDIA_URL = '/media/' # how we access in browser"}, {"file": "urls.py", "path": "qr_project/qr_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qr_app.urls')),\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)"}, {"file": "urls.py", "path": "qr_project/qr_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', views.generate, name='generate'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "qr_project/qr_app/views.py", "code": "from django.shortcuts import render\nimport qrcode\nfrom io import BytesIO\nfrom django.core.files.uploadedfile import InMemoryUploadedFile\nfrom django.http import HttpResponse\n\n# Create your views here.\ndef home(request):\n    return render(request, 'qr_app/home.html')\n\ndef generate(request):\n    if request.method == 'POST':\n        text = request.POST.get('text')\n        box_size = int(request.POST.get('box_size', 10))\n        border = int(request.POST.get('border', 4))\n        error_correction = request.POST.get('error_correction', 'M')\n        fill_color = request.POST.get('fill_color', '#000000')\n        back_color = request.POST.get('back_color', '#ffffff')\n\n        qr = qrcode.QRCode(\n            version=None,\n            error_correction=getattr(qrcode.constants, 'ERROR_CORRECT_' + error_correction),\n            box_size=box_size,\n            border=border,\n        )\n        qr.add_data(text)\n        qr.make(fit=True)\n\n        img = qr.make_image(fill_color=fill_color, back_color=back_color)\n\n        # Save the image to an in-memory buffer\n        buffer = BytesIO()\n        img.save(buffer, \"PNG\")\n        buffer.seek(0)\n\n        # Create an InMemoryUploadedFile object\n        img_file = InMemoryUploadedFile(\n            buffer,\n            None,\n            'qrcode.png',\n            'image/png',\n            buffer.tell(),\n            None\n        )\n\n        context = {'qr_code': img_file.url}\n        return render(request, 'qr_app/generate.html', context)\n\n    return render(request, 'qr_app/generate.html')\n\ndef about(request):\n    return render(request, 'qr_app/about.html')"}, {"file": "home.html", "path": "qr_project/qr_app/templates/qr_app/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"home-title\" class=\"title\">Welcome to the QR Code Generator</h1>\n        <p id=\"home-description\" class=\"description\">This website allows you to easily generate QR codes for any text or URL.</p>\n        <a id=\"generate-button\" class=\"btn btn-primary\" href=\"{% url 'generate' %}\">Generate QR Code</a>\n    </div>\n{% endblock %}"}, {"file": "generate.html", "path": "qr_project/qr_app/templates/qr_app/generate.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id=\"generate-container\" class=\"container\">\n        <h1 id=\"generate-title\" class=\"title\">QR Code Generator</h1>\n\n        <form id=\"generate-form\" method=\"post\">\n            {% csrf_token %}\n            <label for=\"text\">Text or URL:</label>\n            <input type=\"text\" id=\"text\" name=\"text\" class=\"form-control\" required><br><br>\n\n            <label for=\"box_size\">Box Size (Max 128):</label>\n            <input type=\"number\" id=\"box_size\" name=\"box_size\" class=\"form-control\" min=\"1\" max=\"128\" value=\"10\" required><br><br>\n\n            <label for=\"border\">Border Size (Max 10):</label>\n            <input type=\"number\" id=\"border\" name=\"border\" class=\"form-control\" min=\"0\" max=\"10\" value=\"4\" required><br><br>\n\n            <label for=\"error_correction\">Error Correction:</label>\n            <select id=\"error_correction\" name=\"error_correction\" class=\"form-control\">\n                <option value=\"L\">Small</option>\n                <option value=\"M\" selected>Medium</option>\n                <option value=\"Q\">Large</option>\n                <option value=\"H\">Extra Large</option>\n            </select><br><br>\n\n            <label for=\"fill_color\">Fill Color:</label>\n            <input type=\"color\" id=\"fill_color\" name=\"fill_color\" class=\"form-control\" value=\"#000000\"><br><br>\n\n            <label for=\"back_color\">Back Color:</label>\n            <input type=\"color\" id=\"back_color\" name=\"back_color\" class=\"form-control\" value=\"#ffffff\"><br><br>\n\n            <button id=\"generate-submit\" type=\"submit\" class=\"btn btn-primary\">Generate</button>\n        </form>\n\n        {% if qr_code %}\n            <div id=\"qr-code-container\" class=\"qr-code-container\">\n                <img id=\"qr-code-image\" src=\"{{ qr_code }}\" alt=\"QR Code\" class=\"qr-code-image\">\n                <a id=\"download-link\" href=\"{{ qr_code }}\" download class=\"btn btn-success\">Download</a>\n            </div>\n        {% endif %}\n    </div>\n{% endblock %}"}, {"file": "about.html", "path": "qr_project/qr_app/templates/qr_app/about.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id=\"about-container\" class=\"container\">\n        <h1 id=\"about-title\" class=\"title\">About Us</h1>\n        <p id=\"about-description\" class=\"description\">This is a simple QR code generator website.</p>\n\n        <h2 id=\"privacy-title\" class=\"subtitle\">Privacy Policy</h2>\n        <p id=\"privacy-description\" class=\"description\">Your privacy is important to us. We do not collect or store any personal information.</p>\n\n        <h2 id=\"terms-title\" class=\"subtitle\">Terms of Service</h2>\n        <p id=\"terms-description\" class=\"description\">By using this website, you agree to our terms of service.</p>\n    </div>\n{% endblock %}"}, {"file": "base.html", "path": "qr_project/qr_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title id=\"head-title\">QR Code Generator</title>\n</head>\n<body>\n    <header id=\"main-header\">\n        <nav id=\"main-nav\">\n            <a id=\"home-link\" href=\"{% url 'home' %}\">Home</a> |\n            <a id=\"about-link\" href=\"{% url 'about' %}\">About</a>\n        </nav>\n    </header>\n    <main id=\"main-content\">\n        {% block content %}\n        {% endblock %}\n    </main>\n</body>\n</html>"}], "5": [{"file": "manage.py", "path": "markdown_converter/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'markdown_converter.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "markdown_converter/markdown_converter/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'YOUR_SECRET_KEY'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'markdown_converter.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'markdown_converter.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "markdown_converter/markdown_converter/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('converter.urls')),\n]"}, {"file": "urls.py", "path": "markdown_converter/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "markdown_converter/converter/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'converter/home.html')\n\ndef convert(request):\n    return render(request, 'converter/convert.html')\n\ndef about(request):\n    return render(request, 'converter/about.html')"}, {"file": "home.html", "path": "markdown_converter/converter/templates/converter/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"home-container\" class=\"home-container\">\n        <h1 id=\"home-title\" class=\"home-title\">Welcome to the Markdown to HTML Converter</h1>\n        <p id=\"home-intro\" class=\"home-intro\">This tool allows you to easily convert Markdown text to HTML.</p>\n        <a id=\"convert-link\" class=\"nav-link\" href=\"{% url 'convert' %}\">Convert</a>\n        <a id=\"about-link\" class=\"nav-link\" href=\"{% url 'about' %}\">About</a>\n    </div>\n{% endblock %}"}, {"file": "convert.html", "path": "markdown_converter/converter/templates/converter/convert.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"convert-container\" class=\"convert-container\">\n        <textarea id=\"markdown-input\" class=\"markdown-input\"></textarea>\n        <button id=\"convert-button\" class=\"convert-button\">Convert</button>\n        <div id=\"html-output\" class=\"html-output\"></div>\n    </div>\n{% endblock %}"}, {"file": "about.html", "path": "markdown_converter/converter/templates/converter/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <div id=\"about-container\" class=\"about-container\">\n\n    </div>\n{% endblock %}"}, {"file": "base.html", "path": "markdown_converter/converter/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Markdown to HTML Converter</title>\n</head>\n<body>\n    <div id=\"main-content\" class=\"main-content\">\n        {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "asgi.py", "path": "markdown_converter/markdown_converter/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'markdown_converter.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "markdown_converter/markdown_converter/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'markdown_converter.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "markdown_converter/markdown_converter/__init__.py", "code": ""}, {"file": "__init__.py", "path": "markdown_converter/converter/__init__.py", "code": ""}], "6": [{"file": "manage.py", "path": "todo_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "todo_project/todo_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@qnd)z_t_q*o(5j)gp(m^-0853+2@y)d5m(m-98%(+g^n_t'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'todo_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'todo_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'todo_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "todo_project/todo_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('todo_app.urls')),\n]"}, {"file": "wsgi.py", "path": "todo_project/todo_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "urls.py", "path": "todo_project/todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('lists/', views.todo_lists, name='todo_lists'),\n    path('lists/<int:list_id>/', views.todo_list, name='todo_list'),\n    path('tasks/<int:task_id>/', views.task, name='task'),\n    path('analysis/', views.analysis, name='analysis'),\n]"}, {"file": "views.py", "path": "todo_project/todo_app/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'todo_app/home.html')\n\ndef todo_lists(request):\n    return render(request, 'todo_app/todo_lists.html')\n\ndef todo_list(request, list_id):\n    return render(request, 'todo_app/todo_list.html', {'list_id': list_id})\n\ndef task(request, task_id):\n    return render(request, 'todo_app/task.html', {'task_id': task_id})\n\ndef analysis(request):\n    return render(request, 'todo_app/analysis.html')"}, {"file": "models.py", "path": "todo_project/todo_app/models.py", "code": "from django.db import models\n\nclass TodoList(models.Model):\n    name = models.CharField(max_length=200)\n\nclass Task(models.Model):\n    todo_list = models.ForeignKey(TodoList, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True)\n    completed = models.BooleanField(default=False)"}, {"file": "home.html", "path": "todo_project/todo_app/templates/todo_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"home-title\" class=\"title\">Welcome to the Todo App</h1>\n{% endblock %}"}, {"file": "todo_lists.html", "path": "todo_project/todo_app/templates/todo_app/todo_lists.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"todo-lists-title\" class=\"title\">Todo Lists</h1>\n{% endblock %}"}, {"file": "todo_list.html", "path": "todo_project/todo_app/templates/todo_app/todo_list.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"todo-list-title\" class=\"title\">Todo List {{ list_id }}</h1>\n{% endblock %}"}, {"file": "task.html", "path": "todo_project/todo_app/templates/todo_app/task.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"task-title\" class=\"title\">Task {{ task_id }}</h1>\n{% endblock %}"}, {"file": "analysis.html", "path": "todo_project/todo_app/templates/todo_app/analysis.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1 id=\"analysis-title\" class=\"title\">Analysis</h1>\n{% endblock %}"}, {"file": "base.html", "path": "todo_project/todo_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}], "7": [{"file": "manage.py", "path": "budget_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "budget_project/budget_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y#m-u9o+3&bp(5m3y_x4&o02q@2r(%7h#h-z5f16(1l$_g9-p'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'budget_control',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'budget_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'budget_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "budget_project/budget_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('budget_control.urls')),\n]"}, {"file": "urls.py", "path": "budget_project/budget_control/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('balance/', views.balance_tracker, name='balance_tracker'),\n    path('reports/', views.reports, name='reports'),\n    path('settings1/', views.settings1, name='settings1'),\n    path('settings2/', views.settings2, name='settings2'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "budget_project/budget_control/views.py", "code": "from django.shortcuts import render\nfrom .models import Transaction, Category\nfrom .forms import TransactionForm, CategoryForm\n\ndef home(request):\n    return render(request, 'budget_control/home.html')\n\ndef balance_tracker(request):\n    transactions = Transaction.objects.all()\n    return render(request, 'budget_control/balance_tracker.html', {'transactions': transactions})\n\ndef reports(request):\n    return render(request, 'budget_control/reports.html')\n\ndef settings1(request):\n    if request.method == 'POST':\n        form = TransactionForm(request.POST)\n        if form.is_valid():\n            form.save()\n    else:\n        form = TransactionForm()\n    return render(request, 'budget_control/settings1.html', {'form': form})\n\ndef settings2(request):\n    if request.method == 'POST':\n        form = CategoryForm(request.POST)\n        if form.is_valid():\n            form.save()\n    else:\n        form = CategoryForm()\n    return render(request, 'budget_control/settings2.html', {'form': form})\n\ndef help(request):\n    return render(request, 'budget_control/help.html')"}, {"file": "models.py", "path": "budget_project/budget_control/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Transaction(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    date = models.DateField()\n    category = models.ForeignKey('Category', on_delete=models.SET_NULL, null=True, blank=True)\n    description = models.CharField(max_length=200)\n\nclass Category(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=50)"}, {"file": "forms.py", "path": "budget_project/budget_control/forms.py", "code": "from django import forms\nfrom .models import Transaction, Category\n\nclass TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = ['amount', 'date', 'category', 'description']\n\nclass CategoryForm(forms.ModelForm):\n    class Meta:\n        model = Category\n        fields = ['name']"}, {"file": "admin.py", "path": "budget_project/budget_control/admin.py", "code": "from django.contrib import admin\nfrom .models import Transaction, Category\n\nadmin.site.register(Transaction)\nadmin.site.register(Category)"}, {"file": "home.html", "path": "budget_project/budget_control/templates/budget_control/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Budget Control</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"home-title\" class=\"title\">Welcome to Budget Control</h1>\n        <ul id=\"navigation-links\" class=\"navigation\">\n            <li><a href=\"{% url 'balance_tracker' %}\" id=\"balance-link\">Balance Tracker</a></li>\n            <li><a href=\"{% url 'reports' %}\" id=\"reports-link\">Reports</a></li>\n            <li><a href=\"{% url 'settings1' %}\" id=\"settings1-link\">Add Transaction</a></li>\n            <li><a href=\"{% url 'settings2' %}\" id=\"settings2-link\">Add Category</a></li>\n            <li><a href=\"{% url 'help' %}\" id=\"help-link\">Help</a></li>\n        </ul>\n    </div>\n</body>\n</html>"}, {"file": "balance_tracker.html", "path": "budget_project/budget_control/templates/budget_control/balance_tracker.html", "code": "{% extends 'budget_control/home.html' %}\n{% block content %}\n<div id=\"balance-container\" class=\"container\">\n    <h2 id=\"balance-title\" class=\"title\">Balance Tracker</h2>\n\n    <table id=\"transactions-table\" class=\"table\">\n      <thead>\n        <tr id=\"table-header-row\">\n          <th id=\"amount-header\">Amount</th>\n          <th id=\"date-header\">Date</th>\n          <th id=\"category-header\">Category</th>\n          <th id=\"description-header\">Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {% for transaction in transactions %}\n          <tr id=\"transaction-row-{{ transaction.id }}\" class=\"transaction-row\">\n            <td id=\"amount-{{ transaction.id }}\">{{ transaction.amount }}</td>\n            <td id=\"date-{{ transaction.id }}\">{{ transaction.date }}</td>\n            <td id=\"category-{{ transaction.id }}\">{{ transaction.category }}</td>\n            <td id=\"description-{{ transaction.id }}\">{{ transaction.description }}</td>\n          </tr>\n        {% endfor %}\n      </tbody>\n    </table>\n</div>\n{% endblock %}"}, {"file": "reports.html", "path": "budget_project/budget_control/templates/budget_control/reports.html", "code": "{% extends 'budget_control/home.html' %}\n{% block content %}\n<div id=\"reports-container\" class=\"container\">\n<h2 id=\"reports-title\" class=\"title\">Reports</h2>\n\n    <p>Reports functionality coming soon!</p>\n\n</div>\n{% endblock %}"}, {"file": "settings1.html", "path": "budget_project/budget_control/templates/budget_control/settings1.html", "code": "{% extends 'budget_control/home.html' %}\n{% block content %}\n<div id=\"settings1-container\" class=\"container\">\n    <h2 id=\"settings1-title\" class=\"title\">Add Transaction</h2>\n    <form method=\"post\" id=\"transaction-form\">\n        {% csrf_token %}\n        {{ form.as_p }}\n        <button type=\"submit\" id=\"submit-button\">Save</button>\n    </form>\n</div>\n{% endblock %}"}, {"file": "settings2.html", "path": "budget_project/budget_control/templates/budget_control/settings2.html", "code": "{% extends 'budget_control/home.html' %}\n{% block content %}\n<div id=\"settings2-container\" class=\"container\">\n    <h2 id=\"settings2-title\" class=\"title\">Add Category</h2>\n<form method=\"post\" id=\"category-form\">\n    {% csrf_token %}\n    {{ form.as_p }}\n    <button type=\"submit\" id=\"submit-button\">Save</button>\n</form>\n</div>\n{% endblock %}"}, {"file": "help.html", "path": "budget_project/budget_control/templates/budget_control/help.html", "code": "{% extends 'budget_control/home.html' %}\n{% block content %}\n<div id=\"help-container\" class=\"container\">\n<h2 id=\"help-title\" class=\"title\">Help</h2>\n\n    <p>Help documentation coming soon!</p>\n</div>\n{% endblock %}"}, {"file": "wsgi.py", "path": "budget_project/budget_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "budget_project/budget_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'budget_project.settings')\n\napplication = get_asgi_application()"}, {"file": "__init__.py", "path": "budget_project/budget_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "budget_project/budget_control/__init__.py", "code": ""}, {"file": "apps.py", "path": "budget_project/budget_control/apps.py", "code": "from django.apps import AppConfig\n\nclass BudgetControlConfig(AppConfig):\n    name = 'budget_control'"}], "8": [{"file": "manage.py", "path": "my_calendar_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "my_calendar_project/my_calendar_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'YOUR_SECRET_KEY'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calendar_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'my_calendar_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'my_calendar_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "my_calendar_project/my_calendar_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calendar_app.urls')),\n]"}, {"file": "urls.py", "path": "my_calendar_project/calendar_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar, name='calendar'),\n    path('event/<int:event_id>/', views.event_detail, name='event_detail'),\n    path('event/add/', views.add_event, name='add_event'),\n    path('event/<int:event_id>/edit/', views.edit_event, name='edit_event'),\n    path('event/<int:event_id>/delete/', views.delete_event, name='delete_event'),\n    path('search/', views.search_events, name='search_events'),\n    path('all_events/', views.all_events, name='all_events'),\n    path('help/', views.help, name='help'),\n]"}, {"file": "views.py", "path": "my_calendar_project/calendar_app/views.py", "code": "from django.shortcuts import render, redirect, get_object_or_404\nfrom django.http import HttpResponse\nfrom .models import Event\nfrom datetime import date\n\ndef home(request):\n    current_date = date.today()\n    return render(request, 'calendar_app/home.html', {'current_date': current_date})\n\ndef calendar(request):\n    return render(request, 'calendar_app/calendar.html')\n\ndef event_detail(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)\n    return render(request, 'calendar_app/event_detail.html', {'event': event})\n\ndef add_event(request):\n    if request.method == 'POST':\n        # Process form data\n        title = request.POST.get('title')\n        date = request.POST.get('date')\n        description = request.POST.get('description')        \n        event = Event(title=title, date=date, description=description)\n        event.save()\n        return redirect('home') # Redirect after successful submission\n    return render(request, 'calendar_app/add_event.html')\n\ndef edit_event(request, event_id):\n    return render(request, 'calendar_app/edit_event.html')\n\ndef delete_event(request, event_id):\n    event = get_object_or_404(Event, pk=event_id)\n    event.delete()\n    return redirect('calendar')\n\ndef search_events(request):\n    return render(request, 'calendar_app/search_events.html')\n\ndef all_events(request):\n    events = Event.objects.all()\n    return render(request, 'calendar_app/all_events.html', {'events': events})\n\ndef help(request):\n    return render(request, 'calendar_app/help.html')"}, {"file": "models.py", "path": "my_calendar_project/calendar_app/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=200)\n    date = models.DateField()\n    description = models.TextField()\n\n    def __str__(self):\n        return self.title"}, {"file": "home.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"home-container\" class=\"container\">\n    <h1 id=\"home-title\" class=\"title\">Welcome to the Calendar App</h1>\n    <p id=\"current-date-paragraph\" class=\"current-date\">Current Date: {{ current_date }}</p>\n</div>\n{% endblock %}"}, {"file": "calendar.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/calendar.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"calendar-container\" class=\"container\">\n    <h1 id=\"calendar-title\" class=\"title\">Calendar</h1>\n</div>\n{% endblock %}"}, {"file": "event_detail.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/event_detail.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"event-detail-container\" class=\"container\">\n  <h1 id=\"event-detail-title\" class=\"title\">Event Details</h1>\n  <p id=\"event-title\" class=\"event-title\">{{ event.title }}</p>\n  <p id=\"event-date\" class=\"event-date\">{{ event.date }}</p>\n  <p id=\"event-description\" class=\"event-description\">{{ event.description }}</p>  \n</div>\n{% endblock %}"}, {"file": "add_event.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/add_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"add-event-container\" class=\"container\">\n    <h1 id=\"add-event-title\" class=\"title\">Add Event</h1>\n    <form id=\"add-event-form\" method=\"post\">\n        {% csrf_token %}\n        <label for=\"title\">Title:</label><br>\n        <input type=\"text\" id=\"title\" name=\"title\" required><br>\n        <label for=\"date\">Date:</label><br>\n        <input type=\"date\" id=\"date\" name=\"date\" required><br>\n        <label for=\"description\">Description:</label><br>\n        <textarea id=\"description\" name=\"description\" rows=\"4\" cols=\"50\"></textarea><br><br>\n        <button id=\"submit-button\" type=\"submit\">Add Event</button>\n    </form>\n</div>\n{% endblock %}"}, {"file": "edit_event.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/edit_event.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"edit-event-container\" class=\"container\">\n    <h1 id=\"edit-event-title\" class=\"title\">Edit Event</h1>\n</div>\n{% endblock %}"}, {"file": "all_events.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/all_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"all-events-container\" class=\"container\">\n  <h1 id=\"all-events-title\" class=\"title\">All Events</h1>\n  <ul id=\"events-list\">\n  {% for event in events %}\n      <li id=\"event-{{ event.id }}\" class=\"event-item\">\n          <a href=\"{% url 'event_detail' event.id %}\">{{ event.title }}</a> ({{ event.date }})\n      </li>\n  {% endfor %}\n  </ul>\n</div>\n{% endblock %}"}, {"file": "search_events.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/search_events.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"search-events-container\" class=\"container\">\n    <h1 id=\"search-events-title\" class=\"title\">Search Events</h1>\n</div>\n{% endblock %}"}, {"file": "help.html", "path": "my_calendar_project/calendar_app/templates/calendar_app/help.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"help-container\" class=\"container\">\n    <h1 id=\"help-title\" class=\"title\">Help</h1>\n</div>\n{% endblock %}"}, {"file": "base.html", "path": "my_calendar_project/calendar_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Calendar App</title>\n</head>\n<body>\n    <div id=\"content-wrapper\">\n    {% block content %}\n    {% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "wsgi.py", "path": "my_calendar_project/my_calendar_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "my_calendar_project/my_calendar_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_calendar_project.settings')\n\napplication = get_asgi_application()"}, {"file": "__init__.py", "path": "my_calendar_project/my_calendar_project/__init__.py", "code": ""}, {"file": "__init__.py", "path": "my_calendar_project/calendar_app/__init__.py", "code": ""}, {"file": "admin.py", "path": "my_calendar_project/calendar_app/admin.py", "code": "from django.contrib import admin\nfrom .models import Event\n\nadmin.site.register(Event)"}, {"file": "apps.py", "path": "my_calendar_project/calendar_app/apps.py", "code": "from django.apps import AppConfig\n\nclass CalendarAppConfig(AppConfig):\n    name = 'calendar_app'"}, {"file": "tests.py", "path": "my_calendar_project/calendar_app/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "9": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n\nSECRET_KEY = ')-z4_=^6#5_c67k%w_j&l%+!h^$4*j4@k4q#5t#3n=z!849#'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myproject',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n\nSTATIC_URL = '/static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myproject.urls')),\n]"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]"}, {"file": "views.py", "path": "myproject/myproject/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef features(request):\n    return render(request, 'features.html')\n\ndef pricing(request):\n    return render(request, 'pricing.html')\n\ndef about(request):\n    return render(request, 'about.html')\n\ndef support(request):\n    return render(request, 'support.html')"}, {"file": "home.html", "path": "myproject/templates/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"home-content\" class=\"home-content\">\n    <h1 id=\"home-title\" class=\"home-title\">Home</h1>\n    <p id=\"home-overview\" class=\"home-overview\">Product Overview Content</p>\n</section>\n{% endblock %}"}, {"file": "features.html", "path": "myproject/templates/features.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"features-content\" class=\"features-content\">\n    <h1 id=\"features-title\" class=\"features-title\">Features</h1>\n    <ul id=\"features-list\" class=\"features-list\">\n        <li id=\"feature-1\" class=\"feature-item\">Feature 1</li>\n        <li id=\"feature-2\" class=\"feature-item\">Feature 2</li>\n        <li id=\"feature-3\" class=\"feature-item\">Feature 3</li>\n    </ul>\n</section>\n{% endblock %}"}, {"file": "pricing.html", "path": "myproject/templates/pricing.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"pricing-content\" class=\"pricing-content\">\n    <h1 id=\"pricing-title\" class=\"pricing-title\">Pricing</h1>\n    <p id=\"pricing-plans\" class=\"pricing-plans\">Pricing Plans Content</p>\n    <p id=\"contact-sales\" class=\"contact-sales\">Contact Sales Form</p>\n</section>\n{% endblock %}"}, {"file": "about.html", "path": "myproject/templates/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"about-content\" class=\"about-content\">\n    <h1 id=\"about-title\" class=\"about-title\">About Us</h1>\n    <p id=\"company-background\" class=\"company-background\">Company Background Content</p>\n</section>\n{% endblock %}"}, {"file": "support.html", "path": "myproject/templates/support.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"support-content\" class=\"support-content\">\n    <h1 id=\"support-title\" class=\"support-title\">Support</h1>\n    <h2 id=\"faq-title\" class=\"faq-title\">FAQ</h2>\n    <p id=\"faq-content\" class=\"faq-content\">FAQ Content</p>\n    <p id=\"support-form\" class=\"support-form\">Support Message Form</p>\n</section>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Site</title>\n</head>\n<body>\n    <nav id=\"main-nav\" class=\"main-nav\">\n        <a id=\"nav-home\" class=\"nav-link\" href=\"{% url 'home' %}\">Home</a>\n        <a id=\"nav-features\" class=\"nav-link\" href=\"{% url 'features' %}\">Features</a>\n        <a id=\"nav-pricing\" class=\"nav-link\" href=\"{% url 'pricing' %}\">Pricing</a>\n        <a id=\"nav-about\" class=\"nav-link\" href=\"{% url 'about' %}\">About</a>\n        <a id=\"nav-support\" class=\"nav-link\" href=\"{% url 'support' %}\">Support</a>\n    </nav>\n    {% block content %}{% endblock %}\n</body>\n</html>"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myproject/migrations/__init__.py", "code": ""}, {"file": "apps.py", "path": "myproject/myproject/apps.py", "code": "from django.apps import AppConfig\n\n\nclass MyprojectConfig(AppConfig):\n    name = 'myproject'"}, {"file": "admin.py", "path": "myproject/myproject/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "__init__.py", "path": "myproject/__init__.py", "code": ""}], "10": [{"file": "settings.py", "path": "calorie_tracker_project/calorie_tracker_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = '+=u!p6_k(y-(q^z0x6@9$b7_q-o%7d0g_s^k_g@1p1m0@yk!'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calorie_tracker',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'calorie_tracker_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'calorie_tracker_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "calorie_tracker_project/calorie_tracker_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calorie_tracker.urls')),\n]\n"}, {"file": "urls.py", "path": "calorie_tracker_project/calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('meal_log/', views.meal_log, name='meal_log'),\n    path('activity_log/', views.activity_log, name='activity_log'),\n    path('analysis/', views.analysis, name='analysis'),\n    path('settings/', views.settings, name='settings'),\n    path('help/', views.help, name='help'),\n    # Add paths for signup and login\n    path('signup/', views.signup, name='signup'),\n    path('login/', views.login, name='login'),\n]\n"}, {"file": "views.py", "path": "calorie_tracker_project/calorie_tracker/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'calorie_tracker/home.html')\n\ndef dashboard(request):\n    return render(request, 'calorie_tracker/dashboard.html')\n\ndef meal_log(request):\n    return render(request, 'calorie_tracker/meal_log.html')\n\ndef activity_log(request):\n    return render(request, 'calorie_tracker/activity_log.html')\n\ndef analysis(request):\n    return render(request, 'calorie_tracker/analysis.html')\n\ndef settings(request):\n    return render(request, 'calorie_tracker/settings.html')\n\ndef help(request):\n    return render(request, 'calorie_tracker/help.html')\n\ndef signup(request):\n    return render(request, 'calorie_tracker/signup.html')\n\ndef login(request):\n    return render(request, 'calorie_tracker/login.html')\n"}, {"file": "models.py", "path": "calorie_tracker_project/calorie_tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\n# Create your models here.\nclass Meal(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    # ... other fields\n\nclass Activity(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    # ... other fields"}, {"file": "forms.py", "path": "calorie_tracker_project/calorie_tracker/forms.py", "code": "from django import forms\nfrom .models import Meal, Activity\n\nclass MealForm(forms.ModelForm):\n    class Meta:\n        model = Meal\n        # ... fields\n        \nclass ActivityForm(forms.ModelForm):\n    class Meta:\n        model = Activity\n        # ... fields\n"}, {"file": "home.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/home.html", "code": "<!-- home.html -->\n<div id=\"home-container\" class=\"home-container\">\n    <h1 id=\"home-title\" class=\"home-title\">Welcome to the Calorie Tracker</h1>\n    <a id=\"signup-link\" class=\"home-link\" href=\"{% url 'signup' %}\">Sign Up</a>\n    <a id=\"login-link\" class=\"home-link\" href=\"{% url 'login' %}\">Log In</a>\n</div>"}, {"file": "dashboard.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/dashboard.html", "code": "<!-- dashboard.html -->\n<div id=\"dashboard-container\" class=\"dashboard-container\">\n    <h1 id=\"dashboard-title\" class=\"dashboard-title\">Dashboard</h1>\n</div>"}, {"file": "signup.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/signup.html", "code": "<!-- signup.html -->\n<div id=\"signup-container\" class=\"signup-container\">\n    <h1 id=\"signup-title\" class=\"signup-title\">Sign Up</h1>\n    <form method=\"post\"> \n        {% csrf_token %}\n        <!-- Your signup form fields here -->\n        <button id=\"signup-button\" type=\"submit\">Sign Up</button>\n    </form>\n</div>"}, {"file": "login.html", "path": "calorie_tracker_project/calorie_tracker/templates/calorie_tracker/login.html", "code": "<!-- login.html -->\n<div id=\"login-container\" class=\"login-container\">\n    <h1 id=\"login-title\" class=\"login-title\">Log In</h1>\n    <form method=\"post\"> \n        {% csrf_token %}\n        <!-- Your login form fields here -->\n        <button id=\"login-button\" type=\"submit\">Log In</button>\n    </form>\n</div>"}, {"file": "asgi.py", "path": "calorie_tracker_project/calorie_tracker_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"calorie_tracker_project.settings\")\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "calorie_tracker_project/calorie_tracker_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker_project.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "manage.py", "path": "calorie_tracker_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\" \n        ) from exc\n    execute_from_command_line(sys.argv)\n"}], "12": [{"file": "manage.py", "path": "expense_tracker_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_tracker_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "expense_tracker_project/expense_tracker_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\nSECRET_KEY = 'YOUR_SECRET_KEY'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'expense_tracker',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'expense_tracker_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'expense_tracker_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "expense_tracker_project/expense_tracker_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('expense_tracker.urls')),\n]"}, {"file": "urls.py", "path": "expense_tracker_project/expense_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('signup/', views.signup, name='signup'),\n    path('login/', views.login, name='login'),\n    path('employee/', views.employee_portal, name='employee_portal'),\n    path('submit_claim/', views.submit_claim, name='submit_claim'),\n    path('view_claim_status/', views.view_claim_status, name='view_claim_status'),\n    path('edit_claim/<int:claim_id>/', views.edit_claim, name='edit_claim'),\n    path('admin/', views.admin_portal, name='admin_portal'),\n    path('approve_claim/<int:claim_id>/', views.approve_claim, name='approve_claim'),\n    path('reject_claim/<int:claim_id>/', views.reject_claim, name='reject_claim'),\n    path('view_claim_details/<int:claim_id>/', views.view_claim_details, name='view_claim_details'),\n    path('search_filter_claims/', views.search_filter_claims, name='search_filter_claims'),\n    path('budget/', views.budget_control, name='budget_control'),\n    path('analyze_expenses/', views.analyze_expenses, name='analyze_expenses'),\n    path('generate_reports/', views.generate_reports, name='generate_reports'),\n    path('set_budget_limits/', views.set_budget_limits, name='set_budget_limits'),\n]"}, {"file": "wsgi.py", "path": "expense_tracker_project/expense_tracker_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_tracker_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "expense_tracker_project/expense_tracker_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_tracker_project.settings')\n\napplication = get_asgi_application()"}, {"file": "views.py", "path": "expense_tracker_project/expense_tracker/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Claim\nfrom django.contrib.auth import authenticate, login, logout\nfrom .forms import ClaimForm\n\n# ... other import statements\n\ndef home(request):\n    return render(request, 'expense_tracker/home.html')\n\n# ... other view functions\n"}, {"file": "models.py", "path": "expense_tracker_project/expense_tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Claim(models.Model):\n    # Define fields such as employee, expense_type, amount, description, status, etc.\n    pass"}, {"file": "forms.py", "path": "expense_tracker_project/expense_tracker/forms.py", "code": "from django import forms\nfrom .models import Claim\n\nclass ClaimForm(forms.ModelForm):\n    class Meta:\n        model = Claim\n        fields = '__all__'"}, {"file": "home.html", "path": "expense_tracker_project/expense_tracker/templates/expense_tracker/home.html", "code": "<!-- HTML for the home page -->\n<div id=\"home-container\" class=\"container\">\n  <h1 id=\"home-title\" class=\"title\">Welcome to the Expense Tracker</h1>\n  <p id=\"home-description\" class=\"description\">This is the home page of our expense tracker application.</p>\n\n  <a id=\"login-link\" class=\"link\" href=\"{% url 'login' %}\">Login</a>\n  <a id=\"signup-link\" class=\"link\" href=\"{% url 'signup' %}\">Sign Up</a>\n</div>"}, {"file": "admin.py", "path": "expense_tracker_project/expense_tracker/admin.py", "code": "from django.contrib import admin\nfrom .models import Claim\n\nadmin.site.register(Claim)"}, {"file": "__init__.py", "path": "expense_tracker_project/expense_tracker/__init__.py", "code": ""}, {"file": "__init__.py", "path": "expense_tracker_project/expense_tracker_project/__init__.py", "code": ""}, {"file": "apps.py", "path": "expense_tracker_project/expense_tracker/apps.py", "code": "from django.apps import AppConfig\n\n\nclass ExpenseTrackerConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'expense_tracker'"}], "13": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'a_secret_key'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n\nSTATIC_URL = '/static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('customer/', views.customer_management, name='customer_management'),\n    path('customer/add/', views.add_customer, name='add_customer'),\n    path('customer/edit/<int:customer_id>/', views.edit_customer, name='edit_customer'),\n    path('customer/delete/<int:customer_id>/', views.delete_customer, name='delete_customer'),\n    path('customer/<int:customer_id>/', views.view_customer, name='view_customer'),\n    path('product/', views.product_management, name='product_management'),\n    path('product/add/', views.add_product, name='add_product'),\n    path('product/edit/<int:product_id>/', views.edit_product, name='edit_product'),\n    path('product/delete/<int:product_id>/', views.delete_product, name='delete_product'),\n    path('product/<int:product_id>/', views.view_product, name='view_product'),\n    path('purchase/', views.purchase_records, name='purchase_records'),\n    path('purchase/add/', views.add_purchase, name='add_purchase'),\n    path('purchase/edit/<int:purchase_id>/', views.edit_purchase, name='edit_purchase'),\n    path('purchase/delete/<int:purchase_id>/', views.delete_purchase, name='delete_purchase'),\n    path('purchase/<int:purchase_id>/', views.view_purchase, name='view_purchase'),\n    path('preferred/', views.preferred_products, name='preferred_products'),\n    path('preferred/add/', views.add_preferred_product, name='add_preferred_product'),\n    path('preferred/edit/<int:preferred_product_id>/', views.edit_preferred_product, name='edit_preferred_product'),\n    path('preferred/delete/<int:preferred_product_id>/', views.delete_preferred_product, name='delete_preferred_product'),\n    path('preferred/<int:customer_id>/', views.view_preferred_products, name='view_preferred_products'),\n    path('sales/', views.sales_analysis, name='sales_analysis'),\n    path('sales/report/', views.generate_sales_report, name='generate_sales_report'),\n    path('sales/trends/', views.analyze_sales_trends, name='analyze_sales_trends'),\n    path('sales/performance/', views.product_performance_analysis, name='product_performance_analysis'),\n]\n"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'myapp/home.html')\n\n# other views with matching urls\n\ndef customer_management(request):\n  return render(request, 'myapp/customer_management.html')\n#... other views"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\n# Create your models here.\nclass Customer(models.Model):\n    # Customer fields\n    pass\n\nclass Product(models.Model):\n    # Product fields\n    pass\n\nclass Purchase(models.Model):\n    # Purchase fields\n    pass\n\nclass PreferredProduct(models.Model):\n    # PreferredProduct fields\n    pass"}, {"file": "forms.py", "path": "myproject/myapp/forms.py", "code": "from django import forms\nfrom .models import Customer, Product, Purchase, PreferredProduct\n\nclass CustomerForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = '__all__'\n\n# similar forms for other models"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "<h1 id=\"home-title\" class=\"title\">Welcome to the System</h1>\n<p id=\"home-description\" class=\"description\">Overview of system features...</p>"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\nfrom .models import Customer, Product, Purchase, PreferredProduct\n\nadmin.site.register(Customer)\nadmin.site.register(Product)\nadmin.site.register(Purchase)\nadmin.site.register(PreferredProduct)"}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'"}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": ""}], "14": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings.development')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings/development.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@q!9d^-_i-z_n=^k40x(o4n%g7k^$m3#^_072x7l80n@&s0p'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'helloworld',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "settings.py", "path": "myproject/myproject/settings/__init__.py", "code": "from .development import *\n"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('helloworld.urls')),\n]"}, {"file": "views.py", "path": "myproject/helloworld/views.py", "code": "from django.shortcuts import render\n\ndef hello_world(request):\n    context = {}\n    return render(request, 'helloworld/hello_world.html', context)"}, {"file": "urls.py", "path": "myproject/helloworld/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.hello_world, name='hello_world'),\n]"}, {"file": "hello_world.html", "path": "myproject/helloworld/templates/helloworld/hello_world.html", "code": "<!DOCTYPE html>\n<html lang=\"en\" id=\"html-index\">\n<head id=\"head-index\">\n    <title id=\"title-index\">{% block title %}{% endblock %}</title>\n    {% block extrahead %}{% endblock %}\n</head>\n<body id=\"body-index\" class=\"body-class\">\n    <div id=\"content\" class=\"content-class\">\n      {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "apps.py", "path": "myproject/helloworld/apps.py", "code": "from django.apps import AppConfig\n\nclass HelloworldConfig(AppConfig):\n    name = 'helloworld'"}, {"file": "__init__.py", "path": "myproject/helloworld/__init__.py", "code": ""}, {"file": "admin.py", "path": "myproject/helloworld/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "myproject/helloworld/models.py", "code": ""}, {"file": "tests.py", "path": "myproject/helloworld/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "15": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"myproject.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'y9_i&d_#j2&k90t+@h7b+x#x0)zrq9x_5t(0^z*2v9w0n22%d'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\n\ndef home(request):\n    return render(request, 'myapp/home.html')\n\ndef helloworld(request):\n    return render(request, 'myapp/helloworld.html')\n"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <a id=\"helloworld-link\" class=\"btn\" href=\"{% url 'helloworld' %}\">Button to HelloWorld page</a>\n{% endblock %}"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/myapp/helloworld.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <h1 id=\"helloworld-title\" class=\"title\">HelloWorld</h1>\n{% endblock %}"}, {"file": "base.html", "path": "myproject/myapp/templates/myapp/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Django App</title>\n</head>\n<body>\n    <div id=\"main-content\" class=\"content\">\n      {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'"}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": ""}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": ""}], "16": [{"file": "input_validation.py", "path": "src/input_validation.py", "code": "# Input File Validation Functions\n\nimport pandas as pd\nimport os\n\nINPUT_FILE = 'Spring Semester Subjects.xlsx'\nEXPECTED_HEADERS = ['#', 'Name', 'Weekday', 'Time']\nALLOWED_TIMES = ['First period', 'Second period', 'Third period', 'Fourth period']\n\n\ndef CheckFileExistence():\n    \"\"\"Ensure that 'Spring Semester Subjects.xlsx' file exists.\"\"\"\n    if not os.path.exists(INPUT_FILE):\n        raise FileNotFoundError(f\"Input file '{INPUT_FILE}' not found.\")\n\n\ndef ValidateHeaders(df):\n    \"\"\"Verify that the file headers are ['#', 'Name', 'Weekday', 'Time'].\"\"\"\n    if list(df.columns) != EXPECTED_HEADERS:\n        raise ValueError(\"Incorrect headers in the input file.\")\n\n\ndef ValidateTimeColumn(df):\n    \"\"\"Check if the 'Time' column contains only allowed values.\"\"\"\n    invalid_times = set(df['Time']) - set(ALLOWED_TIMES)\n    if invalid_times:\n        raise ValueError(f\"Invalid time periods found: {', '.join(invalid_times)}\")\n\n\ndef ValidateDataIntegrity(df):\n    \"\"\"Ensure that all columns have the correct and complete data without any missing fields.\"\"\"\n    if df.isnull().values.any():  # Check for null values in any columns\n        raise ValueError(\"Missing data found in the input file.\")\n\n    # Add specific checks for the other columns as needed e.g. '#' is integer\n    if not pd.api.types.is_integer_dtype(df['#']):\n        raise ValueError(\"'#' column must contain integers.\")\n\n\ndef ValidateNullValue(df):\n    \"\"\"Check if there are any missing value in the table.\"\"\"\n    if df.isnull().values.any():  # Check for null values\n        raise ValueError(\"Null values found in the input file.\")\n\n\ndef validate_input():\n    \"\"\"Validates the input Excel file.\"\"\"\n    CheckFileExistence()\n    df = pd.read_excel(INPUT_FILE)\n    ValidateHeaders(df)\n    ValidateTimeColumn(df)\n    ValidateDataIntegrity(df)\n    ValidateNullValue(df)\n    return df\n"}, {"file": "data_transformation.py", "path": "src/data_transformation.py", "code": "# Data Transformation Functions\n\nimport pandas as pd\n\n\ndef TransformToTwoDimensionTable(df):\n    \"\"\"Convert the list of subjects into a two-dimensional table format.\"\"\"\n    table = pd.DataFrame(index=ALLOWED_TIMES, columns=df['Weekday'].unique())\n    return table\n\n\ndef DataMapping(table, df):\n    \"\"\"Map data correctly into the two-dimensional table based on weekday and time period.\"\"\"\n    for _, row in df.iterrows():\n        table.loc[row['Time'], row['Weekday']] = row['Name']\n    return table\n"}, {"file": "output_creation.py", "path": "src/output_creation.py", "code": "# Output File Creation Functions\n\nimport pandas as pd\n\nOUTPUT_FILE = 'output.xlsx'\n\n\ndef CreateOutputExcelFile():\n    \"\"\"Generate a new Excel file for the transformed two-dimensional subject table.\"\"\"\n    return OUTPUT_FILE  # Return the filename\n\n\ndef SaveTableToExcel(table, output_file):\n    \"\"\"Save the two-dimensional table data into the newly created Excel file.\"\"\"\n    table.to_excel(output_file, index=True, header=True)\n"}, {"file": "main.py", "path": "src/main.py", "code": "# Main script\nfrom input_validation import validate_input\nfrom data_transformation import TransformToTwoDimensionTable, DataMapping\nfrom output_creation import CreateOutputExcelFile, SaveTableToExcel\n\nif __name__ == \"__main__\":\n    df = validate_input()\n    two_dim_table = TransformToTwoDimensionTable(df)\n    final_table = DataMapping(two_dim_table, df)  # Pass df to DataMapping\n    output_file = CreateOutputExcelFile()\n    SaveTableToExcel(final_table, output_file)\n"}, {"file": "Spring Semester Subjects.xlsx", "path": "src/Spring Semester Subjects.xlsx", "code": ""}], "17": [{"file": "DataPreparation.py", "path": "src/DataPreparation.py", "code": "# DataPreparation.py\nimport pandas as pd\n\nclass DataPreparation:\n    def __init__(self, filepath):\n        self.filepath = filepath\n        self.df = None\n\n    def ReadDataset(self):\n        try:\n            self.df = pd.read_excel(self.filepath)\n        except FileNotFoundError:\n            raise FileNotFoundError(f\"File not found: {self.filepath}\")\n        except Exception as e:\n            raise Exception(f\"Error reading dataset: {e}\")\n\n    def LagDependentVariable(self):\n        if self.df is None:\n            raise ValueError(\"Dataset not loaded. Call ReadDataset() first.\")\n        self.df['result_lagged'] = self.df['result'].shift(1)\n        self.df = self.df.dropna(subset=['result_lagged'])  # Remove rows with NaN introduced by shift\n\n    def PrepareIndependentVariables(self):\n        if self.df is None:\n            raise ValueError(\"Dataset not loaded. Call ReadDataset() first.\")\n        if self.df.isnull().values.any():\n            raise ValueError(\"Null values found in the dataset.\")\n        if self.df.empty:\n            raise ValueError(\"Dataset is empty.\")\n        self.X = self.df.drop(['result', 'result_lagged'], axis=1)  # Assuming 'result' is the dependent variable\n        self.y = self.df['result_lagged']"}, {"file": "ModelCreation.py", "path": "src/ModelCreation.py", "code": "# ModelCreation.py\nfrom sklearn.linear_model import LogisticRegression\nimport statsmodels.api as sm\n\nclass ModelCreation:\n    def __init__(self, X, y):\n        self.X = X\n        self.y = y\n        self.model = None\n        self.model_summary = None\n\n    def CreateLogisticModel(self):\n        self.X = sm.add_constant(self.X)\n        self.model = sm.Logit(self.y, self.X).fit()\n\n    def GenerateModelSummary(self):\n        if self.model is None:\n            raise ValueError(\"Model not created. Call CreateLogisticModel() first.\")\n        self.model_summary = self.model.summary()"}, {"file": "Output.py", "path": "src/Output.py", "code": "# Output.py\nimport pandas as pd\n\nclass Output:\n    def __init__(self, model_summary):\n        self.model_summary = model_summary\n\n    def WriteSummary(self, output_filepath):\n        if self.model_summary is None:\n            raise ValueError(\"Model summary not available.\")\n        with open('model_summary.txt', 'w') as f:\n            print(self.model_summary, file=f)\n        try:\n            summary_df = pd.read_html(str(self.model_summary))[1]  # Extract coefficients table\n            summary_df.to_excel(output_filepath, index=False)\n        except IndexError:\n            print(\"Warning: Could not extract coefficients table.  Summary saved to model_summary.txt\")"}, {"file": "main.py", "path": "src/main.py", "code": "# main.py\nfrom DataPreparation import DataPreparation\nfrom ModelCreation import ModelCreation\nfrom Output import Output\n\nfilepath = 'Gamedata.xlsx'\noutput_filepath = 'Logistic.xlsx'\n\ntry:\n    data_prep = DataPreparation(filepath)\n    data_prep.ReadDataset()\n    data_prep.LagDependentVariable()\n    data_prep.PrepareIndependentVariables()\n\n    model_creation = ModelCreation(data_prep.X, data_prep.y)\n    model_creation.CreateLogisticModel()\n    model_creation.GenerateModelSummary()\n\n    output = Output(model_creation.model_summary)\n    output.WriteSummary(output_filepath)\n\nexcept Exception as e:\n    print(f\"An error occurred: {e}\")"}, {"file": "Gamedata.xlsx", "path": "src/Gamedata.xlsx", "code": ""}, {"file": "requirements.txt", "path": "src/requirements.txt", "code": "pandas\nstatsmodels\nscikit-learn\nopenpyxl"}], "18": [{"file": "main.py", "path": "src/main.py", "code": "# Main game loop and menu handling\n\nimport game_env\nimport game_logic\n\ndef main():\n    while True:\n        # Display main menu\n        print(\"1. Start Game\")\n        print(\"2. Instructions\")\n        print(\"3. Exit\")\n\n        choice = input(\"Enter your choice: \")\n\n        if choice == '1':\n            game_env.initialize_game()\n            game_logic.game_loop()\n        elif choice == '2':\n            # TODO: Implement instructions\n            pass  \n        elif choice == '3':\n            break\n        else:\n            print(\"Invalid choice. Please try again.\")\n\nif __name__ == \"__main__\":\n    main()"}, {"file": "game_env.py", "path": "src/game_env.py", "code": "# Game environment and interactions\n\nplayer_inventory = []\ncurrent_room = \"start\"\nrooms = {\n    \"start\": {\"description\": \"You are in a dark room. There is a door to the north.\", \"north\": \"hallway\"},\n    \"hallway\": {\"description\": \"A long hallway stretches before you. There is a door to the east and west.\", \"east\": \"kitchen\", \"west\": \"bedroom\"},\n    \"kitchen\": {\"description\": \"You are in a messy kitchen. There is a knife on the counter.\", \"west\": \"hallway\"},\n    \"bedroom\": {\"description\": \"You are in a cozy bedroom. There is a key on the nightstand.\", \"east\": \"hallway\"}\n}\n\ndef initialize_game():\n    global player_inventory, current_room \n    player_inventory = []\n    current_room = \"start\"\n    print(rooms[current_room][\"description\"])\n\ndef move_player(direction):\n    global current_room\n    if direction in rooms[current_room]:\n        current_room = rooms[current_room][direction]\n        look_around()\n    else:\n        print(\"You cannot go that way.\")\n\ndef look_around():\n    print(rooms[current_room][\"description\"])\n\n\ndef pick_item(item):\n    global player_inventory\n    # Basic item pickup logic\n    if current_room == \"kitchen\" and item == \"knife\":\n        player_inventory.append(\"knife\")\n        print(\"You picked up the knife.\")\n    elif current_room == \"bedroom\" and item == \"key\":\n        player_inventory.append(\"key\")\n        print(\"You picked up the key.\")\n    else:\n        print(\"There is no such item here.\")\n\ndef check_inventory():\n    print(\"Inventory:\", player_inventory)"}, {"file": "game_logic.py", "path": "src/game_logic.py", "code": "# Game logic and updates\n\nimport game_env\n\ndef game_loop():\n    while True:\n        command = input(\"> \")\n        parse_command(command)\n\ndef parse_command(command):\n    words = command.split()\n    if words[0] == \"go\":\n        game_env.move_player(words[1])\n    elif words[0] == \"look\":\n        game_env.look_around()\n    elif words[0] == \"get\":\n        game_env.pick_item(words[1])\n    elif words[0] == \"inventory\":\n        game_env.check_inventory()\n    elif words[0] == \"quit\":\n        break #exit game loop\n    else:\n        print(\"Invalid command.\")"}], "19": [{"file": "batch_program.py", "path": "somepath/somedir/batch_program.py", "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndef ReadDeathlistData(filepath='Deathlist.csv'):\n    try:\n        df = pd.read_csv(filepath)\n        return df\n    except FileNotFoundError:\n        print(f\"Error: File not found at {filepath}\")\n        return None\n    except Exception as e:\n        print(f\"An error occurred while reading the file: {e}\")\n        return None\n\ndef ValidateDataset(df):\n    # Check for required columns\n    required_cols = ['Week', 'Deaths']\n    if not all(col in df.columns for col in required_cols):\n        print(\"Error: Dataset missing required columns (Week, Deaths)\")\n        return False  # Explicitly return False on failure\n    # Check data types\n    try:\n        df['Week'] = pd.to_datetime(df['Week'])\n        df['Deaths'] = pd.to_numeric(df['Deaths'])\n    except (ValueError, TypeError) as e:\n        print(f\"Error: Invalid data types: {e}\")\n        return False\n    return None\n\ndef ProcessData(df):\n    # No specific processing needed for this example, return df as is\n    return df\n\ndef CalculateWeeklyDeaths(df):\n    # Assuming the data is already weekly aggregated\n    return df.groupby('Week')['Deaths'].sum()\n\ndef GenerateHistogram(weekly_deaths):\n    fig, ax = plt.subplots(figsize=(10, 6))\n    ax.bar(weekly_deaths.index, weekly_deaths.values)\n    ax.set_xlabel('Week', fontsize=12)\n    ax.set_ylabel('Number of Deaths', fontsize=12)\n    ax.set_title('Weekly Deaths Histogram', fontsize=14)\n    plt.xticks(rotation=45, ha='right')\n    plt.tight_layout()\n    return fig\n\ndef OutputHistogram(histogram):\n    histogram.savefig('weekly_deaths_histogram.png')\n    print('Histogram saved to weekly_deaths_histogram.png')\n\nif __name__ == \"__main__\":\n    df = ReadDeathlistData()\n    if df is not None:\n        if ValidateDataset(df) is not False:\n            processed_data = ProcessData(df)\n            weekly_deaths = CalculateWeeklyDeaths(processed_data)\n            histogram = GenerateHistogram(weekly_deaths)\n            OutputHistogram(histogram)\n"}, {"file": "Deathlist.csv", "path": "somepath/somedir/Deathlist.csv", "code": "Week,Deaths\n2024-01-01,10\n2024-01-08,15\n2024-01-15,12\n2024-01-22,18\n2024-01-29,20\n2024-02-05,16\n2024-02-12,14\n2024-02-19,19\n2024-02-26,22\n2024-03-04,17\n"}, {"file": "requirements.txt", "path": "somepath/somedir/requirements.txt", "code": "pandas\nmatplotlib"}], "20": [{"file": "settings.py", "path": "blog_project/blog_project/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y#m7!c@r2h^-l(5&8_!s3w1m2-c0%4v!8%806=d9j72x7@3_0'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'blog',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'blog_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'blog_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "blog_project/blog_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n]"}, {"file": "asgi.py", "path": "blog_project/blog_project/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'blog_project.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "blog_project/blog_project/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'blog_project.settings')\n\napplication = get_wsgi_application()"}, {"file": "manage.py", "path": "blog_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'blog_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "urls.py", "path": "blog_project/blog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('blog/<int:pk>/', views.blog_post, name='blog_post'),\n    path('about/', views.about, name='about'),\n    path('categories/', views.categories, name='categories'),\n    path('archive/', views.archive, name='archive'),\n]"}, {"file": "views.py", "path": "blog_project/blog/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import BlogPost\n\n\ndef home(request):\n    latest_posts = BlogPost.objects.all().order_by('-id')[:3] # Get the 3 latest posts\n    return render(request, 'blog/home.html', {'latest_posts': latest_posts})\n\n\ndef blog_post(request, pk):\n    post = get_object_or_404(BlogPost, pk=pk)\n    return render(request, 'blog/blog_post.html', {'post': post})\n\n\ndef about(request):\n    return render(request, 'blog/about.html')\n\n\ndef categories(request):\n    return render(request, 'blog/categories.html')\n\n\ndef archive(request):\n    return render(request, 'blog/archive.html')\n"}, {"file": "models.py", "path": "blog_project/blog/models.py", "code": "from django.db import models\n\n\nclass BlogPost(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    # Add other fields as needed (e.g., author, date, category)\n\nclass Category(models.Model):\n    name = models.CharField(max_length=100)\n\nclass Comment(models.Model):\n    post = models.ForeignKey(BlogPost, on_delete=models.CASCADE)\n    # Add other fields as needed."}, {"file": "home.html", "path": "blog_project/blog/templates/blog/home.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <section id=\"home-section\" class=\"home-section\">\n        <h1 id=\"home-title\" class=\"home-title\">Home</h1>\n        <div id=\"posts-container\" class=\"posts-container\">\n        {% for post in latest_posts %}\n            <article id=\"post-{{ post.id }}\" class=\"post\">\n                <h2 id=\"post-title-{{ post.id }}\" class=\"post-title\">{{ post.title }}</h2>\n            </article>\n        {% endfor %}\n        </div>\n    </section>\n{% endblock %}"}, {"file": "blog_post.html", "path": "blog_project/blog/templates/blog/blog_post.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<article id=\"blog-post-{{ post.id }}\" class=\"blog-post\">\n    <h1 id=\"blog-post-title-{{ post.id }}\" class=\"blog-post-title\">{{ post.title }}</h1>\n    <p id=\"blog-post-content-{{ post.id }}\" class=\"blog-post-content\">{{ post.content }}</p>\n</article>\n{% endblock %}"}, {"file": "about.html", "path": "blog_project/blog/templates/blog/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"about-section\" class=\"about-section\">\n    <h1 id=\"about-title\" class=\"about-title\">About</h1>\n</section>\n{% endblock %}"}, {"file": "categories.html", "path": "blog_project/blog/templates/blog/categories.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"categories-section\" class=\"categories-section\">\n    <h1 id=\"categories-title\" class=\"categories-title\">Categories</h1>\n</section>\n{% endblock %}"}, {"file": "archive.html", "path": "blog_project/blog/templates/blog/archive.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<section id=\"archive-section\" class=\"archive-section\">\n    <h1 id=\"archive-title\" class=\"archive-title\">Archive</h1>\n</section>\n{% endblock %}"}, {"file": "base.html", "path": "blog_project/blog/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}]}