{"1": "```json\n[\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"bmi_calculator/urls.py\",\n    \"code\": \"from django.urls import path\\\\nfrom . import views\\\\n\\\\nurlpatterns = [\\\\n    path('', views.bmi_calculator, name='bmi_calculator'),\\\\n]\"\n  },\n  {\n    \"file\": \"views.py\",\n    \"path\": \"bmi_calculator/views.py\",\n    \"code\": \"from django.shortcuts import render\\\\nfrom django.http import HttpResponse\\\\n\\\\ndef bmi_calculator(request):\\\\n    if request.method == 'POST':\\\\n        # Get weight and height from POST data\\\\n        # Perform BMI calculation\\\\n        # ...\\\\n        return render(request, 'bmi_calculator.html', {'bmi': calculated_bmi, 'category': bmi_category})\\\\n    else:\\\\n        return render(request, 'bmi_calculator.html')\"\n  },\n  {\n    \"file\": \"models.py\",\n    \"path\": \"bmi_calculator/models.py\",\n    \"code\": \"\"\n  },\n  {\n    \"file\": \"forms.py\",\n    \"path\": \"bmi_calculator/forms.py\",\n    \"code\": \"\"  // Or could include a form definition if needed\n  },\n  {\n    \"file\": \"bmi_calculator.html\",\n    \"path\": \"bmi_calculator/templates/bmi_calculator.html\",\n    \"code\": \"<form method=\\\\\"post\\\\\">\\\\n    {% csrf_token %}\\\\n    <!-- Input fields for weight, height, unit selection -->\\\\n    <button type=\\\\\"submit\\\\\">Calculate BMI</button>\\\\n</form>\\\\n\\\\n{% if bmi %}\\\\n    <p>Your BMI: {{ bmi }}</p>\\\\n    <p>Category: {{ category }}</p>\\\\n{% endif %}\"\n  }\n]\n```\n", "2": [{"file": "urls.py", "path": "currency_converter/urls.py", "code": "\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('history/', views.history, name='history'),\n    path('settings/', views.settings, name='settings'),\n    # Add API endpoint for fetching exchange rates\n    path('api/exchange_rate/', views.get_exchange_rate, name='get_exchange_rate'),\n]\n"}, {"file": "views.py", "path": "currency_converter/views.py", "code": "\nfrom django.shortcuts import render\nfrom django.http import JsonResponse\n# Add imports for currency conversion and history\n# Example (using a hypothetical library):\n# from currency_converter import convert_currency\n# from .models import ConversionHistory\n\ndef home(request):\n    # ... logic for fetching currency list and other data\n    return render(request, 'currency_converter/home.html', context)\n\ndef history(request):\n    # ... logic for fetching and displaying conversion history\n    return render(request, 'currency_converter/history.html', context)\n\ndef settings(request):\n    # ... logic for handling settings form and update\n    return render(request, 'currency_converter/settings.html', context)\n\ndef get_exchange_rate(request):\n    # ... logic to get exchange rate from external API or database\n    return JsonResponse({'exchange_rate': exchange_rate})\n"}, {"file": "models.py", "path": "currency_converter/models.py", "code": "\nfrom django.db import models\n\n# Model for storing conversion history\nclass ConversionHistory(models.Model):\n    source_currency = models.CharField(max_length=3)\n    target_currency = models.CharField(max_length=3)\n    amount = models.DecimalField(max_digits=15, decimal_places=2)\n    converted_amount = models.DecimalField(max_digits=15, decimal_places=2)\n    exchange_rate = models.DecimalField(max_digits=10, decimal_places=5)\n    conversion_time = models.DateTimeField(auto_now_add=True)\n"}, {"file": "home.html", "path": "currency_converter/templates/currency_converter/home.html", "code": "\n<!-- HTML structure for currency selection, input, and conversion display -->\n<!-- Includes JavaScript for making API calls to fetch exchange rate and update converted amount -->\n"}, {"file": "history.html", "path": "currency_converter/templates/currency_converter/history.html", "code": "\n<!-- HTML to display the conversion history table -->\n"}, {"file": "settings.html", "path": "currency_converter/templates/currency_converter/settings.html", "code": "\n<!-- HTML for settings form (decimal places, theme selection) -->\n"}], "3": "```json\n[\n  {\n    \"file\": \"views.py\",\n    \"path\": \"password_generator/views.py\",\n    \"code\": \"\"\"\nfrom django.shortcuts import render\nfrom django.http import JsonResponse\nimport random\nimport string\n\ndef password_generator(request):\n    if request.method == 'POST':\n        length = int(request.POST.get('length', 12))\n        uppercase = request.POST.get('uppercase', False)\n        lowercase = request.POST.get('lowercase', False)\n        numbers = request.POST.get('numbers', False)\n        symbols = request.POST.get('symbols', False)\n        exclude_similar = request.POST.get('exclude_similar', False)\n        exclude_ambiguous = request.POST.get('exclude_ambiguous', False)\n\n        characters = ''\n        if uppercase:\n            characters += string.ascii_uppercase\n        if lowercase:\n            characters += string.ascii_lowercase\n        if numbers:\n            characters += string.digits\n        if symbols:\n            characters += string.punctuation\n\n        if exclude_similar:\n            similar_chars = 'il1Lo0O'\n            characters = ''.join(c for c in characters if c not in similar_chars)\n\n        if exclude_ambiguous:\n            ambiguous_chars = '{}[]()/\\\\\\\\\\\\'\"`~,;:.<>'\n            characters = ''.join(c for c in characters if c not in ambiguous_chars)\n\n\n        if not characters:\n            return JsonResponse({'error': 'Please select at least one character type.'}, status=400)\n\n\n        password = ''.join(random.choice(characters) for i in range(length))\n\n        return JsonResponse({'password': password})\n\n    return render(request, 'password_generator/index.html')\n\n\"\"\"\n  },\n  {\n    \"file\": \"urls.py\",\n    \"path\": \"password_generator/urls.py\",\n    \"code\": \"\"\"\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.password_generator, name='password_generator'),\n]\n\"\"\"\n  },\n  {\n    \"file\": \"index.html\",\n    \"path\": \"password_generator/templates/password_generator/index.html\",\n    \"code\": \"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Password Generator</title>\n</head>\n<body>\n    <h1>Password Generator</h1>\n    <form id=\"password-form\" method=\"post\">\n        {% csrf_token %}\n        <label for=\"length\">Password Length:</label>\n        <input type=\"number\" id=\"length\" name=\"length\" value=\"12\" min=\"1\"><br><br>\n\n        <input type=\"checkbox\" id=\"uppercase\" name=\"uppercase\">\n        <label for=\"uppercase\">Include Uppercase Letters</label><br>\n\n        <input type=\"checkbox\" id=\"lowercase\" name=\"lowercase\">\n        <label for=\"lowercase\">Include Lowercase Letters</label><br>\n\n        <input type=\"checkbox\" id=\"numbers\" name=\"numbers\">\n        <label for=\"numbers\">Include Numbers</label><br>\n\n        <input type=\"checkbox\" id=\"symbols\" name=\"symbols\">\n        <label for=\"symbols\">Include Symbols</label><br>\n\n        <input type=\"checkbox\" id=\"exclude_similar\" name=\"exclude_similar\">\n        <label for=\"exclude_similar\">Exclude Similar Characters</label><br>\n\n        <input type=\"checkbox\" id=\"exclude_ambiguous\" name=\"exclude_ambiguous\">\n        <label for=\"exclude_ambiguous\">Exclude Ambiguous Characters</label><br><br>\n\n\n\n        <button type=\"submit\">Generate Password</button>\n    </form>\n    <div id=\"password-result\"></div>\n\n    <script>\n        const form = document.getElementById('password-form');\n        const resultDiv = document.getElementById('password-result');\n\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n\n            const formData = new FormData(form);\n\n            fetch('', {\n                method: 'POST',\n                body: formData\n            })\n            .then(response => {\n                if (!response.ok) {\n                  if (response.status === 400) {\n                    return response.json().then(data => {\n                      throw new Error(data.error);\n                    });\n                  }\n                  throw new Error('Network response was not ok.');\n                }\n                return response.json();\n\n            })\n            .then(data => {\n                resultDiv.textContent = `Generated Password: ${data.password}`;\n            })\n            .catch(error => {\n                resultDiv.textContent = `Error: ${error.message}`;\n            });\n\n        });\n\n    </script>\n\n</body>\n</html>\n\"\"\"\n  }\n]\n```", "4": [{"file": "urls.py", "path": "qr_generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.homepage, name='homepage'),\n    path('customize/', views.customize, name='customize'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "qr_generator/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef homepage(request):\n    return render(request, 'qr_generator/homepage.html')\n\ndef customize(request):\n    return render(request, 'qr_generator/customize.html')\n\ndef about(request):\n    return render(request, 'qr_generator/about.html')\n"}, {"file": "homepage.html", "path": "qr_generator/templates/qr_generator/homepage.html", "code": "<form method=\"post\">\n    {% csrf_token %}\n    <!-- Input text/URL -->\n    <!-- Generate QR code button -->\n    <!-- Download QR code options -->\n    <!-- Link to Customization Page (if applicable) -->\n</form>"}, {"file": "customize.html", "path": "qr_generator/templates/qr_generator/customize.html", "code": "<form method=\"post\">\n    {% csrf_token %}\n    <!-- Select color -->\n    <!-- Add logo -->\n    <!-- Set error correction level -->\n    <!-- Preview customized QR code --> \n</form>"}, {"file": "about.html", "path": "qr_generator/templates/qr_generator/about.html", "code": "<!-- Learn about the company/website -->\n<!-- Contact information -->"}, {"file": "models.py", "path": "qr_generator/models.py", "code": ""}, {"file": "forms.py", "path": "qr_generator/forms.py", "code": ""}], "5": [{"file": "views.py", "path": "markdown_converter/views.py", "code": "from django.shortcuts import render\n\n\ndef main_page(request):\n    return render(request, 'main_page.html')\n\n# Optional: Settings/Preferences\ndef settings(request):\n    return render(request, 'settings.html')\n\n# Optional: Examples/Help\ndef examples(request):\n    return render(request, 'examples.html')"}, {"file": "urls.py", "path": "markdown_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.main_page, name='main_page'),\n    # Optional: Settings/Preferences\n    path('settings/', views.settings, name='settings'),\n    # Optional: Examples/Help\n    path('examples/', views.examples, name='examples'),\n]"}, {"file": "main_page.html", "path": "markdown_converter/templates/main_page.html", "code": "<textarea id=\"markdown-input\"></textarea>\n<div id=\"html-output\"></div>\n<button id=\"convert-button\">Convert</button>\n<button id=\"copy-button\">Copy HTML</button>\n<button id=\"clear-input\">Clear Input</button>\n<button id=\"clear-output\">Clear Output</button>"}, {"file": "settings.html", "path": "markdown_converter/templates/settings.html", "code": "<!-- Optional Settings -->"}, {"file": "examples.html", "path": "markdown_converter/templates/examples.html", "code": "<!-- Optional Examples/Help -->"}], "6": [{"file": "urls.py", "path": "todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('analytics/', views.analytics, name='analytics'),\n    path('settings/', views.settings, name='settings'),\n]"}, {"file": "views.py", "path": "todo_app/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'todo_app/home.html')\n\ndef analytics(request):\n    return render(request, 'todo_app/analytics.html')\n\ndef settings(request):\n    return render(request, 'todo_app/settings.html')\n\n"}, {"file": "models.py", "path": "todo_app/models.py", "code": "from django.db import models\n\nclass Todo(models.Model):\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True)\n    due_date = models.DateField(null=True, blank=True)\n    completed = models.BooleanField(default=False)\n    # Add other fields like project/tag, creation_date etc. as needed\n\n    def __str__(self):\n        return self.title"}, {"file": "home.html", "path": "todo_app/templates/todo_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Home</h1>\n    <p>Todo List Functionality</p>\n{% endblock %}"}, {"file": "analytics.html", "path": "todo_app/templates/todo_app/analytics.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Analytics</h1>\n    <p>Charts and Data Visualization</p>\n{% endblock %}"}, {"file": "settings.html", "path": "todo_app/templates/todo_app/settings.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Settings</h1>\n    <p>Manage Account and Preferences</p>\n{% endblock %}"}], "7": [{"file": "urls.py", "path": "budget_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('transactions/', views.transactions, name='transactions'),\n    path('budget/', views.budget, name='budget'),\n    path('reports/', views.reports, name='reports'),\n    path('settings/', views.settings, name='settings'),\n]"}, {"file": "views.py", "path": "budget_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'budget_app/home.html')\n\ndef dashboard(request):\n    return render(request, 'budget_app/dashboard.html')\n\ndef transactions(request):\n    return render(request, 'budget_app/transactions.html')\n\ndef budget(request):\n    return render(request, 'budget_app/budget.html')\n\ndef reports(request):\n    return render(request, 'budget_app/reports.html')\n\ndef settings(request):\n    return render(request, 'budget_app/settings.html')\n"}, {"file": "models.py", "path": "budget_app/models.py", "code": "from django.db import models\n\nclass Transaction(models.Model):\n    # Define fields like amount, date, category, description\n    pass\n\n# Other models like Budget, Category, etc. can be added here"}, {"file": "forms.py", "path": "budget_app/forms.py", "code": "from django import forms\nfrom .models import Transaction\n\nclass TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = ['amount', 'date', 'category', 'description'] # Add fields as needed"}, {"file": "home.html", "path": "budget_app/templates/budget_app/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Welcome to the Budget App</h1>\n    <!-- Sign Up, Log In, Demo Account forms/links -->\n{% endblock %}"}, {"file": "dashboard.html", "path": "budget_app/templates/budget_app/dashboard.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Dashboard</h1>\n    <!-- Display balance, chart, add transaction button, etc. -->\n{% endblock %}"}, {"file": "transactions.html", "path": "budget_app/templates/budget_app/transactions.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Transactions</h1>\n    <!-- Display list of transactions, filtering options, etc. -->\n{% endblock %}"}, {"file": "budget.html", "path": "budget_app/templates/budget_app/budget.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Budget</h1>\n    <!-- Display budget limits, progress, and options to adjust limits -->\n{% endblock %}"}, {"file": "reports.html", "path": "budget_app/templates/budget_app/reports.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Reports</h1>\n    <!-- Display options for generating and exporting reports -->\n{% endblock %}"}, {"file": "settings.html", "path": "budget_app/templates/budget_app/settings.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Settings</h1>\n    <!-- Options for changing password, managing account details, and contacting support -->\n{% endblock %}"}], "8": [{"file": "urls.py", "path": "calendar_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.landing_page, name='landing_page'),\n    path('calendar/', views.main_calendar_view, name='main_calendar_view'),\n    path('event/<int:event_id>/', views.event_details, name='event_details'),\n    path('settings/', views.settings, name='settings'),\n    # Add paths for sign-up, login, guest view, etc.\n]"}, {"file": "views.py", "path": "calendar_app/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef landing_page(request):\n    return render(request, 'calendar_app/landing_page.html')\n\ndef main_calendar_view(request):\n    return render(request, 'calendar_app/main_calendar_view.html')\n\ndef event_details(request, event_id):\n    return render(request, 'calendar_app/event_details.html', {'event_id': event_id})\n\ndef settings(request):\n    return render(request, 'calendar_app/settings.html')"}, {"file": "models.py", "path": "calendar_app/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\n# Create your models here.\nclass Event(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()\n    # Add other fields like reminders, sharing, RSVP, etc."}, {"file": "forms.py", "path": "calendar_app/forms.py", "code": "from django import forms\nfrom .models import Event\n\nclass EventForm(forms.ModelForm):\n    class Meta:\n        model = Event\n        fields = ['title', 'description', 'start_time', 'end_time'] # Add other fields as needed"}, {"file": "landing_page.html", "path": "calendar_app/templates/calendar_app/landing_page.html", "code": "<!-- Landing page content -->\n<h1>Welcome to the Calendar App</h1>\n<a href=\"{% url 'main_calendar_view' %}\">View Calendar</a>"}, {"file": "main_calendar_view.html", "path": "calendar_app/templates/calendar_app/main_calendar_view.html", "code": "<!-- Main calendar view content -->\n<h1>Calendar</h1>"}, {"file": "event_details.html", "path": "calendar_app/templates/calendar_app/event_details.html", "code": "<!-- Event details content -->\n<h1>Event Details</h1>\n<p>Event ID: {{ event_id }}</p>"}, {"file": "settings.html", "path": "calendar_app/templates/calendar_app/settings.html", "code": "<!-- Settings page content -->\n<h1>Settings</h1>"}], "9": [{"file": "urls.py", "path": "my_project/my_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.homepage, name='homepage'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('contact/', views.contact, name='contact'),\n]"}, {"file": "views.py", "path": "my_project/my_app/views.py", "code": "from django.shortcuts import render\n\ndef homepage(request):\n    return render(request, 'my_app/homepage.html')\n\ndef features(request):\n    return render(request, 'my_app/features.html')\n\ndef pricing(request):\n    return render(request, 'my_app/pricing.html')\n\ndef contact(request):\n    return render(request, 'my_app/contact.html')\n"}, {"file": "homepage.html", "path": "my_project/my_app/templates/my_app/homepage.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Homepage</h1>\n<ul>\n    <li>Understand natural language</li>\n    <li>Provide helpful and accurate responses</li>\n    <li>Learn and improve over time</li>\n    <li>Handle different conversation styles</li>\n</ul>\n{% endblock %}"}, {"file": "features.html", "path": "my_project/my_app/templates/my_app/features.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Features</h1>\n<ul>\n    <li>Personalization</li>\n    <li>Multi-language support</li>\n    <li>Seamless integration with other platforms</li>\n    <li>24/7 availability</li>\n</ul>\n{% endblock %}"}, {"file": "pricing.html", "path": "my_project/my_app/templates/my_app/pricing.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Pricing</h1>\n<ul>\n    <li>Transparent pricing plans</li>\n    <li>Flexible subscription options</li>\n    <li>Free trial or demo</li>\n</ul>\n{% endblock %}"}, {"file": "contact.html", "path": "my_project/my_app/templates/my_app/contact.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<h1>Contact</h1>\n<ul>\n    <li>Easy to reach customer support</li>\n    <li>Responsive and helpful support team</li>\n</ul>\n{% endblock %}"}, {"file": "base.html", "path": "my_project/my_app/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Chatbot</title>\n</head>\n<body>\n    <nav>\n        <a href=\"{% url 'homepage' %}\">Homepage</a>\n        <a href=\"{% url 'features' %}\">Features</a>\n        <a href=\"{% url 'pricing' %}\">Pricing</a>\n        <a href=\"{% url 'contact' %}\">Contact</a>\n    </nav>\n    <main>\n        {% block content %}{% endblock %}\n    </main>\n</body>\n</html>"}], "10": [{"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('food_search/', views.food_search, name='food_search'),\n    path('profile/', views.profile, name='profile'),\n    path('reports/', views.reports, name='reports'),\n    path('charts/', views.charts, name='charts'),\n    # Add other URL patterns as needed\n]"}, {"file": "views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n    return render(request, 'calorie_tracker/home.html')\n\ndef dashboard(request):\n    return render(request, 'calorie_tracker/dashboard.html')\n\ndef food_search(request):\n    return render(request, 'calorie_tracker/food_search.html')\n\ndef profile(request):\n    return render(request, 'calorie_tracker/profile.html')\n\ndef reports(request):\n    return render(request, 'calorie_tracker/reports.html')\n\ndef charts(request):\n    return render(request, 'calorie_tracker/charts.html')"}, {"file": "models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\n# Create your models here.\nclass Food(models.Model):\n    name = models.CharField(max_length=200)\n    calories = models.FloatField()\n    # Add other nutritional information fields as needed\n\nclass UserFoodIntake(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    food = models.ForeignKey(Food, on_delete=models.CASCADE)\n    quantity = models.FloatField()\n    date_consumed = models.DateField()\n\n# Add other models as needed (e.g., for user profiles, custom foods)"}, {"file": "forms.py", "path": "calorie_tracker/forms.py", "code": "from django import forms\nfrom .models import Food, UserFoodIntake\n\n# Create your forms here.\nclass FoodForm(forms.ModelForm):\n    class Meta:\n        model = Food\n        fields = '__all__'\n\nclass UserFoodIntakeForm(forms.ModelForm):\n    class Meta:\n        model = UserFoodIntake\n        fields = '__all__'"}, {"file": "home.html", "path": "calorie_tracker/templates/calorie_tracker/home.html", "code": "<!-- Home page content -->\n<h1>Welcome to the Calorie Tracker!</h1>\n<a href=\"{% url 'sign_up' %}\">Sign Up</a>\n<a href=\"{% url 'log_in' %}\">Log In</a>\n<a href=\"{% url 'learn_more' %}\">Learn More</a>"}, {"file": "dashboard.html", "path": "calorie_tracker/templates/calorie_tracker/dashboard.html", "code": "<!-- Dashboard content -->"}, {"file": "food_search.html", "path": "calorie_tracker/templates/calorie_tracker/food_search.html", "code": "<!-- Food search content -->"}, {"file": "profile.html", "path": "calorie_tracker/templates/calorie_tracker/profile.html", "code": "<!-- Profile Content -->"}, {"file": "reports.html", "path": "calorie_tracker/templates/calorie_tracker/reports.html", "code": "<!-- Report Content -->"}, {"file": "charts.html", "path": "calorie_tracker/templates/calorie_tracker/charts.html", "code": "<!-- Charts Content -->"}], "11": [{"file": "urls.py", "path": "mysite/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n    path('generate/', views.generate, name='generate'),\n]"}, {"file": "views.py", "path": "mysite/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef about(request):\n    return render(request, 'about.html')\n\ndef generate(request):\n    return render(request, 'generate.html')\n\n"}, {"file": "home.html", "path": "mysite/templates/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Welcome to the Password Generator</h1>\n    <a href=\"{% url 'generate' %}\">Generate Password</a>\n{% endblock %}"}, {"file": "about.html", "path": "mysite/templates/about.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>About This Website</h1>\n    <p>This website generates random passwords for you.</p>\n{% endblock %}"}, {"file": "generate.html", "path": "mysite/templates/generate.html", "code": "{% extends 'base.html' %}\n{% block content %}\n    <h1>Generate Password</h1>\n    <!-- Password generation logic and form -->\n{% endblock %}"}, {"file": "base.html", "path": "mysite/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Password Generator</title>\n</head>\n<body>\n    <nav>\n        <a href=\"{% url 'home' %}\">Home</a>\n        <a href=\"{% url 'about' %}\">About</a>\n    </nav>\n    <div class=\"content\">\n        {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}], "12": [{"file": "urls.py", "path": "expense_management/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.employee_dashboard, name='employee_dashboard'),\n    path('submit_claim/', views.submit_claim, name='submit_claim'),\n    path('view_claim_status/', views.view_claim_status, name='view_claim_status'),\n    path('view_claim_history/', views.view_claim_history, name='view_claim_history'),\n    path('admin/', views.admin_dashboard, name='admin_dashboard'),\n    path('admin/view_pending_claims/', views.view_pending_claims, name='view_pending_claims'),\n    path('admin/approve_claim/<int:claim_id>/', views.approve_claim, name='approve_claim'),\n    path('admin/reject_claim/<int:claim_id>/', views.reject_claim, name='reject_claim'),\n    path('admin/view_claim_details/<int:claim_id>/', views.view_claim_details, name='view_claim_details'),\n    path('admin/budget_control/', views.budget_control, name='budget_control'),\n    path('admin/set_budget/', views.set_budget, name='set_budget'),\n    path('admin/view_expense_reports/', views.view_expense_reports, name='view_expense_reports'),\n]"}, {"file": "views.py", "path": "expense_management/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Claim\nfrom django.http import HttpResponse\nfrom django.contrib.auth.decorators import login_required, user_passes_test\n\n# Placeholder functions - replace with actual logic\n\n@login_required\ndef employee_dashboard(request):\n    return render(request, 'expense_management/employee_dashboard.html')\n\n# ... other employee view functions ...\n\n@user_passes_test(lambda u: u.is_superuser) # Example admin check\ndef admin_dashboard(request):\n    return render(request, 'expense_management/admin_dashboard.html')\n\n# ... other admin view functions ..."}, {"file": "models.py", "path": "expense_management/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Claim(models.Model):\n    EXPENSE_TYPES = (\n        ('TRAVEL', 'Travel'),\n        ('LABOR', 'Labor'),\n        ('MANAGEMENT', 'Management'),\n        ('EQUIPMENT', 'Equipment'),\n    )\n\n    STATUS_CHOICES = (\n        ('PENDING', 'Pending'),\n        ('APPROVED', 'Approved'),\n        ('REJECTED', 'Rejected'),\n    )\n\n    employee = models.ForeignKey(User, on_delete=models.CASCADE)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    description = models.TextField()\n    expense_type = models.CharField(max_length=20, choices=EXPENSE_TYPES)\n    supporting_documents = models.FileField(upload_to='supporting_documents/', blank=True, null=True)\n    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default='PENDING')\n    # ... other fields like date, rejection_reason etc.\n"}, {"file": "forms.py", "path": "expense_management/forms.py", "code": "from django import forms\nfrom .models import Claim\n\nclass ClaimForm(forms.ModelForm):\n    class Meta:\n        model = Claim\n        fields = ['amount', 'description', 'expense_type', 'supporting_documents'] # Add other fields as needed"}, {"file": "admin.py", "path": "expense_management/admin.py", "code": "from django.contrib import admin\nfrom .models import Claim\n\nadmin.site.register(Claim)"}], "13": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('customer/', views.customer_list, name='customer_list'),\n    path('customer/<int:customer_id>/', views.customer_detail, name='customer_detail'),\n    path('product/', views.product_list, name='product_list'),\n    path('purchase/', views.purchase_record_list, name='purchase_record_list'),\n    path('marketing/', views.marketing_dashboard, name='marketing_dashboard'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\n# Placeholder functions\ndef customer_list(request):\n    return render(request, 'myapp/customer_list.html')\n\ndef customer_detail(request, customer_id):\n    return render(request, 'myapp/customer_detail.html', {'customer_id': customer_id})\n\ndef product_list(request):\n    return render(request, 'myapp/product_list.html')\n\ndef purchase_record_list(request):\n    return render(request, 'myapp/purchase_record_list.html')\n\ndef marketing_dashboard(request):\n    return render(request, 'myapp/marketing_dashboard.html')\n"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=255)\n    company = models.CharField(max_length=255)\n    phone = models.CharField(max_length=20)\n    # Add other fields like birthday, age, sex, etc.\n\nclass Product(models.Model):\n    name = models.CharField(max_length=255)\n    category = models.CharField(max_length=255)\n    recommended_price = models.DecimalField(max_digits=10, decimal_places=2)\n\nclass PurchaseRecord(models.Model):\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    # Add other fields like purchase_date, quantity, etc.\n"}, {"file": "customer_list.html", "path": "myproject/myapp/templates/myapp/customer_list.html", "code": "<h1>Customer List</h1>\n\n<ul>\n    {% for customer in customers %}\n        <li><a href=\"{% url 'customer_detail' customer.id %}\">{{ customer.name }}</a></li>\n    {% endfor %}\n</ul>\n\n<a href=\"#\">Add New Customer</a>\n"}, {"file": "customer_detail.html", "path": "myproject/myapp/templates/myapp/customer_detail.html", "code": "<h1>Customer Details</h1>\n\n<p>Customer ID: {{ customer_id }}</p>\n\n<p>Name: </p>\n<p>Birthday: </p>\n<p>Age: </p>\n<p>Sex: </p>\n<p>Company: </p>\n<p>Phone Number: </p>\n\n<h2>Preferred Products</h2>\n<ul>\n    {% for product in preferred_products %}\n    <li>{{ product.name }}</li>\n    {% endfor %}\n</ul>\n\n<h2>Purchase History</h2>\n<ul>\n    {% for purchase in purchase_history %}\n    <li>{{ purchase.product.name }} - {{ purchase.purchase_date }}</li>\n    {% endfor %}\n</ul>\n"}, {"file": "product_list.html", "path": "myproject/myapp/templates/myapp/product_list.html", "code": "<h1>Product List</h1>"}, {"file": "purchase_record_list.html", "path": "myproject/myapp/templates/myapp/purchase_record_list.html", "code": "<h1>Purchase Records</h1>"}, {"file": "marketing_dashboard.html", "path": "myproject/myapp/templates/myapp/marketing_dashboard.html", "code": "<h1>Marketing Dashboard</h1>"}], "14": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef helloworld(request):\n    return render(request, 'myapp/helloworld.html')\n"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/myapp/helloworld.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Hello, world!</title>\n</head>\n<body>\n    <h1>Hello, world!</h1>\n</body>\n</html>"}], "15": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'myapp/index.html')\n\ndef helloworld(request):\n    return render(request, 'myapp/helloworld.html')\n"}, {"file": "index.html", "path": "myproject/myapp/templates/myapp/index.html", "code": "<a href=\"{% url 'helloworld' %}\">Go to Hello World Button</a>"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/myapp/helloworld.html", "code": "<h1>Hello, World!</h1>"}], "16": [{"file": "excel_reader.py", "path": "utils/excel_reader.py", "code": "def read_excel_file(file_path):\n    # Implement reading logic here\n    pass"}, {"file": "timetable_creator.py", "path": "utils/timetable_creator.py", "code": "def create_2d_timetable(subject_list):\n    # Implement timetable creation logic here\n    pass"}, {"file": "excel_writer.py", "path": "utils/excel_writer.py", "code": "def write_to_excel_file(timetable, file_path):\n    # Implement writing logic here\n    pass"}, {"file": "main.py", "path": "main.py", "code": "import utils.excel_reader as excel_reader\nimport utils.timetable_creator as timetable_creator\nimport utils.excel_writer as excel_writer\n\nINPUT_FILE = 'Spring Semester Subjects.xlsx'\nOUTPUT_FILE = 'Subject_Table.xlsx'\n\ndef main():\n    try:\n        subject_list = excel_reader.read_excel_file(INPUT_FILE)\n        timetable = timetable_creator.create_2d_timetable(subject_list)\n        excel_writer.write_to_excel_file(timetable, OUTPUT_FILE)\n    except Exception as e:\n        print(f\"Error: {e}\")\n\nif __name__ == \"__main__\":\n    main()"}], "17": [{"file": "main.py", "path": "src/main.py", "code": "# Load necessary libraries\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\n\n# Function to load data\ndef load_data(filepath):\n    # Code to load data from Excel file (filepath)\n    pass  # Placeholder\n\n# Function to create logistic regression model\ndef create_model(data):\n    # Code to create logistic regression model with one-period lag\n    pass  # Placeholder\n\n# Function to output model summary\ndef output_summary(model, filepath):\n    # Code to save model summary to Excel file (filepath)\n    pass  # Placeholder\n\n# Main execution block\nif __name__ == '__main__':\n    data = load_data('Gamedata.xlsx')\n    model = create_model(data)\n    output_summary(model, 'Logistic.xlsx')"}], "18": [{"file": "game.py", "path": "somepath/somedir/game.py", "code": "\nimport random\nimport json\n\ndef show_intro():\n    print(\"Welcome to the Python Bashcrawl!\")\n    print(\"You find yourself in a dark dungeon...\")\n\ndef create_player():\n    player = {\"name\": input(\"Enter your name: \"), \"health\": 100, \"attack\": 10, \"gold\": 0}\n    return player\n\ndef create_monster():\n    monster_names = [\"Goblin\", \"Orc\", \"Troll\", \"Skeleton\"]\n    monster_name = random.choice(monster_names)\n    monster = {\"name\": monster_name, \"health\": random.randint(20, 50), \"attack\": random.randint(5, 15)}\n    return monster\n\ndef combat(player, monster):\n    print(f\"You encountered a {monster['name']}!\")\n    while player[\"health\"] > 0 and monster[\"health\"] > 0:\n        print(f\"Your health: {player['health']}, {monster['name']}'s health: {monster['health']}\")\n        action = input(\"Attack or Flee? (a/f): \").lower()\n        if action == \"a\":\n            monster[\"health\"] -= player[\"attack\"]\n            print(f\"You hit the {monster['name']} for {player['attack']} damage!\")\n            if monster[\"health\"] <= 0:\n                print(f\"You defeated the {monster['name']}!\")\n                player[\"gold\"] += random.randint(10, 30)\n                print(f\"You found {player['gold']} gold!\")\n                break\n            player[\"health\"] -= monster[\"attack\"]\n            print(f\"The {monster['name']} hit you for {monster['attack']} damage!\")\n        elif action == \"f\":\n            print(\"You fled the battle!\")\n            break\n        else:\n            print(\"Invalid action!\")\n    if player[\"health\"] <= 0:\n        print(\"You died!\")\n\n\ndef game_loop(player):\n    while player[\"health\"] > 0:\n         combat(player, create_monster())\n         if player[\"health\"] <=0:\n             break\n         continue_playing = input(\"Continue exploring? (y/n): \").lower()\n         if continue_playing != \"y\":\n             break\n    print(\"Game Over\")\n\n\ndef generate_function_checklist():\n\n    checklist = [\n        {\"page\": \"Intro\", \"function\": [{\"function\": \"show_intro\", \"description\": \"Displays the game introduction.\"}]},\n        {\"page\": \"Character Creation\", \"function\": [{\"function\": \"create_player\", \"description\": \"Creates the player character.\"}]},\n        {\"page\": \"Monster Generation\", \"function\": [{\"function\": \"create_monster\", \"description\": \"Creates a random monster.\"}]},\n        {\"page\": \"Combat\", \"function\": [{\"function\": \"combat\", \"description\": \"Handles the combat between the player and a monster.\"}]},\n        {\"page\": \"Game Loop\", \"function\": [{\"function\": \"game_loop\", \"description\": \"Runs the main game loop.\"}]}\n    ]\n    return json.dumps(checklist, indent=4)\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    show_intro()\n    player = create_player()\n    game_loop(player)\n    print(generate_function_checklist())\n"}], "19": [{"file": "death_histogram.py", "path": "somepath/somedir/death_histogram.py", "code": "# Reads the Deathlist.csv file containing death dates.\ndef read_csv(filepath):\n    #Implementation to read csv\n    pass\n\n# Counts the number of deaths for each week of the year.\ndef calculate_weekly_deaths(dates):\n    #Implementation to calculate weekly deaths\n    pass\n\n# Creates a text-based histogram visualizing weekly death counts.\ndef generate_histogram(weekly_counts):\n    #Implementation to generate histogram\n    pass\n\n# Main function\ndef main():\n    filepath = \"Deathlist.csv\"\n    try:\n        dates = read_csv(filepath)\n        weekly_counts = calculate_weekly_deaths(dates)\n        generate_histogram(weekly_counts)\n    except FileNotFoundError:\n        print(\"Error: Deathlist.csv not found.\")\n\nif __name__ == \"__main__\":\n    main()"}], "20": [{"file": "urls.py", "path": "myblog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('blog/<slug:slug>/', views.post_detail, name='post_detail'),\n    path('category/<slug:slug>/', views.category_detail, name='category_detail'),\n    path('search/', views.search, name='search'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "myblog/views.py", "code": "from django.shortcuts import render, get_object_or_404\nfrom .models import Post, Category\n\ndef home(request):\n    latest_posts = Post.objects.all().order_by('-created_at')[:5] # Example: Latest 5 posts\n    context = {'latest_posts': latest_posts}\n    return render(request, 'blog/home.html', context)\n\ndef post_detail(request, slug):\n    post = get_object_or_404(Post, slug=slug)\n    context = {'post': post}\n    return render(request, 'blog/post_detail.html', context)\n\ndef category_detail(request, slug):\n    category = get_object_or_404(Category, slug=slug)\n    posts = category.posts.all()\n    context = {'category': category, 'posts': posts}\n    return render(request, 'blog/category_detail.html', context)\n\n\ndef search(request):\n    query = request.GET.get('q')\n    results = Post.objects.none() # Initialize empty queryset\n    if query:\n       results = Post.objects.filter(title__icontains=query) # Example search by title\n    context = {'results': results, 'query': query}\n    return render(request, 'blog/search.html', context)\n\ndef about(request):\n    return render(request, 'blog/about.html')\n\n"}, {"file": "models.py", "path": "myblog/models.py", "code": "from django.db import models\nfrom django.utils.text import slugify\n\nclass Category(models.Model):\n    name = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True)\n\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.name)\n        super().save(*args, **kwargs)\n\n    def __str__(self):\n        return self.name\n\nclass Post(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True)\n    content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    categories = models.ManyToManyField(Category, related_name='posts')\n\n\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.title)\n        super().save(*args, **kwargs)\n\n    def __str__(self):\n        return self.title"}]}