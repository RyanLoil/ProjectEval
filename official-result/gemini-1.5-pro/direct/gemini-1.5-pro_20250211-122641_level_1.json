{"1": [{"file": "manage.py", "path": "bmi_calculator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bmi_calculator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "bmi_calculator/bmi_calculator/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y@qnd)w$y#i7q!6j98@3v2^$f5o=i7k8r1d6m!m_s6z-5_2+q'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'bmi',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'bmi_calculator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'bmi_calculator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "bmi_calculator/bmi_calculator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('bmi.urls')),\n]\n"}, {"file": "urls.py", "path": "bmi_calculator/bmi/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.bmi_calculator, name='bmi_calculator'),\n]\n"}, {"file": "views.py", "path": "bmi_calculator/bmi/views.py", "code": "from django.shortcuts import render\n\ndef bmi_calculator(request):\n    bmi = None\n    if request.method == 'POST':\n        weight = float(request.POST.get('weight'))\n        height = float(request.POST.get('height'))\n        bmi = (weight / (height * height))\n    return render(request, 'bmi/bmi_calculator.html', {'bmi': bmi})\n"}, {"file": "bmi_calculator.html", "path": "bmi_calculator/bmi/templates/bmi/bmi_calculator.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>BMI Calculator</title>\n</head>\n<body>\n    <div id=\"bmi-calculator-container\" class=\"bmi-calculator-container\">\n      <h1 id=\"bmi-calculator-title\" class=\"bmi-calculator-title\">BMI Calculator</h1>\n      <form id=\"bmi-form\" class=\"bmi-form\" method=\"post\">\n          {% csrf_token %}\n          <label id=\"weight-label\" class=\"weight-label\" for=\"weight\">Weight (kg):</label><br>\n          <input id=\"weight-input\" class=\"weight-input\" type=\"number\" step=\"0.01\" name=\"weight\" required><br>\n          <label id=\"height-label\" class=\"height-label\" for=\"height\">Height (m):</label><br>\n          <input id=\"height-input\" class=\"height-input\" type=\"number\" step=\"0.01\" name=\"height\" required><br><br>\n          <button id=\"submit-button\" class=\"submit-button\" type=\"submit\">Calculate</button>\n      </form>\n      <div id=\"bmi-result\" class=\"bmi-result\">\n        {% if bmi %}\n          <p id=\"bmi-value\" class=\"bmi-value\">Your BMI: {{ bmi|floatformat:2 }}</p>\n        {% endif %}\n      </div>\n    </div>\n</body>\n</html>\n"}], "2": [{"file": "manage.py", "path": "currency_converter/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"currency_converter.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "currency_converter/currency_converter/settings.py", "code": "SECRET_KEY = 'your_secret_key'\nDEBUG = True\nALLOWED_HOSTS = ['*']\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter',\n]\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'currency_converter.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\nWSGI_APPLICATION = 'currency_converter.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = []\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "currency_converter/currency_converter/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('converter.urls')),\n]"}, {"file": "urls.py", "path": "currency_converter/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.convert, name='convert'),\n]"}, {"file": "views.py", "path": "currency_converter/converter/views.py", "code": "from django.shortcuts import render\n\ndef convert(request):\n    rates = {\n        'USD': 1.0,\n        'EUR': 0.85,\n        'GBP': 0.73,\n        'JPY': 145.0,\n    }  # Simulated rates\n    if request.method == 'POST':\n        amount = float(request.POST.get('amount', 0))\n        from_currency = request.POST.get('from_currency', 'USD')\n        to_currency = request.POST.get('to_currency', 'USD')\n        converted_amount = (amount / rates[from_currency]) * rates[to_currency]\n        context = {'result': converted_amount, 'rates': rates}\n        return render(request, 'converter/index.html', context)\n    else:\n        context = {'rates': rates}\n        return render(request, 'converter/index.html', context)\n"}, {"file": "index.html", "path": "currency_converter/converter/templates/converter/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Currency Converter</title>\n</head>\n<body>\n    <div id=\"converter-container\" class=\"converter\">\n        <h1 id=\"converter-title\" class=\"title\">Currency Converter</h1>\n        <form id=\"converter-form\" class=\"form\" method=\"post\">\n            {% csrf_token %}\n            <label id=\"amount-label\" class=\"label\" for=\"amount\">Amount:</label><br>\n            <input id=\"amount-input\" class=\"input\" type=\"number\" name=\"amount\" step=\"0.01\" required><br>\n            <label id=\"from-currency-label\" class=\"label\" for=\"from_currency\">From:</label><br>\n            <select id=\"from-currency-select\" class=\"select\" name=\"from_currency\">\n                {% for currency, rate in rates.items %}\n                    <option id=\"from-currency-option-{{ currency }}\" class=\"option\" value=\"{{ currency }}\">{{ currency }}</option>\n                {% endfor %}\n            </select><br>\n            <label id=\"to-currency-label\" class=\"label\" for=\"to_currency\">To:</label><br>\n            <select id=\"to-currency-select\" class=\"select\" name=\"to_currency\">\n                {% for currency, rate in rates.items %}\n                    <option id=\"to-currency-option-{{ currency }}\" class=\"option\" value=\"{{ currency }}\">{{ currency }}</option>\n                {% endfor %}\n            </select><br>\n            <button id=\"convert-button\" class=\"button\" type=\"submit\">Convert</button>\n        </form>\n        {% if result %}\n            <p id=\"result-paragraph\" class=\"result\">Result: {{ result }}</p>\n        {% endif %}\n    </div>\n</body>\n</html>"}, {"file": "asgi.py", "path": "currency_converter/currency_converter/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "currency_converter/currency_converter/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'currency_converter.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "currency_converter/converter/__init__.py", "code": ""}, {"file": "__init__.py", "path": "currency_converter/currency_converter/__init__.py", "code": ""}, {"file": "apps.py", "path": "currency_converter/converter/apps.py", "code": "from django.apps import AppConfig\n\nclass ConverterConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'converter'"}, {"file": "admin.py", "path": "currency_converter/converter/admin.py", "code": "from django.contrib import admin\n\n# TODO: Add models for persistent rate storage if needed"}, {"file": "models.py", "path": "currency_converter/converter/models.py", "code": "#  Add models for database integration later if needed."}, {"file": "tests.py", "path": "currency_converter/converter/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "3": [{"file": "manage.py", "path": "password_generator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "password_generator/password_generator/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'YOUR_SECRET_KEY'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'generator',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'password_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'password_generator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom generator import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('password/', views.password, name='password'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "views.py", "path": "password_generator/generator/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nimport random\n\n# Create your views here.\n\ndef home(request):\n    return render(request, 'generator/home.html')\n\ndef about(request):\n    return render(request, 'generator/about.html')\n\n\ndef password(request):\n\n    characters = list('abcdefghijklmnopqrstuvwxyz')\n\n    if request.GET.get('uppercase'):\n        characters.extend(list('ABCDEFGHIJKLMNOPQRSTUVWXYZ'))\n    if request.GET.get('special'):\n        characters.extend(list('!@#$%^&*()'))\n    if request.GET.get('numbers'):\n        characters.extend(list('0123456789'))\n\n    length = int(request.GET.get('length',12))\n\n    thepassword = ''\n    for x in range(length):\n        thepassword += random.choice(characters)\n\n    return render(request, 'generator/password.html', {'password':thepassword})\n"}, {"file": "home.html", "path": "password_generator/generator/templates/generator/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Password Generator</title>\n</head>\n<body>\n    <div id=\"container\" class=\"container\">\n        <h1 id=\"title\" class=\"title\">Password Generator</h1>\n    <form action=\"password\" id=\"password_form\" class=\"password_form\">\n        <select name=\"length\" id=\"length_select\" class=\"length_select\">\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n          <option value=\"11\">11</option>\n          <option value=\"12\" selected=\"selected\">12</option>\n          <option value=\"13\">13</option>\n          <option value=\"14\">14</option>\n        </select> Length\n        <br>\n        <input type=\"checkbox\" name=\"uppercase\" id=\"uppercase_checkbox\" class=\"uppercase_checkbox\">\n        <label for=\"uppercase_checkbox\" id=\"uppercase_label\" class=\"uppercase_label\">Uppercase</label><br>\n        <input type=\"checkbox\" name=\"numbers\" id=\"numbers_checkbox\" class=\"numbers_checkbox\">\n        <label for=\"numbers_checkbox\" id=\"numbers_label\" class=\"numbers_label\">Numbers</label><br>\n        <input type=\"checkbox\" name=\"special\" id=\"special_checkbox\" class=\"special_checkbox\">\n        <label for=\"special_checkbox\" id=\"special_label\" class=\"special_label\">Special Characters</label><br>\n        <input type=\"submit\" value=\"Generate Password\" id=\"submit_button\" class=\"submit_button\">\n    </form>\n    </div>\n     <a href=\"{% url 'about' %}\" id=\"about_link\" class=\"about_link\">About</a>\n</body>\n</html>\n"}, {"file": "password.html", "path": "password_generator/generator/templates/generator/password.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Password</title>\n</head>\n<body>\n    <div id=\"container\" class=\"container\">\n        <h1 id=\"title\" class=\"title\">Your password is:</h1>\n        <h2 id=\"password\" class=\"password\">{{ password }}</h2>\n        <a href=\"{% url 'home' %}\" id=\"home_link\" class=\"home_link\">Home</a>\n    </div>\n</body>\n</html>\n"}, {"file": "about.html", "path": "password_generator/generator/templates/generator/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>About</title>\n</head>\n<body>\n    <div id=\"container\" class=\"container\">\n        <h1 id=\"title\" class=\"title\">About Page</h1>\n        <p id=\"about_text\" class=\"about_text\">This is a simple password generator built using Django.</p>\n        <a href=\"{% url 'home' %}\" id=\"home_link\" class=\"home_link\">Home</a>\n    </div>\n</body>\n</html>\n"}, {"file": "wsgi.py", "path": "password_generator/password_generator/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "asgi.py", "path": "password_generator/password_generator/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'password_generator.settings')\n\napplication = get_asgi_application()\n"}, {"file": "__init__.py", "path": "password_generator/password_generator/__init__.py", "code": ""}, {"file": "__init__.py", "path": "password_generator/generator/__init__.py", "code": ""}, {"file": "apps.py", "path": "password_generator/generator/apps.py", "code": "from django.apps import AppConfig\n\n\nclass GeneratorConfig(AppConfig):\n    name = 'generator'\n"}, {"file": "admin.py", "path": "password_generator/generator/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "models.py", "path": "password_generator/generator/models.py", "code": "from django.db import models\n\n# Create your models here.\n"}, {"file": "tests.py", "path": "password_generator/generator/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here.\n"}], "4": [{"file": "manage.py", "path": "qrcode_generator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qrcode_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "qrcode_generator/qrcode_generator/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y#u2p_t9v+2f#+&1q+n=n6$v(t#g7*r6@n_b+%j4g5e6g=h3+'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qrcode_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qrcode_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qrcode_generator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]"}, {"file": "urls.py", "path": "qrcode_generator/qrcode_generator/urls.py", "code": "from django.urls import path\nfrom qrcode_app import views\n\nurlpatterns = [\n    path('', views.generate_qrcode, name='generate_qrcode'),\n]"}, {"file": "views.py", "path": "qrcode_generator/qrcode_app/views.py", "code": "import qrcode\nfrom django.shortcuts import render\nfrom io import BytesIO\nimport base64\n\ndef generate_qrcode(request):\n    if request.method == 'POST':\n        data = request.POST.get('data', '')\n        img = qrcode.make(data)\n        buffered = BytesIO()\n        img.save(buffered, format=\"PNG\")\n        img_str = base64.b64encode(buffered.getvalue()).decode()\n        context = {'qrcode': img_str}\n        return render(request, 'qrcode_app/index.html', context)\n    return render(request, 'qrcode_app/index.html')"}, {"file": "index.html", "path": "qrcode_generator/qrcode_app/templates/qrcode_app/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <div id=\"container\" class=\"container\">\n        <h1 id=\"title\" class=\"title\">QR Code Generator</h1>\n        <form id=\"qrcode-form\" class=\"qrcode-form\" method=\"post\">\n            {% csrf_token %}\n            <label id=\"data-label\" class=\"data-label\" for=\"data\">Enter data:</label><br>\n            <input id=\"data\" class=\"data\" type=\"text\" name=\"data\" required><br><br>\n            <button id=\"submit\" class=\"submit\" type=\"submit\">Generate QR Code</button>\n        </form>\n        <div id=\"qrcode-container\" class=\"qrcode-container\">\n        {% if qrcode %}\n            <img id=\"qrcode-image\" class=\"qrcode-image\" src=\"data:image/png;base64,{{ qrcode }}\" alt=\"QR Code\">\n        {% endif %}\n        </div>\n    </div>\n</body>\n</html>"}, {"file": "apps.py", "path": "qrcode_generator/qrcode_app/apps.py", "code": "from django.apps import AppConfig\n\n\nclass QrcodeAppConfig(AppConfig):\n    name = 'qrcode_app'"}, {"file": "admin.py", "path": "qrcode_generator/qrcode_app/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "qrcode_generator/qrcode_app/models.py", "code": ""}, {"file": "tests.py", "path": "qrcode_generator/qrcode_app/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}, {"file": "wsgi.py", "path": "qrcode_generator/qrcode_generator/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qrcode_generator.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "qrcode_generator/qrcode_app/__init__.py", "code": ""}, {"file": "__init__.py", "path": "qrcode_generator/qrcode_generator/__init__.py", "code": ""}], "9": [{"file": "manage.py", "path": "my_ai_chatbot/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_ai_chatbot.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "my_ai_chatbot/my_ai_chatbot/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'chatbot',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'my_ai_chatbot.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'my_ai_chatbot.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n"}, {"file": "urls.py", "path": "my_ai_chatbot/my_ai_chatbot/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('chatbot.urls')),\n]\n"}, {"file": "urls.py", "path": "my_ai_chatbot/chatbot/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]\n"}, {"file": "views.py", "path": "my_ai_chatbot/chatbot/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'chatbot/index.html')\n"}, {"file": "index.html", "path": "my_ai_chatbot/templates/chatbot/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>AI Chatbot</title>\n</head>\n<body>\n    <div id=\"chatbot-container\" class=\"chatbot-container\">\n        <h1 id=\"chatbot-title\" class=\"chatbot-title\">Welcome to our AI Chatbot!</h1>\n        <div id=\"chat-window\" class=\"chat-window\">\n           <p id=\"welcome-message\" class=\"message bot-message\">Hi there! How can I help you today?</p> \n        </div>\n        <div id=\"input-area\" class=\"input-area\">\n            <input type=\"text\" id=\"user-input\" class=\"user-input\" placeholder=\"Type your message...\">\n            <button id=\"send-button\" class=\"send-button\">Send</button>\n        </div>\n    </div>\n</body>\n</html>\n"}, {"file": "apps.py", "path": "my_ai_chatbot/chatbot/apps.py", "code": "from django.apps import AppConfig\n\nclass ChatbotConfig(AppConfig):\n    name = 'chatbot'\n"}, {"file": "admin.py", "path": "my_ai_chatbot/chatbot/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "models.py", "path": "my_ai_chatbot/chatbot/models.py", "code": "from django.db import models\n\n# Create your models here.\n"}, {"file": "tests.py", "path": "my_ai_chatbot/chatbot/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here.\n"}, {"file": "wsgi.py", "path": "my_ai_chatbot/my_ai_chatbot/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_ai_chatbot.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "__init__.py", "path": "my_ai_chatbot/my_ai_chatbot/__init__.py", "code": ""}, {"file": "__init__.py", "path": "my_ai_chatbot/chatbot/__init__.py", "code": ""}], "10": [{"file": "manage.py", "path": "calorie_tracker/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"calorie_tracker.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "calorie_tracker/calorie_tracker/settings.py", "code": "# ... (Standard Django settings - DATABASES, SECRET_KEY, etc.)\n\nINSTALLED_APPS = [\n    # ...\n    'tracker',\n    # ...\n]\n\n# ... (Other settings)"}, {"file": "urls.py", "path": "calorie_tracker/calorie_tracker/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('tracker.urls')),\n]"}, {"file": "models.py", "path": "calorie_tracker/tracker/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Food(models.Model):\n    name = models.CharField(max_length=200)\n    calories = models.IntegerField()\n\nclass Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n\nclass Consumption(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    food = models.ForeignKey(Food, on_delete=models.CASCADE)\n    quantity = models.IntegerField(default=1)  # Added quantity field\n    date = models.DateField()\n"}, {"file": "views.py", "path": "calorie_tracker/tracker/views.py", "code": "from django.shortcuts import render, redirect\nfrom .models import Food, Consumption\nfrom django.contrib.auth.decorators import login_required\nfrom django.http import JsonResponse # For chart data\nfrom datetime import date, timedelta\nimport json # for chart labels\n# ... (other imports)\n\n@login_required\ndef index(request):\n    # ... existing index view code\n\n@login_required\ndef add_food(request):\n    # ... existing add_food view code\n\n@login_required\n    # ... (rest of the view)\n\ndef chart_data(request):\n    labels = []\n    data = []\n    today = date.today()\n    for i in range(7):      #past week data\n        current_date = today - timedelta(days=i)\n        daily_consumption = Consumption.objects.filter(user=request.user,date=current_date)\n        total_calories = sum(consumption.food.calories * consumption.quantity for consumption in daily_consumption)\n        labels.append(current_date.strftime('%Y-%m-%d'))\n        data.append(total_calories)\n    labels.reverse()\n    data.reverse()\n    return JsonResponse({'labels':labels, 'data': data})\n\n"}, {"file": "urls.py", "path": "calorie_tracker/tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('add_food/', views.add_food, name='add_food'),\n    path('chart_data/', views.chart_data, name='chart_data'), # new route for the chart data\n]"}, {"file": "index.html", "path": "calorie_tracker/tracker/templates/tracker/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Calorie Tracker</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n  </head>\n<body>\n<!-- ... (Your existing HTML code) ... -->\n<div>\n    <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n</div>\n<script>\nvar ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n        labels: [],\n        datasets: [{\n            label: 'Daily Calorie Consumption',\n            data: [],\n            borderColor: 'rgba(75, 192, 192, 1)',\n             borderWidth: 1,\n            fill: false,\n\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\n\nfetch('/chart_data/')\n    .then(response => response.json())\n    .then(data => {\n        myChart.data.labels = data.labels;\n        myChart.data.datasets[0].data = data.data;\n        myChart.update();\n    });\n\n</script>\n\n</body>\n</html>"}], "11": [{"file": "manage.py", "path": "password_generator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"password_generator.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "password_generator/password_generator/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '5#y0^-_g)ew*v)6#u6g6*10$e7z4o8l#!v@9^q(n7x=2y1u^n'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'review',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'password_generator.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'password_generator.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n"}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('review.urls')),\n]"}, {"file": "urls.py", "path": "password_generator/review/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.review, name='review'),\n]"}, {"file": "views.py", "path": "password_generator/review/views.py", "code": "import json\nfrom django.shortcuts import render\n\ndef review(request):\n    json_data = '''\n    [{\"project_id\": \"3\", \"project_type\": \"website\", \"nl_prompt\": \"Create a website for a password generator.\", \"framework_technical_stack\": [{\"language\": \"Python\", \"technical_stack\": \"Django\"}], \"nl_checklist\": [{\"page\": \"Home\", \"required\": true, \"function\": [{\"function\": \"Display Welcome Message\", \"description\": \"Show a welcome message or introduction to the password generator.\", \"required\": false}, {\"function\": \"Navigation Button\", \"description\": \"Button to the password generator page.\", \"required\": true}]}, {\"page\": \"About\", \"required\": false, \"function\": [{\"function\": \"Description\", \"description\": \"Provide information about the purpose and functionality of the website.\", \"required\": false}]}], \"testcode\": [{\"page\": \"Home\", \"function\": [{\"function\": \"Display Welcome Message\", \"test\": \"def test_display_welcome_message(driver, test_url,swelcome_message_id):\\r\\n    driver.get(test_url)\\r\\n    welcome_message = driver.find_element(By.ID,swelcome_message_id)\\r\\n    assert welcome_message.is_displayed()\", \"parameter\": [{\"name\": \"test_url\", \"description\": \"the url for test\"}, {\"name\": \"swelcome_message_id\", \"description\": \"the id of the welcome message element\"}]}, {\"function\": \"Navigation Button\", \"test\": \"def test_navigation_button(driver, test_url,navigation_button_id, generator_id):\\r\\n    driver.get(test_url)\\r\\n    generate_button = driver.find_element(By.ID,navigation_button_id)\\r\\n    assert generate_button.is_displayed()\\r\\n    generate_button.click()\\r\\n    time.sleep(1)\\r\\n    generator = driver.find_element(By.ID,generator_id)\\r\\n    assert generator.is_displayed()\", \"parameter\": [{\"name\": \"test_url\", \"description\": \"the url for test\"}, {\"name\": \"navigation_button_id\", \"description\": \"the button id for navigation to generator\"}]}]}, {\"page\": \"About\", \"function\": [{\"function\": \"About Link\", \"test\": \"def test_about_link(driver, test_url, about_link_id):\\r\\n    driver.get(test_url)\\r\\n    about_link = driver.find_element(By.ID, about_link_id)\\r\\n    assert about_link.is_displayed()\\r\\n    about_link.click()\", \"parameter\": [{\"name\": \"test_url\", \"description\": \"the url for test\"}, {\"name\": \"about_link_id\", \"description\": \"the hyperlink id of about page in the home page\"}]}, {\"function\": \"Description\", \"test\": \"def test_description(driver, description_id):\\r\\n    description = driver.find_element(By.ID, description_id)\\r\\n    assert description.is_displayed()\", \"parameter\": [{\"name\": \"description_id\", \"description\": \"the id of the discription element\"}]}]}]\n    '''\n    data = json.loads(json_data)\n    return render(request, 'review/review.html', {'data': data})"}, {"file": "review.html", "path": "password_generator/templates/review/review.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Code Review</title>\n</head>\n<body>\n    <h1>Code Review</h1>\n    {% for project in data %}\n        <h2>Project ID: {{ project.project_id }}</h2>\n        <h3>Test Code Review</h3>\n        {% for test in project.testcode %}\n            <h4>Page: {{ test.page }}</h4>\n            <ul>\n            {% for function in test.function %}\n                <li>\n                    <h5>Function: {{ function.function }}</h5>\n                    <pre id=\"test-code-{{ forloop.counter }}\" class=\"test-code\">{{ function.test }}</pre>\n                    <select id=\"status-{{ forloop.counter }}\" class=\"status-select\">\n                        <option value=\"Select\">Select</option>\n                        <option value=\"Pass\">Pass</option>\n                        <option value=\"Fail\">Fail</option>\n                    </select>\n                    <h6>Parameters:</h6>\n                    <ul>\n                        {% for param in function.parameter %}\n                            <li>{{ param.name }}: {{ param.description }}</li>\n                        {% endfor %}\n                    </ul>\n                </li>\n              {% endfor %}\n            </ul>\n        {% endfor %}\n    {% endfor %}\n</body>\n</html>"}], "15": [{"file": "manage.py", "path": "mysite/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "mysite/mysite/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'y+b(j9n3r5v94b$c7@rchux-pkw(9h#%t^24#7^4r$m@5=z9+'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'helloworld',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n]\n\nROOT_URLCONF = 'mysite.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mysite.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "mysite/mysite/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('helloworld.urls')),\n]\n"}, {"file": "urls.py", "path": "mysite/helloworld/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]\n"}, {"file": "views.py", "path": "mysite/helloworld/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef index(request):\n    return render(request, 'helloworld/index.html')\n\ndef helloworld(request):\n    return render(request, 'helloworld/helloworld.html')\n"}, {"file": "index.html", "path": "mysite/helloworld/templates/helloworld/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Index</title>\n</head>\n<body>\n    <div id=\"container-div\" class=\"main-container\">\n        <a id=\"hello-link\" class=\"button-link\" href=\"{% url 'helloworld' %}\">\n            <button id=\"hello-button\" class=\"hello-button\">Go to Hello World</button>\n        </a>\n    </div>\n</body>\n</html>\n"}, {"file": "helloworld.html", "path": "mysite/helloworld/templates/helloworld/helloworld.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World</title>\n</head>\n<body>\n   <div id=\"hello-div\" class=\"hello-page\">\n       <h1 id=\"hello-heading\" class=\"hello-heading\">Hello, World!</h1>\n   </div>\n</body>\n</html>\n"}, {"file": "__init__.py", "path": "mysite/mysite/__init__.py", "code": ""}, {"file": "wsgi.py", "path": "mysite/mysite/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "asgi.py", "path": "mysite/mysite/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n\napplication = get_asgi_application()\n"}, {"file": "__init__.py", "path": "mysite/helloworld/__init__.py", "code": ""}, {"file": "apps.py", "path": "mysite/helloworld/apps.py", "code": "from django.apps import AppConfig\n\n\nclass HelloworldConfig(AppConfig):\n    name = 'helloworld'\n"}, {"file": "admin.py", "path": "mysite/helloworld/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "models.py", "path": "mysite/helloworld/models.py", "code": ""}, {"file": "tests.py", "path": "mysite/helloworld/tests.py", "code": ""}]}