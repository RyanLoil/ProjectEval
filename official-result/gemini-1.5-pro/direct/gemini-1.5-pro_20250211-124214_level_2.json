{"1": [{"file": "manage.py", "path": "bmi_calculator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"bmi_calculator.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "bmi_calculator/bmi_calculator/settings.py", "code": "#...\n\nINSTALLED_APPS = [\n    #...\n    'calculator',\n]\n\n#...\n\nTEMPLATES = [\n    {\n        #...\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        #...\n    },\n]\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "bmi_calculator/bmi_calculator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('calculator.urls')),\n]\n"}, {"file": "urls.py", "path": "bmi_calculator/calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calculator/', views.bmi_calculator, name='bmi_calculator'),\n]\n"}, {"file": "views.py", "path": "bmi_calculator/calculator/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef home(request):\n    return render(request, 'calculator/home.html')\n\ndef bmi_calculator(request):\n    if request.method == 'POST':\n        height = float(request.POST.get('height'))\n        weight = float(request.POST.get('weight'))\n        unit = request.POST.get('unit')\n\n        if unit == 'metric':\n            bmi = weight / (height / 100)**2\n        else:\n            bmi = (weight * 703) / (height**2)\n\n        context = {'bmi': bmi}\n        return render(request, 'calculator/bmi_calculator.html', context)\n\n    return render(request, 'calculator/bmi_calculator.html')\n"}, {"file": "home.html", "path": "bmi_calculator/templates/calculator/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>BMI Calculator</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"home-container\">\n        <h1 id=\"intro-title\" class=\"intro-title\">Welcome to the BMI Calculator</h1>\n        <p id=\"intro-description\" class=\"intro-description\">This calculator helps you determine your Body Mass Index (BMI).</p>\n        <a id=\"navigate-to-calculator\" class=\"navigate-to-calculator\" href=\"{% url 'bmi_calculator' %}\">Go to Calculator</a>\n    </div>\n</body>\n</html>\n"}, {"file": "bmi_calculator.html", "path": "bmi_calculator/templates/calculator/bmi_calculator.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>BMI Calculator</title>\n</head>\n<body>\n    <div id=\"bmi-calculator-container\" class=\"bmi-calculator-container\">\n        <h1 id=\"bmi-calculator-title\" class=\"bmi-calculator-title\">BMI Calculator</h1>\n        <form id=\"bmi-form\" class=\"bmi-form\" method=\"post\">\n            {% csrf_token %}\n            <div id=\"unit-selection\" class=\"unit-selection\">\n                <label for=\"unit-metric\" id=\"unit-metric-label\" class=\"unit-label\">Metric</label>\n                <input type=\"radio\" name=\"unit\" id=\"unit-metric\" value=\"metric\" checked>\n                <label for=\"unit-imperial\" id=\"unit-imperial-label\" class=\"unit-label\">Imperial</label>\n                <input type=\"radio\" name=\"unit\" id=\"unit-imperial\" value=\"imperial\">\n            </div>\n            <label for=\"height\" id=\"height-label\" class=\"input-label\">Height:</label>\n            <input type=\"number\" name=\"height\" id=\"height-input\" class=\"input-field\" required><br><br>\n            <label for=\"weight\" id=\"weight-label\" class=\"input-label\">Weight:</label>\n            <input type=\"number\" name=\"weight\" id=\"weight-input\" class=\"input-field\" required><br><br>\n            <button id=\"submit-button\" class=\"submit-button\" type=\"submit\">Calculate</button>\n            <button id=\"reset-button\" class=\"reset-button\" type=\"reset\">Reset</button>\n        </form>\n        {% if bmi %}\n            <div id=\"results-container\" class=\"results-container\">\n                <p id=\"bmi-result\" class=\"bmi-result\">Your BMI: {{ bmi }}</p>\n            </div>\n        {% endif %}\n    </div>\n</body>\n</html>\n"}], "3": [{"file": "manage.py", "path": "password_generator/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"password_generator.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "password_generator/password_generator/settings.py", "code": "# ... (Standard Django settings) ...\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')], # Add this line\n        # ... (Rest of the TEMPLATES settings)\n    },\n]\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n\n# ... other settings"}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom generator import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('password/', views.password, name='password'),\n    path('generated-password/', views.generated_password, name='generated_password'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "password_generator/generator/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nimport random\n\ndef home(request):\n    return render(request, 'generator/home.html')\n\ndef about(request):\n    return render(request, 'generator/about.html')\n\n\ndef password(request):\n    return render(request, 'generator/password.html')\n\n\ndef generated_password(request):\n    characters = list('abcdefghijklmnopqrstuvwxyz')\n    if request.GET.get('uppercase'):\n        characters.extend(list('ABCDEFGHIJKLMNOPQRSTUVWXYZ'))\n    if request.GET.get('numbers'):\n        characters.extend(list('0123456789'))\n    if request.GET.get('special'):\n        characters.extend(list('!@#$%^&*()'))\n    length = int(request.GET.get('length', 12))\n    thepassword = ''\n    for x in range(length):\n        thepassword += random.choice(characters)\n    return render(request, 'generator/generated_password.html', {'password': thepassword})"}, {"file": "home.html", "path": "password_generator/templates/generator/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Password Generator</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"container\">\n        <h1 id=\"welcome-message\" class=\"title\">Welcome to the Password Generator</h1>\n        <a id=\"navigate-to-password-page\" class=\"button\" href=\"{% url 'password' %}\">Generate Password</a>\n    </div>\n</body>\n</html>"}, {"file": "password.html", "path": "password_generator/templates/generator/password.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Password Options</title>\n</head>\n<body>\n    <div id=\"password-options-container\" class=\"container\">\n    <form action=\"{% url 'generated_password' %}\" method=\"GET\">\n        <label for=\"length\" id=\"length-label\">Password Length:</label>\n        <input type=\"number\" name=\"length\" id=\"length-input\" min=\"8\" max=\"32\" value=\"12\"><br>\n\n        <input type=\"checkbox\" name=\"uppercase\" id=\"uppercase-checkbox\">\n        <label for=\"uppercase\" id=\"uppercase-label\">Uppercase</label><br>\n\n        <input type=\"checkbox\" name=\"numbers\" id=\"numbers-checkbox\">\n        <label for=\"numbers\" id=\"numbers-label\">Numbers</label><br>\n\n        <input type=\"checkbox\" name=\"special\" id=\"special-checkbox\">\n        <label for=\"special\" id=\"special-label\">Special Characters</label><br>\n\n        <input type=\"submit\" value=\"Generate\" id=\"generate-button\">\n    </form>\n    </div>\n</body>\n</html>"}, {"file": "generated_password.html", "path": "password_generator/templates/generator/generated_password.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Generated Password</title>\n</head>\n<body>\n    <div id=\"generated-password-container\" class=\"container\">\n        <h2 id=\"generated-password-label\">Your generated password:</h2>\n        <p id=\"generated-password-display\">{{ password }}</p>\n         <button id=\"copy-button\" onclick=\"copyPassword()\">Copy to Clipboard</button>\n        <script>\n            function copyPassword() {\n              const passwordText = document.getElementById('generated-password-display').innerText;\n              navigator.clipboard.writeText(passwordText)\n                .then(() => {\n                  alert('Password copied to clipboard!');\n                })\n                .catch(err => {\n                  console.error('Failed to copy: ', err);\n                });\n            }\n          </script>\n    </div>\n</body>\n</html>"}, {"file": "about.html", "path": "password_generator/templates/generator/about.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>About</title>\n</head>\n<body>\n    <div id=\"about-container\" class=\"container\">\n        <h1 id=\"about-title\" >About This Website</h1>\n        <p id=\"about-description\">This is a simple password generator built with Django.</p>\n    </div>\n</body>\n</html>"}], "4": [{"file": "manage.py", "path": "qrcode_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qrcode_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "qrcode_project/qrcode_project/settings.py", "code": "# Generated by Django 4.2.5 on 2023-11-21 19:01\n\nimport os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'qrcode_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'qrcode_project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'qrcode_project.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"}, {"file": "urls.py", "path": "qrcode_project/qrcode_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('qrcode_app.urls')),\n]\n"}, {"file": "urls.py", "path": "qrcode_project/qrcode_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('qrcode/', views.qrcode_generator, name='qrcode_generator'),\n    path('about/', views.about, name='about'),\n]\n"}, {"file": "views.py", "path": "qrcode_project/qrcode_app/views.py", "code": "import qrcode\nfrom io import BytesIO\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom django.core.files.uploadedfile import InMemoryUploadedFile\nfrom PIL import Image\n\n\ndef home(request):\n    return render(request, 'qrcode_app/home.html')\n\n\ndef qrcode_generator(request):\n    if request.method == 'POST':\n        data = request.POST.get('data')\n        box_size = int(request.POST.get('box_size', 10))  # Default box size is 10\n        border_size = int(request.POST.get('border', 4)) # Default border size is 4\n        error_correction = request.POST.get('error_correction', 'M')\n        fill_color = request.POST.get('fill_color', 'black')\n        back_color = request.POST.get('back_color', 'white')\n\n        qr = qrcode.QRCode(\n            version=1,\n            error_correction={'L': qrcode.constants.ERROR_CORRECT_L, 'M': qrcode.constants.ERROR_CORRECT_M, 'Q': qrcode.constants.ERROR_CORRECT_Q, 'H': qrcode.constants.ERROR_CORRECT_H}[error_correction],\n            box_size=min(box_size, 128), #box size maximum is 128\n            border=min(border_size, 10) #border maximum is 10\n        )\n        qr.add_data(data)\n        qr.make(fit=True)\n\n        img = qr.make_image(fill_color=fill_color, back_color=back_color)\n\n        buffer = BytesIO()\n        img.save(buffer, 'PNG')\n        buffer.seek(0)\n\n        qr_image = InMemoryUploadedFile(\n            buffer,\n            None,\n            'qrcode.png',\n            'image/png',\n            buffer.getbuffer().nbytes,\n            None\n        )\n        \n        context = {'qr_image': qr_image}\n        return render(request, 'qrcode_app/qrcode_generator.html', context)\n    return render(request, 'qrcode_app/qrcode_generator.html')\n\n\ndef about(request):\n    return render(request, 'qrcode_app/about.html')\n"}, {"file": "home.html", "path": "qrcode_project/templates/qrcode_app/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"home-container\">\n        <h1 id=\"home-title\" class=\"home-title\">Welcome to the QR Code Generator</h1>\n        <p id=\"home-intro\" class=\"home-intro\">Easily create QR codes for any text or URL.</p>\n        <a id=\"generate-qr-button\" class=\"generate-qr-button\" href=\"{% url 'qrcode_generator' %}\">Generate QR Code</a>\n        <br>\n        <a id=\"about-link\" class=\"about-link\" href=\"{% url 'about' %}\">About</a>\n    </div>\n</body>\n</html>\n"}, {"file": "qrcode_generator.html", "path": "qrcode_project/templates/qrcode_app/qrcode_generator.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <h1>QR Code Generator</h1>\n\n    <form method=\"post\">\n        {% csrf_token %}\n        <label for=\"data-input\">Data:</label><br>\n        <input type=\"text\" id=\"data-input\" name=\"data\" class=\"data-input\" required><br><br>\n\n        <label for=\"box-size\">Box Size (Max 128):</label><br>\n        <input type=\"number\" id=\"box-size\" name=\"box_size\" class=\"box-size\" min=\"1\" max=\"128\" value=\"10\"><br><br>\n        \n        <label for=\"border-size\">Border Size (Max 10):</label><br>\n        <input type=\"number\" id=\"border-size\" name=\"border\" class=\"border-size\" min=\"1\" max=\"10\" value=\"4\"><br><br>\n\n        <label for=\"error_correction\">Error Correction:</label><br>\n        <select id=\"error_correction\" name=\"error_correction\" class=\"error_correction\">\n            <option value=\"L\">Small</option>\n            <option value=\"M\" selected>Medium</option>\n            <option value=\"Q\">Large</option>\n            <option value=\"H\">Extra Large</option>\n        </select><br><br>\n\n        <label for=\"fill_color\">Fill Color:</label><br>\n        <input type=\"color\" id=\"fill_color\" name=\"fill_color\" value=\"#000000\"><br><br>\n\n        <label for=\"back_color\">Back Color:</label><br>\n        <input type=\"color\" id=\"back_color\" name=\"back_color\" value=\"#ffffff\"><br><br>\n\n        <button type=\"submit\" id=\"generate-button\" class=\"generate-button\">Generate</button>\n    </form>\n\n    {% if qr_image %}\n    <div>\n        <img src=\"data:image/png;base64,{{ qr_image|encode:'base64' }}\" alt=\"QR Code\" id=\"qr-code-display\" class=\"qr-code-display\"><br>\n        <a href=\"data:image/png;base64,{{ qr_image|encode:'base64' }}\" download=\"qrcode.png\" id=\"download-button\" class=\"download-button\">Download QR Code</a>\n    </div>\n    {% endif %}\n\n    <br>\n    <a href=\"{% url 'home' %}\">Home</a>\n    <a href=\"{% url 'about' %}\">About</a>\n\n</body>\n</html>\n"}, {"file": "about.html", "path": "qrcode_project/templates/qrcode_app/about.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>About QR Code Generator</title>\n</head>\n<body>\n  <div id=\"about-container\" class=\"about-container\">\n    <h1 id=\"about-title\" class=\"about-title\">About QR Code Generator</h1>\n    <p id=\"website-description\" class=\"website-description\">This website provides a simple and free way to generate QR codes. You can create codes for text, URLs, contact information, and more. Just enter the data you want encoded, customize the design (optional), and click \"Generate.\"</p>\n    <div id=\"common-questions\" class=\"common-questions\">\n    <h2>Common Questions</h2>\n    <ul id=\"faq-list\" class=\"faq-list\">\n        <li id=\"q1\" class=\"faq-item\">\n          <strong id=\"q1-label\">Q: What is a QR code?</strong>\n          <p id=\"q1-answer\">A: A QR code (Quick Response code) is a type of matrix barcode that can be read easily by a digital device and which stores information as a series of pixels in a square-shaped grid. </p>\n        </li>\n        <li id=\"q2\" class=\"faq-item\">\n          <strong id=\"q2-label\">Q: How do I use this QR code generator?</strong>\n          <p id=\"q2-answer\">A:  Enter the text or URL you want to encode into the input field. You can customize the appearance with color and size options. Then, click \"Generate\" to create your QR code.</p>\n        </li>\n      </ul>\n    </div>\n      <h2>Privacy Policy</h2>\n      <p id=\"privacy-policy\" class=\"privacy-policy\">We do not collect or store any of the data you enter to generate QR codes. Your privacy is important to us.</p>\n      <h2>Terms of Service</h2>\n      <p id=\"terms-of-service\" class=\"terms-of-service\">This service is provided \"as is\". We make no warranties about the reliability or availability of the service.</p>\n      <br>\n      <a id=\"home-link\" class=\"home-link\" href=\"{% url 'home' %}\">Home</a>\n      <a id=\"qr-generator-link\" class=\"qr-generator-link\" href=\"{% url 'qrcode_generator' %}\">QR Code Generator</a>\n  </div>\n</body>\n</html>\n"}], "5": [{"file": "manage.py", "path": "markdown_converter/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"markdown_converter.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "markdown_converter/markdown_converter/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = \"!+x006m$!z%q_33e#-#7_i#t%o77m4h$j5n1=uj)a7+!u+63m\"\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"converter\",\n]\n\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\n\nROOT_URLCONF = \"markdown_converter.urls\"\n\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = \"markdown_converter.wsgi.application\"\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",\n    },\n]\n\nLANGUAGE_CODE = \"en-us\"\n\nTIME_ZONE = \"UTC\"\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')"}, {"file": "urls.py", "path": "markdown_converter/markdown_converter/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('converter.urls')),\n]"}, {"file": "urls.py", "path": "markdown_converter/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "markdown_converter/converter/views.py", "code": "from django.shortcuts import render\nimport markdown\n\ndef home(request):\n    return render(request, 'converter/home.html')\n\ndef convert(request):\n    if request.method == 'POST':\n        markdown_text = request.POST.get('markdown_text', '')\n        html_output = markdown.markdown(markdown_text)\n        return render(request, 'converter/convert.html', {'html_output': html_output, 'markdown_text': markdown_text})\n    return render(request, 'converter/convert.html')\n\ndef about(request):\n    return render(request, 'converter/about.html')"}, {"file": "home.html", "path": "markdown_converter/converter/templates/converter/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Markdown to HTML Converter</title>\n</head>\n<body>\n    <h1 id=\"home-title\" class=\"title\">Welcome to the Markdown to HTML Converter</h1>\n    <p id=\"introduction\" class=\"description\">This tool allows you to easily convert Markdown text to HTML.</p>\n    <nav>\n      <a id=\"convert-link\" class=\"nav-link\" href=\"{% url 'convert' %}\">Convert</a>\n      <a id=\"about-link\" class=\"nav-link\" href=\"{% url 'about' %}\">About</a>\n    </nav>\n</body>\n</html>"}, {"file": "convert.html", "path": "markdown_converter/converter/templates/converter/convert.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Convert Markdown to HTML</title>\n</head>\n<body>\n    <h1 id=\"convert-title\" class=\"title\">Convert Markdown</h1>\n    <form method=\"post\">\n        {% csrf_token %}\n        <textarea id=\"markdown-input\" class=\"input-area\" name=\"markdown_text\">{{ markdown_text }}</textarea><br>\n        <button id=\"convert-button\" class=\"button\" type=\"submit\">Convert</button>\n    </form>\n    {% if html_output %}\n        <div id=\"html-output\" class=\"output-area\">{{ html_output | safe }}</div>\n    {% endif %}\n    <a id=\"home-link\" class=\"nav-link\" href=\"{% url 'home' %}\">Home</a>\n</body>\n</html>"}, {"file": "about.html", "path": "markdown_converter/converter/templates/converter/about.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>About the Markdown to HTML Converter</title>\n</head>\n<body>\n    <h1 id=\"about-title\" class=\"title\">About</h1>\n    <p id=\"team-info\" class=\"description\">This Markdown to HTML Converter was developed by Bard.</p>\n  <a id=\"home-link\" class=\"nav-link\" href=\"{% url 'home' %}\">Home</a>\n\n</body>\n</html>"}, {"file": "wsgi.py", "path": "markdown_converter/markdown_converter/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'markdown_converter.settings')\n\napplication = get_wsgi_application()"}, {"file": "asgi.py", "path": "markdown_converter/markdown_converter/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'markdown_converter.settings')\n\napplication = get_asgi_application()"}, {"file": "__init__.py", "path": "markdown_converter/markdown_converter/__init__.py", "code": ""}, {"file": "__init__.py", "path": "markdown_converter/converter/__init__.py", "code": ""}, {"file": "admin.py", "path": "markdown_converter/converter/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "apps.py", "path": "markdown_converter/converter/apps.py", "code": "from django.apps import AppConfig\n\n\nclass ConverterConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'converter'"}, {"file": "models.py", "path": "markdown_converter/converter/models.py", "code": "from django.db import models\n\n# Create your models here."}, {"file": "tests.py", "path": "markdown_converter/converter/tests.py", "code": "from django.test import TestCase\n\n# Create your tests here."}], "6": [{"file": "manage.py", "path": "todo_project/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"todo_project.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "todo_project/todo_project/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = \"!r(87t8-*c2@e+z_f^6-l#l08@9*3g+l%q+j)d0q+v4g$j2m\"\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"todo_app\",\n]\n\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\n\nROOT_URLCONF = \"todo_project.urls\"\n\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = \"todo_project.wsgi.application\"\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",\n    },\n]\n\nLANGUAGE_CODE = \"en-us\"\n\nTIME_ZONE = \"UTC\"\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = \"/static/\"\n"}, {"file": "urls.py", "path": "todo_project/todo_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('todo_app.urls')),\n]\n"}, {"file": "urls.py", "path": "todo_project/todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('todo_lists/', views.todo_lists, name='todo_lists'),\n    path('tasks/', views.tasks, name='tasks'),\n    path('analysis/', views.analysis, name='analysis'), \n]\n"}, {"file": "views.py", "path": "todo_project/todo_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'todo_app/home.html')\n\ndef todo_lists(request):\n    return render(request, 'todo_app/todo_lists.html')\n\ndef tasks(request):\n    return render(request, 'todo_app/tasks.html')\n\ndef analysis(request):\n  return render(request, 'todo_app/analysis.html')\n"}, {"file": "home.html", "path": "todo_project/todo_app/templates/todo_app/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Todo Home</title>\n</head>\n<body>\n  <div id=\"home-container\" class=\"home-container\">\n    <h1 id=\"home-title\" class=\"home-title\">Welcome to Your Todo App</h1>\n    <div id=\"dashboard-link\" class=\"navigation-link\"><a href=\"#\" id=\"dashboard-link-anchor\" >View Dashboard</a></div> <div id=\"todo-list-link\" class=\"navigation-link\"><a href=\"/todo_lists/\"  id=\"todo-lists-link-anchor\">Navigate to Todo Lists</a></div>\n  </div>\n</body>\n</html>\n"}, {"file": "todo_lists.html", "path": "todo_project/todo_app/templates/todo_app/todo_lists.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Todo Lists</title>\n</head>\n<body>\n    <div id=\"todo-lists-container\" class=\"todo-lists-container\">\n        <h1 id=\"todo-lists-title\" class=\"todo-lists-title\">Todo Lists</h1>\n        <div id=\"create-new-list\" class=\"todo-list-action\"><a href=\"#\">Create New List</a></div>\n        <div id=\"view-tasks\" class=\"todo-list-action\"><a href=\"/tasks/\">View Tasks</a></div>\n      </div>\n</body>\n</html>\n"}, {"file": "tasks.html", "path": "todo_project/todo_app/templates/todo_app/tasks.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Tasks</title>\n</head>\n<body>\n    <div id=\"tasks-container\" class=\"tasks-container\">\n        <h1 id=\"tasks-title\" class=\"tasks-title\">Tasks</h1>\n        <div id=\"add-new-task\" class=\"task-action\"><a href=\"#\">Add New Task</a></div>\n        <div id=\"edit-task\" class=\"task-action\"><a href=\"#\">Edit Task</a></div>\n        <div id=\"delete-task\" class=\"task-action\"><a href=\"#\">Delete Task</a></div>\n        <div id=\"mark-completed\" class=\"task-action\"><a href=\"#\">Mark Task as Completed</a></div>\n      </div>\n</body>\n</html>\n"}, {"file": "analysis.html", "path": "todo_project/todo_app/templates/todo_app/analysis.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Analysis</title>\n</head>\n<body>\n  <div id=\"analysis-container\" class=\"analysis-container\">\n    <h1 id=\"analysis-title\" class=\"analysis-title\">Task Analysis</h1>\n    <div id=\"completion-chart\" class=\"analysis-item\">View Task Completion Chart</div>\n    <div id=\"distribution-chart\" class=\"analysis-item\">View Task Distribution Chart</div>\n  </div>\n</body>\n</html>\n"}], "8": [{"file": "manage.py", "path": "calendar_app/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"calendar_app.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "calendar_app/calendar_app/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'calendar_app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'calendar_app.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'calendar_app.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "calendar_app/calendar_app/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('cal.urls')), # Include your app's URLs\n]\n"}, {"file": "urls.py", "path": "calendar_app/cal/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('calendar/', views.calendar, name='calendar'),\n    # ... other URL patterns\n]"}, {"file": "views.py", "path": "calendar_app/cal/views.py", "code": "from django.shortcuts import render\nimport datetime\n\ndef home(request):\n    current_date = datetime.date.today()\n    return render(request, 'cal/home.html', {'current_date': current_date})\n\ndef calendar(request):\n    # Calendar logic will go here\n    return render(request, 'cal/calendar.html')\n# ... other views"}, {"file": "home.html", "path": "calendar_app/cal/templates/cal/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <div id=\"current-date-container\" class=\"current-date\">\n        Current Date: <span id=\"current-date-value\" class=\"date-value\">{{ current_date }}</span>\n    </div>\n\n    <div id=\"calendar-link-container\" class=\"calendar-link\">\n        <a id=\"calendar-link\" class=\"link\" href=\"{% url 'calendar' %}\">Go to Calendar</a>\n    </div>\n</body>\n</html>"}, {"file": "calendar.html", "path": "calendar_app/cal/templates/cal/calendar.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title id=\"calendar-title\" class=\"title\">Calendar</title>\n</head>\n<body>\n<div id=\"calendar-container\" class=\"calendar\">\n    <!-- Calendar content will go here -->\n</div>\n</body>\n</html>"}, {"file": "asgi.py", "path": "calendar_app/calendar_app/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calendar_app.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "calendar_app/calendar_app/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calendar_app.settings')\n\napplication = get_wsgi_application()"}, {"file": "apps.py", "path": "calendar_app/cal/apps.py", "code": "from django.apps import AppConfig\n\n\nclass CalConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cal'"}, {"file": "admin.py", "path": "calendar_app/cal/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "models.py", "path": "calendar_app/cal/models.py", "code": "# Create your models here."}, {"file": "__init__.py", "path": "calendar_app/cal/__init__.py", "code": ""}, {"file": "__init__.py", "path": "calendar_app/calendar_app/__init__.py", "code": ""}], "9": [{"file": "manage.py", "path": "mysite/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "mysite/mysite/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '+=u!16t9096n02v)@9x#4tl*6(tf5420&1q7j=orc5k%g9c3)'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'chatbot',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'mysite.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mysite.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "mysite/mysite/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('chatbot.urls')),\n]\n"}, {"file": "urls.py", "path": "mysite/chatbot/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('features/', views.features, name='features'),\n    path('pricing/', views.pricing, name='pricing'),\n    path('about/', views.about, name='about'),\n    path('support/', views.support, name='support'),\n]\n"}, {"file": "views.py", "path": "mysite/chatbot/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'chatbot/home.html')\n\ndef features(request):\n    return render(request, 'chatbot/features.html')\n\ndef pricing(request):\n    return render(request, 'chatbot/pricing.html')\n\ndef about(request):\n    return render(request, 'chatbot/about.html')\n\ndef support(request):\n    return render(request, 'chatbot/support.html')\n"}, {"file": "home.html", "path": "mysite/chatbot/templates/chatbot/home.html", "code": "<div id=\"home-container\" class=\"home-container\">\n    <h1 id=\"home-title\" class=\"home-title\">AI Chatbot</h1>\n    <p id=\"product-overview\" class=\"product-overview\">Discover the power of our AI Chatbot. It can answer your questions, provide customer support, and boost your business.</p>\n</div>\n"}, {"file": "features.html", "path": "mysite/chatbot/templates/chatbot/features.html", "code": "<div id=\"features-container\" class=\"features-container\">\n    <h2 id=\"features-title\" class=\"features-title\">Key Features</h2>\n    <ul id=\"features-list\" class=\"features-list\">\n        <li id=\"feature-1\" class=\"feature-item\">24/7 Availability</li>\n        <li id=\"feature-2\" class=\"feature-item\">Multilingual Support</li>\n        <li id=\"feature-3\" class=\"feature-item\">Customizable Integrations</li>\n    </ul>\n</div>\n"}, {"file": "pricing.html", "path": "mysite/chatbot/templates/chatbot/pricing.html", "code": "<div id=\"pricing-container\" class=\"pricing-container\">\n    <h2 id=\"pricing-title\" class=\"pricing-title\">Pricing Plans</h2>\n    <div id=\"pricing-plans\" class=\"pricing-plans\">\n      <div id=\"plan-basic\" class=\"pricing-plan\">Basic</div>\n      <div id=\"plan-pro\" class=\"pricing-plan\">Pro</div>\n      <div id=\"plan-enterprise\" class=\"pricing-plan\">Enterprise</div>\n    </div>\n    <form id=\"contact-sales-form\" class=\"contact-form\" action=\"\" method=\"post\">\n        <button id=\"contact-sales-button\" class=\"contact-button\" type=\"submit\">Contact Sales</button>\n    </form>\n</div>\n"}, {"file": "about.html", "path": "mysite/chatbot/templates/chatbot/about.html", "code": "<div id=\"about-container\" class=\"about-container\">\n    <h2 id=\"about-title\" class=\"about-title\">About Us</h2>\n    <p id=\"company-background\" class=\"company-info\">We are a team of passionate AI developers dedicated to creating innovative chatbot solutions.</p>\n</div>\n"}, {"file": "support.html", "path": "mysite/chatbot/templates/chatbot/support.html", "code": "<div id=\"support-container\" class=\"support-container\">\n    <h2 id=\"support-title\" class=\"support-title\">Support</h2>\n    <div id=\"faq-section\" class=\"faq\">\n      FAQ Content\n    </div>\n    <form id=\"support-message-form\" class=\"support-form\" action=\"\" method=\"post\">\n      <button id=\"support-message-button\" class=\"support-button\" type=\"submit\">Send Support Message</button>\n    </form>\n</div>\n"}], "10": [{"file": "manage.py", "path": "calorie_tracker/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"calorie_tracker.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "calorie_tracker/calorie_tracker/settings.py", "code": "# ... (Standard Django settings like SECRET_KEY, DATABASES, etc.)\n\nINSTALLED_APPS = [\n    # ... (Other apps)\n    'tracker',\n]\n\n# ... (Other settings)\n"}, {"file": "urls.py", "path": "calorie_tracker/calorie_tracker/urls.py", "code": "from django.urls import path, include\n\nurlpatterns = [\n    path('', include('tracker.urls')), # Include the tracker app's URLs\n]\n"}, {"file": "urls.py", "path": "calorie_tracker/tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('dashboard/', views.dashboard, name='dashboard'),\n    path('meal_log/', views.meal_log, name='meal_log'),\n    path('activity_log/', views.activity_log, name='activity_log'),\n    path('analysis/', views.analysis, name='analysis'),\n    path('settings/', views.settings, name='settings'),\n    path('help/', views.help, name='help'),\n    # ... other paths for specific functionalities like add meal, edit meal, etc.\n]"}, {"file": "views.py", "path": "calorie_tracker/tracker/views.py", "code": "from django.shortcuts import render\n\n# Create your views here.\ndef home(request):\n  return render(request, 'tracker/home.html')\n\ndef dashboard(request):\n    return render(request, 'tracker/dashboard.html')\n\n# ... similar functions for meal_log, activity_log, analysis, settings, and help\n"}, {"file": "home.html", "path": "calorie_tracker/tracker/templates/tracker/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Calorie Tracker - Home</title>\n</head>\n<body>\n  <div id=\"home-container\" class=\"home-container\">\n      <h1 id=\"welcome-message\" class=\"welcome-message\">Welcome to Calorie Tracker</h1>\n    <div id=\"signup-section\" class=\"auth-section\">\n         <a id=\"signup-link\" class=\"auth-link\" href=\"#\">Sign Up</a> </div>\n    <div id=\"login-section\" class=\"auth-section\">\n        <a id=\"login-link\" class=\"auth-link\" href=\"#\">Log In</a>\n    </div>\n      <a id=\"view-dashboard-link\" class=\"dashboard-link\" href=\"{% url 'dashboard' %}\">View Dashboard</a> </div>\n</body>\n</html>\n"}, {"file": "dashboard.html", "path": "calorie_tracker/tracker/templates/tracker/dashboard.html", "code": "<!-- Similar structure with appropriate ids and classes for all elements -->\n"}, {"file": "models.py", "path": "calorie_tracker/tracker/models.py", "code": "# Define your models here (e.g., Meal, Activity, User)\n"}, {"file": "apps.py", "path": "calorie_tracker/tracker/apps.py", "code": "from django.apps import AppConfig\n\nclass TrackerConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tracker'\n"}, {"file": "admin.py", "path": "calorie_tracker/tracker/admin.py", "code": "from django.contrib import admin\n\n# Register your models here."}, {"file": "__init__.py", "path": "calorie_tracker/tracker/__init__.py", "code": ""}, {"file": "__init__.py", "path": "calorie_tracker/calorie_tracker/__init__.py", "code": ""}, {"file": "asgi.py", "path": "calorie_tracker/calorie_tracker/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker.settings')\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "calorie_tracker/calorie_tracker/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'calorie_tracker.settings')\n\napplication = get_wsgi_application()\n"}], "11": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\n\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n\ndef main():\n    \"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n# ... other settings ...\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')], # Add this line\n        # ... other template settings ...\n    },\n]\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n# Add apps\nINSTALLED_APPS = [\n    # ...\n    'myapp',\n]"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'myapp/home.html')\n\ndef about(request):\n    return render(request, 'myapp/about.html')"}, {"file": "home.html", "path": "myproject/templates/myapp/home.html", "code": "<html>\n<head><title id=\"title-id\" class=\"title-class\">My Test Code Review App</title></head>\n<body>\n    <h1 id=\"welcome-id\" class=\"welcome-class\">Welcome!</h1>\n\n    <form id=\"status-form-id\" class=\"status-form-class\" method=\"post\">\n        <label for=\"status-select-id\">Status:</label>\n        <select id=\"status-select-id\" class=\"status-select-class\" name=\"status\">\n            <option value=\"select\">Select</option>\n            <option value=\"pass\">Pass</option>\n            <option value=\"fail\">Fail</option>\n        </select>\n        <button id=\"submit-button-id\" class=\"submit-button-class\" type=\"submit\">Submit</button>\n    </form>\n\n    <form id=\"import-form-id\" class=\"import-form-class\" method=\"post\" enctype=\"multipart/form-data\">  \n        <input id=\"import-file-id\" class=\"import-file-class\" type=\"file\" name=\"file\">\n        <button id=\"import-submit-id\" class=\"import-submit-class\" type=\"submit\">Import</button>\n    </form>\n\n    <textarea id=\"notes-area-id\" class=\"notes-area-class\" placeholder=\"Reviewing Notes\"></textarea>\n</body>\n</html>"}, {"file": "about.html", "path": "myproject/templates/myapp/about.html", "code": "<html>\n<head><title id=\"about-title-id\" class=\"about-title-class\">About Us</title></head>\n<body>\n    <div id=\"about-content-id\" class=\"about-content-class\">\n        <p>This website allows you to review test code and provide feedback.</p>\n    </div>\n</body>\n</html>"}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}], "12": [{"file": "manage.py", "path": "expense_tracker/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_tracker.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "expense_tracker/expense_tracker/settings.py", "code": "# ... (Standard Django settings) ...\n\nINSTALLED_APPS = [\n    # ... (Other apps)\n    'claims.apps.ClaimsConfig',\n    # ...\n]\n\n# ... (Other settings)\nLOGIN_REDIRECT_URL = '/employee/'\nLOGOUT_REDIRECT_URL = '/'\n"}, {"file": "urls.py", "path": "expense_tracker/expense_tracker/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\nfrom django.views.generic import TemplateView # Import TemplateView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('accounts/', include('django.contrib.auth.urls')), # Added for authentication\n    path('employee/', include('claims.urls')), # Include employee urls\n    path('admin_portal/', include('claims.admin_urls')),  # Include admin urls\n    path('budget/', include('claims.budget_urls')), # Include budget urls\n    path('', TemplateView.as_view(template_name='home.html'), name='home'), # Home page\n]\n"}, {"file": "models.py", "path": "expense_tracker/claims/models.py", "code": "from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Claim(models.Model):\n    CLAIM_TYPES = (\n        ('TRAVEL', 'Travel'),\n        ('LABOR', 'Labor'),\n        ('MANAGEMENT', 'Management'),\n        ('EQUIPMENT', 'Equipment'),\n    )\n    STATUS_CHOICES = (\n        ('PENDING', 'Pending'),\n        ('APPROVED', 'Approved'),\n        ('REJECTED', 'Rejected'),\n    )\n\n    employee = models.ForeignKey(User, on_delete=models.CASCADE)\n    claim_type = models.CharField(max_length=20, choices=CLAIM_TYPES)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    description = models.TextField()\n    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default='PENDING')\n    reason_for_rejection = models.TextField(blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True) # Added timestamp\n\n    def __str__(self):\n        return f'{self.employee.username} - {self.claim_type} - {self.amount}'\n\nclass Budget(models.Model):\n    category = models.CharField(max_length=50)\n    limit = models.DecimalField(max_digits=10, decimal_places=2)\n    current_spending = models.DecimalField(max_digits=10, decimal_places=2, default=0)\n\n    def __str__(self):\n        return self.category"}, {"file": "home.html", "path": "expense_tracker/claims/templates/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n<div id=\"home-container\" class=\"home-container\">\n<h1 id=\"welcome-message\">Welcome to the Expense Tracker</h1>\n{% if user.is_authenticated %}\n<p>Hello, {{ user.username }}!</p>\n<a id=\"logout-link\" href=\"{% url 'logout' %}\">Logout</a>\n{% else %}\n<a id=\"login-link\" href=\"{% url 'login' %}\">Login</a>\n<a id=\"signup-link\" href=\"{% url 'signup' %}\">Sign Up</a>\n{% endif %}\n</div>\n{% endblock %}\n"}, {"file": "views.py", "path": "expense_tracker/claims/views.py", "code": "# ... (Import necessary modules)\nfrom .models import Claim, Budget\nfrom django.shortcuts import render, redirect, get_object_or_404\nfrom django.contrib.auth.decorators import login_required\nfrom django.http import HttpResponse\nfrom django.contrib import messages\nfrom .forms import ClaimForm, BudgetForm\nfrom django.db.models import Sum\n\n# ... (Other views)\n\n"}, {"file": "urls.py", "path": "expense_tracker/claims/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n  # ... (Other URL patterns)\n]\n"}, {"file": "admin_urls.py", "path": "expense_tracker/claims/admin_urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n  # ... (Admin URL patterns)\n]\n"}, {"file": "budget_urls.py", "path": "expense_tracker/claims/budget_urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n# ... (Budget URL patterns)\n]\n"}], "13": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"myproject.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'your_secret_key_here'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]\n"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    # ... other URL patterns for Customer Management, Product Management, etc.\n]\n"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'myapp/home.html')\n\n# ... other view functions\n"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Home Page</title>\n</head>\n<body>\n    <div id=\"home-container\" class=\"main-container\">\n        <h1 id=\"welcome-message\" class=\"title\">Welcome to Our System</h1>\n        <p id=\"system-overview\" class=\"description\">This system allows you to manage customers, products, and purchases.</p>\n    </div>\n</body>\n</html>\n"}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\n\nclass MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'\n"}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\n\n# Register your models here.\n"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n\n# Create your models here.\n"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()\n"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}], "14": [{"file": "settings.py", "path": "helloworldproject/helloworldproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key_here'\n\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'helloworldapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'helloworldproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'helloworldproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n"}, {"file": "urls.py", "path": "helloworldproject/helloworldproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom helloworldapp import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.helloworld, name='helloworld'),\n]\n"}, {"file": "views.py", "path": "helloworldproject/helloworldapp/views.py", "code": "from django.shortcuts import render\n\ndef helloworld(request):\n    return render(request, 'helloworldapp/index.html')\n"}, {"file": "index.html", "path": "helloworldproject/templates/helloworldapp/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title id=\"title\">Hello World</title>\n    <style>\n        body {\n            font-family: sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            background-color: #f0f0f0;\n            margin:0;\n        }\n        #hello-world-container{\n            padding: 20px;\n            border-radius: 10px;\n            background-color: white;\n        }\n        #hello-world {\n            font-size: 2em;\n            color: #333;\n        }\n        @media (max-width: 768px) {\n            #hello-world {\n                font-size: 1.5em;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div id=\"hello-world-container\" class=\"main-container\">\n        <h1 id=\"hello-world\" class=\"hello-world-text\">Hello World</h1>\n    </div>\n</body>\n</html>\n"}, {"file": "apps.py", "path": "helloworldproject/helloworldapp/apps.py", "code": "from django.apps import AppConfig\n\n\nclass HelloworldappConfig(AppConfig):\n    default_auto_created = True\n    name = 'helloworldapp'\n"}, {"file": "admin.py", "path": "helloworldproject/helloworldapp/admin.py", "code": ""}, {"file": "models.py", "path": "helloworldproject/helloworldapp/models.py", "code": ""}, {"file": "tests.py", "path": "helloworldproject/helloworldapp/tests.py", "code": ""}, {"file": "__init__.py", "path": "helloworldproject/helloworldapp/__init__.py", "code": ""}, {"file": "asgi.py", "path": "helloworldproject/helloworldproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'helloworldproject.settings')\n\napplication = get_asgi_application()\n"}, {"file": "wsgi.py", "path": "helloworldproject/helloworldproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'helloworldproject.settings')\n\napplication = get_wsgi_application()\n"}, {"file": "manage.py", "path": "helloworldproject/manage.py", "code": "#!/usr/bin/env python\n\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'helloworldproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "__init__.py", "path": "helloworldproject/helloworldproject/__init__.py", "code": ""}], "15": [{"file": "manage.py", "path": "myproject/manage.py", "code": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"myproject.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\\\n            \"available on your PYTHONPATH environment variable? Did you \"\\\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'your_secret_key'\n\nDEBUG = True\n\nALLOWED_HOSTS = []\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\nfrom myapp import views\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'myapp/home.html')\n\ndef helloworld(request):\n    return render(request, 'myapp/helloworld.html')"}, {"file": "home.html", "path": "myproject/myapp/templates/myapp/home.html", "code": "<html>\n<head><title>Home</title></head>\n<body>\n    <a id=\"helloworld-button\" class=\"navigation-button\" href=\"{% url 'helloworld' %}\">Go to HelloWorld</a>\n</body>\n</html>"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/myapp/helloworld.html", "code": "<html>\n<head><title>HelloWorld</title></head>\n<body>\n    <h1 id=\"helloworld-message\" class=\"page-title\">HelloWorld</h1>\n</body>\n</html>"}, {"file": "apps.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    name = 'myapp'"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "from django.contrib import admin\n# Register your models here."}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "from django.db import models\n# Create your models here."}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": "from django.test import TestCase\n# Create your tests here."}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "import os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_wsgi_application()"}, {"file": "__init__.py", "path": "myproject/myproject/__init__.py", "code": ""}, {"file": "asgi.py", "path": "myproject/myproject/asgi.py", "code": "import os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n\napplication = get_asgi_application()"}], "18": [{"file": "index.html", "path": "", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Bash Crawl</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div id=\"main-menu\" class=\"page\">\n        <h1>Bash Crawl</h1>\n        <button id=\"start-game\" class=\"menu-button\">Start Game</button>\n        <button id=\"instructions\" class=\"menu-button\">Instructions</button>\n        <button id=\"exit-game\" class=\"menu-button\">Exit Game</button>\n    </div>\n\n    <div id=\"game-environment\" class=\"page hidden\">\n        <div id=\"game-output\" class=\"game-area\"></div>\n        <input id=\"command-input\" class=\"command-line\" type=\"text\">\n        <button id=\"submit-command\" class=\"command-button\">Submit</button>\n        <div id=\"inventory\" class=\"inventory-area\">Inventory:</div>\n    </div>\n\n    <div id=\"instructions-page\" class=\"page hidden\">\n        <h2>Instructions</h2>\n        <p>Explore the dungeon by entering commands.  Try commands like \"go north\", \"look\", \"take item\".</p>\n        <button id=\"back-to-menu\" class=\"menu-button\">Back to Menu</button>\n    </div>\n\n\n    <script src=\"script.js\"></script>\n</body>\n</html>"}, {"file": "style.css", "path": "", "code": "body {\n    font-family: monospace;\n    background-color: #000;\n    color: #fff;\n}\n\n.page {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    width: 100%;\n}\n\n.hidden {\n    display: none;\n}\n\n.game-area {\n    background-color: #222;\n    color: #eee;\n    padding: 10px;\n    min-height: 200px;\n    width: 80%;\n    margin-bottom: 10px; /* Add margin */\n    overflow-y: auto;\n}\n\n.command-line {\n    background-color: #111;\n    color: #eee;\n    border: none;\n    padding: 5px;\n    width: 80%;\n}\n\n.command-button {\n  background-color: #444; /* Green */\n  border: none;\n  color: white;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n}\n\n.inventory-area {\n    background-color: #222;\n    color: #eee;\n    padding: 10px;\n    width: 80%;\n    margin-top: 10px;\n}\n\n.menu-button {\n    background-color: #444;\n    color: #fff;\n    padding: 10px 20px;\n    margin: 5px;\n    border: none;\n    cursor: pointer;\n}\n"}, {"file": "script.js", "path": "", "code": "// JavaScript for Bash Crawl\n\nconst mainMenu = document.getElementById('main-menu');\nconst gameEnvironment = document.getElementById('game-environment');\nconst instructionsPage = document.getElementById('instructions-page');\nconst startGameButton = document.getElementById('start-game');\nconst instructionsButton = document.getElementById('instructions');\nconst exitGameButton = document.getElementById('exit-game');\nconst backToMenuButton = document.getElementById('back-to-menu');\nconst gameOutput = document.getElementById('game-output');\nconst commandInput = document.getElementById('command-input');\nconst submitCommandButton = document.getElementById('submit-command');\nconst inventoryDiv = document.getElementById('inventory');\n\nlet currentRoom = 'start';\nlet inventory = [];\n\nconst gameData = {\n    start: {\n        description: \"You are in a dusty old room. There is a door to the north.\",\n        items: ['key'],\n        north: 'corridor'\n    },\n    corridor: {\n        description: \"A long corridor stretches before you. There's a door to the south and east.\",\n        east: 'treasureRoom',\n        south: 'start'\n    },\n    treasureRoom: {\n        description: \"You've found the treasure room! A magnificent chest sits in the center.\",\n        items: ['treasure'],\n        west: 'corridor'\n    }\n};\n\nfunction showPage(pageId) {\n    mainMenu.classList.add('hidden');\n    gameEnvironment.classList.add('hidden');\n    instructionsPage.classList.add('hidden');\n\n    switch (pageId) {\n        case 'main-menu':\n            mainMenu.classList.remove('hidden');\n            break;\n        case 'game-environment':\n            gameEnvironment.classList.remove('hidden');\n            break;\n        case 'instructions-page':\n            instructionsPage.classList.remove('hidden');\n            break;\n    }\n}\n\nfunction displayOutput(message) {\n    gameOutput.innerHTML += `<p>${message}</p>`;\n    gameOutput.scrollTop = gameOutput.scrollHeight; // Auto-scroll\n}\n\nfunction updateInventory() {\n    inventoryDiv.innerHTML = `Inventory: ${inventory.join(', ')}`;\n}\n\nfunction startGame() {\n    showPage('game-environment');\n    displayOutput(gameData[currentRoom].description);\n    if(gameData[currentRoom].items) {     // Check for items in the room\n        inventory.push(...gameData[currentRoom].items); // Add all items at once\n        updateInventory(); \n    }\n}\n\nfunction parseCommand(command) {\n    command = command.toLowerCase();\n    const words = command.split(' ');\n    const action = words[0];\n    const direction = words[1];\n\n    if (action === 'go' && gameData[currentRoom][direction]) {\n        currentRoom = gameData[currentRoom][direction];\n        displayOutput(gameData[currentRoom].description);\n        if(gameData[currentRoom].items) {\n            inventory.push(...gameData[currentRoom].items);\n            updateInventory();\n        }\n    } else if (action === 'look') {\n        displayOutput(gameData[currentRoom].description);\n        updateInventory(); // To show the inventory when looking\n    } else if (action === 'take') { //Basic take functionality, assumes only one item\n        if (gameData[currentRoom].items && gameData[currentRoom].items.length>0) {\n            inventory.push(...gameData[currentRoom].items); // Adds items to inventory\n            gameData[currentRoom].items = []; // Clears items from room\n            updateInventory();\n            displayOutput(\"Item taken.\");            \n        } else {\n            displayOutput(\"There's nothing here to take.\");\n        }\n    }\n     else if (action === 'inventory' || action === 'i') {\n        updateInventory();\n    }\n    else {\n        displayOutput(\"Invalid command.\");\n    }\n}\n\nstartGameButton.addEventListener('click', startGame);\ninstructionsButton.addEventListener('click', () => showPage('instructions-page'));\nexitGameButton.addEventListener('click', () => window.close()); // Or other exit logic\nbackToMenuButton.addEventListener('click', () => showPage('main-menu'));\nsubmitCommandButton.addEventListener('click', () => {\n    const command = commandInput.value;\n    parseCommand(command);\n    commandInput.value = ''; // Clear the input field\n});\n\ncommandInput.addEventListener('keyup', (event) => {\n    if (event.key === 'Enter') {\n        submitCommandButton.click();\n    }\n});\n\nshowPage('main-menu'); // Start on the main menu\n"}]}