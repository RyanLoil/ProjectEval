{"17": [{"file": "GamedataProcessor.bat", "path": "scripts/GamedataProcessor.bat", "code": "@echo off\r\npython -m pandas\r\nlib pandas\r\nfrom sklearn.linear_model import LogisticRegression\r\nimport numpy as np\r\n\r\n# Load dataset\r\ndataset = pd.read_excel('Gamedata.xlsx', index_col=0)\r\n\r\n# Set dependent variable\r\ndv = 'result'\r\n\r\n# Create one-period-lag process\r\ndataset['lag_result'] = dataset[dv].shift(-1)\r\n\r\n# Select independent variables\r\nivs = dataset.iloc[:, : -1]\r\n\r\n# Train Logistic Regression model\r\nmodel = LogisticRegression()\r\nmodel.fit(ivs, dataset['lag_result'])\r\n\r\n# Summarize model\r\nsummary = model.summary()\r\n\r\n# Save summary to 'Logistic.xlsx'\r\npandas.DataFrame({'Summary': [str(summary)]}).to_excel('Logistic.xlsx', index=False)\r\n"}, {"file": "GamedataProcessor.py", "path": "scripts/GamedataProcessor.py", "code": "import pandas as pd\r\nfrom sklearn.linear_model import LogisticRegression\r\nimport numpy as np\r\n\r\n# Load dataset\r\ndataset = pd.read_excel('Gamedata.xlsx', index_col=0)\r\n\r\n# Set dependent variable\r\ndv = 'result'\r\n\r\n# Create one-period-lag process\r\ndataset['lag_result'] = dataset[dv].shift(-1)\r\n\r\n# Select independent variables\r\nivs = dataset.iloc[:, : -1]\r\n\r\n# Train Logistic Regression model\r\nmodel = LogisticRegression()\r\nmodel.fit(ivs, dataset['lag_result'])\r\n\r\n# Summarize model\r\nreturn model.summary()"}, {"file": "Essential Files", "path": "directories/essential_files", "code": "pandas\r\nsklearn\r\numpy"}], "18": [{"file": "main.py", "path": "crawler/main.py", "code": "import requests\nfrom bs4 import BeautifulSoup\n# ... remaining code ..."}, {"file": "crawler.py", "path": "crawler/crawler.py", "code": "def crawl(url):\n    response = requests.get(url)\n    soup = BeautifulSoup(response.content, 'html.parser')\n    # ... remaining code ..."}, {"file": "helper.py", "path": "crawler/helper.py", "code": "def get_links(soup):\n    links = []\n    # ... remaining code ..."}, {"file": "menu.html", "path": "templates/menu.html", "code": "<ul id='menu'>\n    <li class='link'>Home</li>\n    <li class='link'>About</li>\n    # ... remaining list items ..."}, {"file": "index.html", "path": "templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    # ... remaining code ..."}, {"file": "style.css", "path": "templates/style.css", "code": ".link { color: #000; text-decoration: none; }\n#menu { ... remaining code ..."}], "19": [{"file": "DeathlistProcessor.bat", "path": "C:\\Users\\username\\Documents\\DeathlistProcessor.bat", "code": "@echo off\r\nsetlocal enabledelayedexpansion\r\nfor /f \"tokens=1-2 delim=;\" %%a in (Deathlist.csv) do (set /a count[%%b]=!count[%%b]!+1)\r\nfor /f \"tokens=1-2 delim=;\" %%a in (Deathlist.csv) do (echo !count[%%b]!)"}, {"file": "index.html", "path": "C:\\Users\\username\\Documents\\index.html", "code": "<html><head><title>Death Histogram</title><style>h1{text-align:center;padding:20px;font-size:2em;}</style></head><body><h1>Weekly Death Histogram</h1><div id='histogram'></div><script src='histogram.js'></script></body></html>"}, {"file": "histogram.js", "path": "C:\\Users\\username\\Documents\\histogram.js", "code": "const data = ['2023-01-01', '2023-01-08', '2023-01-15', '2023-01-22', '2023-01-29', '2023-02-05'];\r\nconst histogram = document.getElementById('histogram');\r\ndata.forEach(date => {\r\n  const count = document.querySelector(`.death-${date}`).textContent;\r\n  const bar = document.createElement('div');\r\n  bar.classList.add('bar');\r\n  bar.style.width = `${count * 20}px`;\r\n  histogram.appendChild(bar);\r\n});"}], "20": [{"file": "answer.html", "path": "templates/blog/answer.html", "code": "{% extends 'base.html' %}\n\n{% block content %}\n    <div id='answer-container'>\n        <h1>Answer Title</h1>\n        <p>Answer description...</p>\n    </div>\n\n{% endblock %}\n"}, {"file": "blog/views.py", "path": "blog/views.py", "code": "from .models import Answer\n\ndef answer_list(request):\n    answers = Answer.objects.all()\n    return render(request, 'blog/answer.html', {'answers': answers})"}, {"file": "blog/models.py", "path": "blog/models.py", "code": "from django.db import models\n\nclass Answer(models.Model):\n    title = models.CharField(max_length=255)\n    description = models.TextField()"}]}