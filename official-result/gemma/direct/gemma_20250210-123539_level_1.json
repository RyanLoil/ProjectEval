{"11": [{"file": "views.py", "path": "password_generator/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'password_generator/home.html')\n\ndef about(request):\n    return render(request, 'password_generator/about.html')"}, {"file": "templates/password_generator/home.html", "path": "password_generator/templates/password_generator/home.html", "code": "<html>\n<head>\n<title>Password Generator</title>\n</head>\n<body>\n    <h1 id='welcome-message'>Welcome to the Password Generator!</h1>\n    <button id='navigation-button'>Generate Password</button>\n</body>\n</html>"}, {"file": "templates/password_generator/about.html", "path": "password_generator/templates/password_generator/about.html", "code": "<html>\n<head>\n<title>About Password Generator</title>\n</head>\n<body>\n    <p id='description'>This website is a password generator that helps you create strong and secure passwords.</p>\n</body>\n</html>"}], "17": [{"file": "GamedataRead.bat", "path": "./scripts/GamedataRead.bat", "code": "@echo off\r\nxlrd /a \"Gamedata.xlsx\" Gamedata.csv\r\n"}, {"file": "LogisticModel.bat", "path": "./scripts/LogisticModel.bat", "code": "@echo off\r\npython -m pandas as pd\r\nimport sklearn\r\nfrom sklearn.linear_model import LogisticRegression\r\n\r\n# Load data\r\ndata = pd.read_csv(\"Gamedata.csv\")\r\n\r\n# One-period-lag process\r\ndata['result_lag'] = data['result'].shift(-1)\r\n\r\n# Drop the original result column\r\ndata = data.drop('result', axis=1)\r\n\r\n# Create and fit the logistic model\r\nmodel = LogisticRegression(max_iter=1000)\r\nmodel.fit(data.iloc[:, 1:], data['result_lag'])"}, {"file": "LogisticSummary.bat", "path": "./scripts/LogisticSummary.bat", "code": "@echo off\r\npython -m pandas as pd\r\nimport sklearn\r\nfrom sklearn.linear_model import LogisticRegression\r\n\r\n# Load data\r\ndata = pd.read_csv(\"Gamedata.csv\")\r\n\r\n# One-period-lag process\r\ndata['result_lag'] = data['result'].shift(-1)\r\n\r\n# Drop the original result column\r\ndata = data.drop('result', axis=1)\r\n\r\n# Create and fit the logistic model\r\nmodel = LogisticRegression(max_iter=1000)\r\nmodel.fit(data.iloc[:, 1:], data['result_lag'])\r\n\r\n# Summarize the model\r\nsummary = model.summary()\r\n\r\n# Write the summary to a CSV file\r\npd.DataFrame({'Summary': [str(summary)]}).to_csv('Logistic.xlsx', index=False)"}], "20": [{"file": "settings.py", "path": "project/app/settings.py", "code": "..."}, {"file": "urls.py", "path": "project/app/urls.py", "code": "..."}, {"file": "models.py", "path": "project/app/models.py", "code": "..."}, {"file": "views.py", "path": "project/app/views.py", "code": "..."}, {"file": "templates/base.html", "path": "project/app/templates/base.html", "code": "..."}, {"file": "templates/index.html", "path": "project/app/templates/index.html", "code": "..."}]}