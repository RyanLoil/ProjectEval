{"6": [{"file": "manage.py", "path": "todo/manage.py", "code": "from django.core.management import execute_from_command\n\nexecute_from_command('runserver')"}, {"file": "settings.py", "path": "todo/settings.py", "code": "# Your Django settings configuration.\n\n# ... (Other settings) ..."}, {"file": "urls.py", "path": "todo/urls.py", "code": "from django.contrib import admin\n\nfrom . import views\n\nurlpatterns = [    \n    path('admin/', admin.site.urls),\n    path('', views.index, name='index'),\n    path('todo/<int:pk>/edit/', views.edit, name='edit'),\n    path('todo/', views.create, name='create'),\n    path('todo/<int:pk>/delete/', views.delete, name='delete'),\n]"}, {"file": "views.py", "path": "todo/views.py", "code": "from django.shortcuts import render, redirect\n\nfrom .models import Todo\n\ndef index(request):\n    todos = Todo.objects.all()\n    return render(request, 'todo/index.html', {'todos': todos})\n\ndef create(request):\n    \u2026 (Code for creating a new Todo object)\n\n# ... (Code for edit and delete views) ..."}, {"file": "templates/todo/index.html", "path": "todo/templates/todo/index.html", "code": "<ul id='todo-list'>\n    {% for todo in todos %}    <li class='todo-item'>\n        <span class='todo-title'>{{ todo.title }}</span>\n        <a href='{% url 'edit' todo.id %}' class='edit-link'>Edit</a>\n        <a href='{% url 'delete' todo.id %}' class='delete-link'>Delete</a>\n    </li>\n    {% endfor %}    \n</ul>\n\n<form action='{% url 'create' %}' method='post'>\n    <input type='text' name='title' placeholder='Add a new todo...'>\n    <input type='submit' value='Add Todo'>\n</form>"}], "17": [{"file": "logistic.bat", "path": ".", "code": "@echo off\r\nxlrd \"Gamedata.xlsx\" /a:\"Gamedata.csv\"\r\nlogistic regression --mode=classification --label=result --predict-features=\"^.*\" --transform-features='lag(result, 1)' --output-file=Logistic.xlsx Gamedata.csv\r\n"}, {"file": "Gamedata.xlsx", "path": ".", "code": ""}, {"file": "Logistic.xlsx", "path": ".", "code": ""}], "18": [{"file": "crawl.py", "path": "crawl.py", "code": "import requests\nfrom bs4 import BeautifulSoup\n\ndef crawl(url):\n    response = requests.get(url)\n    soup = BeautifulSoup(response.content, 'html.parser')\n    # ... Code to crawl and extract data from HTML elements ..."}, {"file": "main.py", "path": "main.py", "code": "from crawl import crawl\n\nurl = 'https://example.com'\nresults = crawl(url)\n\n# ... Code to process and display the results of the crawl ..."}, {"file": "html_element.py", "path": "html_element.py", "code": "class HTMLElement:\n    def __init__(self, tag, attributes=None):\n        self.tag = tag\n        self.attributes = attributes\n\n    # ... Code to define methods for getting and setting attributes, text, and HTML content ..."}], "19": [{"file": "read_deathlist.bat", "path": "./", "code": "@echo off\r\nfor /f \"delims=,\" %%a in (Deathlist.csv) do (echo %%a)\r\npause"}, {"file": "histogram.html", "path": "./", "code": "<html><head><title>Histogram of Weekly Deaths</title><style>body{font-family: Arial, sans-serif;}</style></head><body>\r\n<h1>Histogram of Weekly Deaths</h1>\r\n<div id='container'></div>\r\n<script>\r\nconst csvData = [];\r\nfetch('read_deathlist.bat').then(res => res.text()).then(data => csvData.push(data.split('\n'))\r\nconst weekData = {};\r\ncsvData.forEach(row => {\r\nconst date = row[2].split('/')[1];\r\nif (!weekData[date]) weekData[date] = 0;\r\nweekData[date]++;\r\n});\r\nconst container = document.getElementById('container');\r\nfor (const week in weekData) {\r\nconst bar = document.createElement('div');\r\nbar.classList.add('bar');\r\nbars.style.width = `${weekData[week] * 20}%`;\r\ncontainer.appendChild(bar);\r\n}\r\n</script></body></html>"}]}