{"1": [{"file": "bmi_calculator/templates/bmi_calculator/result.html", "path": "somepath/somedir/bmi_calculator/templates/bmi_calculator/result.html", "code": "Template to display the calculated BMI and interpretation."}], "2": [{"file": "currencies/forms.py", "path": "path/to/app/currencies/forms.py", "code": "the_skeleton"}, {"file": "currencies/views.py", "path": "path/to/app/currencies/views.py", "code": "the_skeleton"}, {"file": "/templates/home.html", "path": "/templates/home.html", "code": "Template for Home page with currency selection and amount input fields."}, {"file": "/templates/results.html", "path": "/templates/results.html", "code": "Template for Results page displaying the converted amount and conversion history."}], "3": [{"file": "home/views.py", "path": "app/home/views.py", "code": "from password_manager.models import Password\n\ndef generate_password(request):\n    # ... Code to generate password ..."}, {"file": "generate/forms.py", "path": "app/generate/forms.py", "code": "class PasswordForm(forms.ModelForm):\n    # ... Code to define password generation form fields ..."}, {"file": "settings/password_manager.py", "path": "app/settings.py", "code": "PASSWORD_MANAGER_SETTINGS = {\n    'DEFAULT_PASSWORD_LENGTH': 12,\n    'CUSTOM_CHARSETS': [...],  # ... Define custom character sets...\n}"}], "5": [{"file": "settings.py", "path": "project/project/settings.py", "code": "# ... Django settings configuration ...\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': 'project.db',\n    }\n}\n\n# ... Other settings ...\n"}, {"file": "urls.py", "path": "project/project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path\n\nfrom . import views\n\nurlpatterns = [ \n    path('admin/', admin.site.urls), \n    path('home/', views.home, name='home'), \n]\n"}, {"file": "views.py", "path": "project/project/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html', {'title': 'Django Project'})"}, {"file": "home.html", "path": "project/project/templates/home.html", "code": "<html> \n<head> \n    <title>{{ title }}</title> \n</head> \n<body> \n    <h1>Welcome to Django Project!</h1> \n</body> \n</html>"}], "6": [{"file": "home.html", "path": "templates/todo/home.html", "code": "{% extends 'base.html' %}\n{% block content %}\n... Template code for Home page goes here ...\n{% endblock %}\n"}, {"file": "todo_details.html", "path": "templates/todo/todo_details.html", "code": "{% extends 'base.html' %}\n{% block content %}\n... Template code for Todo Details page goes here ...\n{% endblock %}\n"}, {"file": "advanced.html", "path": "templates/todo/advanced.html", "code": "{% extends 'base.html' %}\n{% block content %}\n... Template code for Advanced page goes here ...\n{% endblock %}\n"}], "10": [{"file": "calorie_tracker/views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    # ... Your code to render the home page ...}"}, {"file": "calorie_tracker/models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\n\nclass Meal(models.Model):\n    # ... Your code to define the Meal model ...}"}, {"file": "/calorie_tracker/templates/home.html", "description": "Template for the home page with functions to create new trackers, import data, and search entries."}, {"file": "/calorie_tracker/templates/track.html", "description": "Template for the tracking page with functions to scan food barcodes, log custom meals, and schedule meals."}, {"file": "/calorie_tracker/templates/analyze.html", "description": "Template for the analysis page with functions to generate daily calorie reports, food category breakdowns, and trend analyses."}, {"file": "/calorie_tracker/templates/settings.html", "description": "Template for the settings page with functions to edit personal profiles, configure notifications, and access support resources."}], "13": [{"file": "clients/forms.py", "path": "clients/forms.py", "code": "from django.forms import forms\n\nclass ClientForm(forms.ModelForm):\n    ... # remaining code"}, {"file": "clients/views.py", "path": "clients/views.py", "code": "from clients.models import Client\n\ndef create_client(request):\n    ... # remaining code"}, {"file": "products/models.py", "path": "products/models.py", "code": "from django.db import models\n\nclass Product(models.Model):\n    ... # remaining code"}, {"file": "/example_app/marketing/reports.html", "description": "Template for generating sales reports."}, {"file": "/example_app/marketing/recommendations.html", "description": "Template for displaying product recommendations."}, {"file": "/example_app/marketing/campaigns.html", "description": "Template for creating and tracking marketing campaigns."}], "15": [{"file": "templates/index.html", "path": "templates/index.html", "code": "<button id='helloworld-button' class='button-primary'>Jump to 'helloworld' page</button>\n"}, {"file": "views.py", "path": "app/views.py", "code": "def helloworld(request):\n    return render(request, 'templates/helloworld.html')\n"}], "16": [{"file": "read_subjects.py", "path": "src/main/python/reader/read_subjects.py", "code": "import pandas as pd\n\n# Read subject list from 'Spring Semester Subjects.xlsx'\nsheet_name = 'Sheet1'\ndata = pd.read_excel('Spring Semester Subjects.xlsx', sheet_name=sheet_name)\n\n# Transform data into a two-dimensional table\nsubjects, time_periods = data['Subject'].tolist(), data['Semester'].tolist()\nresult = pd.DataFrame({'Subject': subjects, 'Semester': time_periods})\n\n# Output data to a new Excel file\nsaved_path = 'transformed_subjects.xlsx'\nsaved_df = pd.DataFrame({'Subject': subjects, 'Semester': time_periods})\nsaved_df.to_excel(saved_path, index=False)"}, {"file": "/example_app/SpringSemesterSubjects.xlsx", "description": "Original data file for Spring Semester Subjects."}, {"file": "/example_app/transformed_subjects.xlsx", "description": "Transformed data with subjects as rows and time periods as columns."}], "17": [{"file": "data_extraction.py", "path": "src/data/data_extraction.py", "code": "import pandas as pd\n\n# Read dataset\ndata = pd.read_excel('Gamedata.xlsx', index=0)\n\n# Lag result column\ndata['result_lag'] = data['result'].shift(-1)\n\n# Extract independence variables\ndependent_vars = data.iloc[:, 1:-2].columns\n\n# Return extracted data\nreturn data"}, {"file": "modeling.py", "path": "src/modeling/modeling.py", "code": "import pandas as pd\nfrom sklearn.linear_model import LogisticRegression\n\n# Load extracted data\ndata = pd.read_csv('data.csv')\n\n# Fit logistic model\nmodel = LogisticRegression()\nmodel.fit(data.iloc[:, 1:-2], data['result_lag'])\n\n# Return model object\nreturn model"}, {"file": "output.py", "path": "src/output/output.py", "code": "import pandas as pd\n\n# Load model and data\nmodel = ... # Load fitted model\ndata = ... # Load extracted data\n\n# Summarize model output\nsummary = model.summary()\n\n# Write model summary to file\npdf.DataFrame({'Model Summary': [summary]}).to_excel('Logistic.xlsx', index=0)"}], "18": [{"file": "search.py", "path": "src/frontend/pages/search.py", "code": "the_skeleton"}, {"file": "browse.py", "path": "src/frontend/pages/browse.py", "code": "the_skeleton"}, {"file": "filter.py", "path": "src/frontend/pages/filter.py", "code": "the_skeleton"}, {"file": "items.py", "path": "src/frontend/pages/items.py", "code": "the_skeleton"}, {"file": "compare.py", "path": "src/frontend/pages/compare.py", "code": "the_skeleton"}, {"file": "review.py", "path": "src/frontend/pages/review.py", "code": "the_skeleton"}], "20": [{"file": "home/views.py", "path": "home/views.py", "code": "from django.shortcuts import render\ndef index(request):\n    return render(request, 'home.html')"}, {"file": "projects/views.py", "path": "projects/views.py", "code": "from django.shortcuts import render\ndef project_list(request):\n    return render(request, 'projects/project_list.html')"}, {"file": "resources/views.py", "path": "resources/views.py", "code": "from django.shortcuts import render\ndef resource_list(request):\n    return render(request, 'resources/resource_list.html')"}, {"file": "/example_app/templates/home.html", "description": "Homepage template."}, {"file": "/example_app/templates/projects/project_list.html", "description": "Projects listing template."}, {"file": "/example_app/templates/resources/resource_list.html", "description": "Resources listing template."}]}