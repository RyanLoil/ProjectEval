{"1": [{"file": "urls.py", "path": "bmi_calculator/bmi_calculator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.calculate_bmi, name='calculate_bmi'),\n]"}, {"file": "views.py", "path": "bmi_calculator/bmi_calculator/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\n\ndef calculate_bmi(request):\n    if request.method == 'POST':\n        height = float(request.POST['height'])\n        weight = float(request.POST['weight'])\n        bmi = (weight / (height ** 2))\n        return render(request, 'bmi_calculator/result.html', {'bmi': bmi})\n    else:\n        return render(request, 'bmi_calculator/index.html')"}, {"file": "index.html", "path": "bmi_calculator/templates/bmi_calculator/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator</title>\n</head>\n<body>\n    <h1>BMI Calculator</h1>\n    <form action=\"\" method=\"post\">\n        <label for=\"height\">Height (in meters):</label>\n        <input type=\"text\" name=\"height\" id=\"height\">\n        <br>\n        <label for=\"weight\">Weight (in kg):</label>\n        <input type=\"text\" name=\"weight\" id=\"weight\">\n        <br>\n        <input type=\"submit\" value=\"Calculate BMI\">\n    </form>\n</body>\n</html>"}, {"file": "result.html", "path": "bmi_calculator/templates/bmi_calculator/result.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Result</title>\n</head>\n<body>\n    <h1>Your BMI is: {{ bmi }}</h1>\n</body>\n</html>"}, {"file": "models.py", "path": "bmi_calculator/bmi_calculator/models.py", "code": "# Models are not required for this simple BMI calculator."}], "2": [{"file": "__init__.py", "path": "currency_converter/__init__.py", "code": ""}, {"file": "settings.py", "path": "currency_converter/settings.py", "code": "EXTRA installed_apps and..."}, {"file": "urls.py", "path": "currency_converter/urls.py", "code": "URLs for currency conversion app"}, {"file": "wsgi.py", "path": "currency_converter/wsgi.py", "code": "WSGI config for currency converter"}, {"file": "views.py", "path": "currency_converter/views.py", "code": "Views for currency converter app"}, {"file": "forms.py", "path": "currency_converter/forms.py", "code": "Forms for currency conversion"}, {"file": "models.py", "path": "currency_converter/models.py", "code": "Models for currency converter"}, {"file": "templates/base.html", "path": "currency_converter/templates/base.html", "code": "Base template for currency converter"}, {"file": "templates/index.html", "path": "currency_converter/templates/index.html", "code": "Main page template for currency converter"}, {"file": "templates/result.html", "path": "currency_converter/templates/result.html", "code": "Result page template for currency converter"}, {"file": "static/css/styles.css", "path": "currency_converter/static/css/styles.css", "code": "CSS styles for currency converter"}, {"file": "static/js/scripts.js", "path": "currency_converter/static/js/scripts.js", "code": "JavaScript logic for currency conversion"}, {"file": "management/commands/populatedb.py", "path": "currency_converter/management/commands/populatedb.py", "code": "Custom management command to populate currency rates"}], "4": [{"file": "urls.py", "path": "qr_code_generator/urls.py", "code": "urlpatterns = [\n    path('', views.generate_qr, name='generate_qr'),\n]"}, {"file": "views.py", "path": "qr_code_generator/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nimport qrcode\n\n\ndef generate_qr(request):\n    if request.method == 'POST' and 'data' in request.POST:\n        data = request.POST['data']\n        img = qrcode.make(data)\n        response = HttpResponse(content_type='image/png')\n        img.save(response, 'PNG')\n        return response\n    return render(request, 'generate_qr.html')"}, {"file": "models.py", "path": "qr_code_generator/models.py", "code": ""}, {"file": "generate_qr.html", "path": "qr_code_generator/templates/generate_qr.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QR Code Generator</title>\n    <style>\n        /* CSS styles here */\n    </style>\n</head>\n<body>\n    <h1>QR Code Generator</h1>\n    <form id=\"qrForm\" class=\"qr-form\" method=\"POST\">\n        {% csrf_token %}\n        <label for=\"data\">Enter data to encode:</label>\n        <input type=\"text\" id=\"data\" name=\"data\" class=\"input-data\">\n        <button type=\"submit\" id=\"generateBtn\" class=\"generate-btn\">Generate QR Code</button>\n    </form>\n    <div id=\"qrCodeContainer\" class=\"qr-code-container\">\n        <!-- QR code image will be inserted here dynamically -->\n    </div>\n    <script>\n        // JavaScript logic here\n    </script>\n</body>\n</html>"}], "5": [{"file": "urls.py", "path": "markdown_html_converter/markdown_html_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "markdown_html_converter/markdown_html_converter/views.py", "code": "from django.shortcuts import render\nimport markdown\n\ndef home(request):\n    if request.method == 'POST':\n        markdown_text = request.POST.get('markdown_text', '')\n        html_text = markdown.markdown(markdown_text)\n        return render(request, 'converter/home.html', {'markdown_text': markdown_text, 'html_text': html_text})\n    return render(request, 'converter/home.html')"}, {"file": "forms.py", "path": "markdown_html_converter/converter/forms.py", "code": "from django import forms\n\n\nclass MarkdownForm(forms.Form):\n    markdown_text = forms.CharField(widget=forms.Textarea(attrs={'class': 'markdown-input'}))"}, {"file": "templates/home.html", "path": "markdown_html_converter/converter/templates/converter/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Markdown to HTML Converter</title>\n</head>\n<body>\n    <h1>Convert your Markdown to HTML</h1>\n    <form action=\"\" method=\"post\">\n        {% csrf_token %}\n        {{ form.as_p }}\n        <input type=\"submit\" value=\"Convert\">\n    </form>\n    {% if markdown_text %}\n        <h2>Markdown Text:</h2>\n        <p id=\"markdown-text\" class=\"markdown-text\">{{ markdown_text }}</p>\n        <h2>HTML Output:</h2>\n        <div id=\"html-output\" class=\"html-output\">{{ html_text|safe }}</div>\n    {% endif %}\n</body>\n</html>"}], "6": [{"file": "urls.py", "path": "todo_project/todo_project/urls.py", "code": "urlpatterns = [\n    path('', views.home, name='home'),\n    path('add_task/', views.add_task, name='add_task'),\n    path('delete_task/<int:task_id>/', views.delete_task, name='delete_task'),\n    path('complete_task/<int:task_id>/', views.complete_task, name='complete_task'),\n    path('charts/', views.charts, name='charts'),\n]\n"}, {"file": "views.py", "path": "todo_project/todo_app/views.py", "code": "from django.shortcuts import render\nfrom django.http import JsonResponse\nfrom .models import Task\n\n# Views for the todo app\n\ndef home(request):\n    tasks = Task.objects.all().order_by('-created_at')\n    context = {'tasks': tasks}\n    return render(request, 'todo_app/home.html', context)\n\n# Other view functions for adding, deleting, completing tasks and generating charts\n"}, {"file": "urls.py", "path": "todo_project/todo_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\napp_name = 'todo_app'\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('add_task/', views.add_task, name='add_task'),\n    path('delete_task/<int:task_id>/', views.delete_task, name='delete_task'),\n    path('complete_task/<int:task_id>/', views.complete_task, name='complete_task'),\n    path('charts/', views.charts, name='charts'),\n]\n"}, {"file": "models.py", "path": "todo_project/todo_app/models.py", "code": "from django.db import models\n\n# Model for storing Todo tasks\n\nclass Task(models.Model):\n    title = models.CharField(max_length=200)\n    created_at = models.DateTimeField(auto_now_add=True)\n    completed = models.BooleanField(default=False)\n\n    def __str__(self):\n        return self.title\n"}, {"file": "home.html", "path": "todo_project/todo_app/templates/todo_app/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Todo App</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Todo App</h1>\n        <ul id=\"task-list\">\n            {% for task in tasks %}\n                <li id=\"task-{{ task.id }}\" class=\"task{% if task.completed %} completed{% endif %}\">{{ task.title }} <a href=\"#\" class=\"delete-task\" id=\"delete-task-{{ task.id }}\">Delete</a></li>\n            {% endfor %}\n        </ul>\n        <form id=\"add-task-form\">\n            <input type=\"text\" id=\"task-title\" name=\"task_title\">\n            <button type=\"submit\">Add Task</button>\n        </form>\n    </div>\n    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n    <script src=\"/static/js/todo_scripts.js\"></script>\n</body>\n</html>\n"}, {"file": "todo_scripts.js", "path": "todo_project/todo_app/static/js/todo_scripts.js", "code": "$(document).ready(function() {\n    $('.delete-task').click(function(e) {\n        e.preventDefault();\n        var taskId = $(this).attr('id').split('-')[2];\n        $.ajax({\n            url: '/delete_task/' + taskId + '/',\n            type: 'GET',\n            success: function(data) {\n                $('#task-' + taskId).remove();\n            }\n        });\n    });\n\n    $('#add-task-form').submit(function(e) {\n        e.preventDefault();\n        var taskTitle = $('#task-title').val();\n        $.ajax({\n            url: '/add_task/',\n            type: 'POST',\n            data: {\n                'title': taskTitle\n            },\n            success: function(data) {\n                $('#task-list').append('<li id=\"task-' + data.id + '\" class=\"task\">' + taskTitle + ' <a href=\"#\" class=\"delete-task\" id=\"delete-task-' + data.id + '\">Delete</a></li>');\n                $('#task-title').val('');\n            }\n        });\n    });\n});\n"}], "7": [{"file": "urls.py", "path": "budget_control_project/budget_control_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}, {"file": "views.py", "path": "budget_control_project/budget_control_app/views.py", "code": "from django.shortcuts import render\n\ndef index(request):\n    return render(request, 'budget_control_app/index.html')"}, {"file": "index.html", "path": "budget_control_project/budget_control_app/templates/budget_control_app/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Budget Control Application</title>\n</head>\n<body>\n    <h1 id='appTitle'>Budget Control Application</h1>\n    <div id='chartContainer' class='chart'></div>\n    <script>\n        // JavaScript code for chart tracing balance changes\n    </script>\n</body>\n</html>"}, {"file": "models.py", "path": "budget_control_project/budget_control_app/models.py", "code": "from django.db import models\n\n# Define models for budget control app here"}, {"file": "admin.py", "path": "budget_control_project/budget_control_app/admin.py", "code": "from django.contrib import admin\nfrom .models import *\n\n# Register your models here"}, {"file": "__init__.py", "path": "budget_control_project/budget_control_app/__init__.py", "code": "# Initialize budget_control_app package"}, {"file": "settings.py", "path": "budget_control_project/budget_control_project/settings.py", "code": "# Django project settings"}, {"file": "manage.py", "path": "budget_control_project/manage.py", "code": "# Django project management file"}], "8": [{"file": "urls.py", "path": "calendar_project/calendar_project/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}, {"file": "views.py", "path": "calendar_project/calendar_app/views.py", "code": "from django.shortcuts import render\n\n\ndef index(request):\n    return render(request, 'calendar_app/index.html')"}, {"file": "index.html", "path": "calendar_project/calendar_app/templates/calendar_app/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Monthly Calendar</title>\n    <link rel=\"stylesheet\" href=\"{% static 'calendar_app/style.css' %}\">\n</head>\n<body>\n    <h1 class=\"calendar-title\">Monthly Calendar</h1>\n    <div class=\"calendar-container\">\n        <!-- Calendar days will be displayed here -->\n    </div>\n</body>\n</html>"}, {"file": "style.css", "path": "calendar_project/calendar_app/static/calendar_app/style.css", "code": ".calendar-title {\n    text-align: center;\n    margin-top: 20px;\n}\n\n.calendar-container {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    gap: 5px;\n}"}], "9": [{"file": "views.py", "path": "myapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import JsonResponse\n\ndef home(request):\n    return render(request, 'index.html')\n\n\ndef chatbot_api(request):\n    # code to handle chatbot logic\n    return JsonResponse({\"response\": \"Hello, I am an AI Chatbot! How can I assist you today?\"})\n"}, {"file": "urls.py", "path": "myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('chatbot-api/', views.chatbot_api, name='chatbot-api'),\n]"}, {"file": "index.html", "path": "myapp/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>AI Chatbot Product</title>\n</head>\n<body>\n    <h1 id=\"title\" class=\"heading\">Welcome to AI Chatbot Product</h1>\n    <div id=\"chatbox\" class=\"chatbox\">\n        <!-- Chatbot conversation goes here -->\n    </div>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"/static/js/chatbot.js\"></script>\n</body>\n</html>"}], "10": [{"file": "models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\n\nclass CalorieEntry(models.Model):\n    date = models.DateField()\n    calories_consumed = models.IntegerField()\n    calories_burned = models.IntegerField()\n"}, {"file": "views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\nfrom .models import CalorieEntry\n\n\ndef home(request):\n    entries = CalorieEntry.objects.all()\n    return render(request, 'home.html', {'entries': entries})\n"}, {"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "home.html", "path": "templates/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Calorie Tracker</title>\n</head>\n<body>\n    <h1>Calorie Tracker</h1>\n    <div id='calorie-chart' class='chart'></div>\n    <table id='calorie-table' class='table'>\n        <thead>\n            <tr>\n                <th>Date</th>\n                <th>Calories Consumed</th>\n                <th>Calories Burned</th>\n            </tr>\n        </thead>\n        <tbody>\n            {% for entry in entries %}\n            <tr>\n                <td>{{ entry.date }}</td>\n                <td>{{ entry.calories_consumed }}</td>\n                <td>{{entry.calories_burned }}</td>\n            </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n</body>\n</html>"}, {"file": "chart.js", "path": "static/js/chart.js", "code": "// Chart.js code for generating the calorie chart\n"}, {"file": "styles.css", "path": "static/css/styles.css", "code": "/* CSS styles for the calorie tracker application */\n"}], "11": [{"file": "models.py", "path": "manual_project/models.py", "code": "from django.db import models\n\nclass Project(models.Model):\n    project_id = models.CharField(max_length=100)\n    project_type = models.CharField(max_length=100)\n    nl_prompt = models.TextField()\n    # Add other necessary fields\n"}, {"file": "urls.py", "path": "manual_project/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('review/', views.review_page, name='review_page')\n    # Add other URL patterns as needed\n]"}, {"file": "views.py", "path": "manual_project/views.py", "code": "from django.shortcuts import render\nfrom django.http import JsonResponse\n\ndef review_page(request):\n    # Fetch the testcode data and render it to a review template\n    testcode_data = {}\n    return render(request, 'review.html', {'testcode_data': testcode_data})\n    # Add other necessary views\n"}, {"file": "templates/review.html", "path": "manual_project/templates/review.html", "code": "<html>\n<head>\n    <title>Test Code Review Page</title>\n</head>\n<body>\n    <h1>Test Code Review Page</h1>\n    <ul>\n    {% for test_data in testcode_data %}\n        <li>\n            <h3>{{ test_data.page }}</h3>\n            <ul>\n            {% for function_data in test_data.function %}\n                <li>\n                    <h4>{{ function_data.function }}</h4>\n                    <p>{{ function_data.test }}</p>\n                    <select name=\"status\">\n                        <option value=\"Pass\">Pass</option>\n                        <option value=\"Fail\">Fail</option>\n                        <option value=\"Select\">Select</option>\n                    </select>\n                </li>\n            {% endfor %}\n            </ul>\n        </li>\n    {% endfor %}\n    </ul>\n</body>\n</html>"}], "12": [{"file": "models.py", "path": "accounting/models.py", "code": "from django.db import models\n\n# Define the Expense model\nclass Expense(models.Model):\n    CATEGORY_CHOICES = [\n        ('Travel', 'Travel expenses'),\n        ('Labor', 'Labor expenses'),\n        ('Management', 'Management expenses'),\n        ('Equipment', 'Equipment expenses'),\n    ]\n    claimant = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    category = models.CharField(max_length=20, choices=CATEGORY_CHOICES)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    status = models.CharField(max_length=10, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')])\n"}, {"file": "forms.py", "path": "accounting/forms.py", "code": "from django import forms\nfrom .models import Expense\n\nclass ExpenseForm(forms.ModelForm):\n    class Meta:\n        model = Expense\n        fields = ['category', 'amount']\n"}, {"file": "views.py", "path": "accounting/views.py", "code": "from django.shortcuts import render, redirect\nfrom django.contrib.auth.decorators import login_required\nfrom .models import Expense\nfrom .forms import ExpenseForm\n\n@login_required\n    def expense_claim(request):\n    if request.method == 'POST':\n        form = ExpenseForm(request.POST)\n        if form.is_valid():\n            expense = form.save(commit=False)\n            expense.claimant = request.user\n            expense.status = 'Pending'\n            expense.save()\n            return redirect('claim_list')\n    else:\n        form = ExpenseForm()\n    return render(request, 'accounting/expense_claim.html', {'form': form})\n"}, {"file": "urls.py", "path": "accounting/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('claim/', views.expense_claim, name='expense_claim'),\n    # Add more URLs for other functionalities\n]\n"}, {"file": "expense_claim.html", "path": "templates/accounting/expense_claim.html", "code": "<html>\n<head>\n    <title>Expense Claim Form</title>\n</head>\n<body>\n    <h1>Expense Claim Form</h1>\n    <form method=\"POST\">\n        {% csrf_token %}\n        {{ form.as_p }}\n        <button type=\"submit\">Submit Claim</button>\n    </form>\n</body>\n</html>\n"}, {"file": "admin.py", "path": "accounting/admin.py", "code": "from django.contrib import admin\nfrom .models import Expense\n\n@admin.register(Expense)\nclass ExpenseAdmin(admin.ModelAdmin):\n    list_display = ('claimant', 'category', 'amount', 'status')\n    list_filter = ('category', 'status')\n"}, {"file": "budget_control.html", "path": "templates/accounting/budget_control.html", "code": "<html>\n<head>\n    <title>Budget Control</title>\n</head>\n<body>\n    <h1>Budget Control</h1>\n    <!-- Add budget control application here -->\n</body>\n</html>\n"}, {"file": "dashboard.html", "path": "templates/accounting/dashboard.html", "code": "<html>\n<head>\n    <title>Admin Dashboard</title>\n</head>\n<body>\n    <h1>Admin Dashboard</h1>\n    <!-- Add admin dashboard content here -->\n</body>\n</html>\n"}], "13": [{"file": "models.py", "path": "crm/models.py", "code": "Placeholder for models.py code"}, {"file": "views.py", "path": "crm/views.py", "code": "Placeholder for views.py code"}, {"file": "urls.py", "path": "crm/urls.py", "code": "Placeholder for urls.py code"}, {"file": "admin.py", "path": "crm/admin.py", "code": "Placeholder for admin.py code"}, {"file": "templates/index.html", "path": "crm/templates/index.html", "code": "Placeholder for index.html code"}, {"file": "templates/customer_list.html", "path": "crm/templates/customer_list.html", "code": "Placeholder for customer_list.html code"}, {"file": "templates/product_list.html", "path": "crm/templates/product_list.html", "code": "Placeholder for product_list.html code"}, {"file": "templates/purchase_record_list.html", "path": "crm/templates/purchase_record_list.html", "code": "Placeholder for purchase_record_list.html code"}, {"file": "templates/marketing_analysis.html", "path": "crm/templates/marketing_analysis.html", "code": "Placeholder for marketing_analysis.html code"}], "14": [{"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.helloworld, name='helloworld'),\n]\n"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef helloworld(request):\n    return HttpResponse('Hello, World!')\n"}, {"file": "index.html", "path": "myproject/myapp/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head><title>Hello, World!</title></head>\n<body>\n    <h1 id=\"title\" class=\"main-title\">Hello, World!</h1>\n</body>\n</html>\n"}, {"file": "base.html", "path": "myproject/myapp/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n    <link rel=\"stylesheet\" href=\"{% static 'css/style.css' %}\">\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>\n"}, {"file": "style.css", "path": "myproject/myapp/static/css/style.css", "code": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n}\n.main-title {\n    color: #333;\n    text-align: center;\n    margin-top: 50px;\n}"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}], "15": [{"file": "urls.py", "path": "project_name/project_name/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('helloworld/', views.hello_world, name='hello_world')\n]"}, {"file": "views.py", "path": "project_name/main/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\n\n\ndef home(request):\n    return HttpResponseRedirect(reverse('hello_world'))\n\n\ndef hello_world(request):\n    return render(request, 'main/helloworld.html')"}, {"file": "helloworld.html", "path": "project_name/main/templates/main/helloworld.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World</title>\n</head>\n<body>\n    <button id=\"jumpButton\" class=\"btn\">Jump to Hello World</button>\n</body>\n</html>"}], "16": [{"file": "SpringSemesterSubjects.xlsx", "path": "input_files/SpringSemesterSubjects.xlsx", "code": "Binary data of the 'SpringSemesterSubjects.xlsx' file"}, {"file": "output.xlsx", "path": "output_files/output.xlsx", "code": "Binary data of the generated 'output.xlsx' file"}, {"file": "subjectParser.py", "path": "scripts/subjectParser.py", "code": "import pandas as pd\n\n# Read input file\ninput_file = 'input_files/SpringSemesterSubjects.xlsx'\ndf = pd.read_excel(input_file)\n\n# Process the data (convert to table)\ndf['Time'] = df['Time'].apply(lambda x: ['First period', 'Second period', 'Third period', 'Fourth period'].index(x))\n\n# Write data to output file\noutput_file = 'output_files/output.xlsx'\ndf.to_excel(output_file, index=False)"}], "17": [{"file": "batch_program.py", "path": "project/scripts/batch_program.py", "code": "Place the batch program code here to read 'Gamedata.xlsx' and create a logistic model with one-period-lag dependent variable 'result' and independent variables."}, {"file": "Logistic.xlsx", "path": "project/output/Logistic.xlsx", "code": ""}], "18": [{"file": "bashcrawl.py", "path": "game/bashcrawl.py", "code": "import os\nimport random\n\ndef print_board(player_pos, exit_pos, width, height):\n    for y in range(height):\n        for x in range(width):\n            if x == player_pos[0] and y == player_pos[1]:\n                print('P', end=' ')\n            elif x == exit_pos[0] and y == exit_pos[1]:\n                print('E', end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\ndef move_player(player_pos, direction, width, height):\n    x, y = player_pos\n    if direction == 'L' and x > 0:\n        x -= 1\n    elif direction == 'R' and x < width - 1:\n        x += 1\n    elif direction == 'U' and y > 0:\n        y -= 1\n    elif direction == 'D' and y < height - 1:\n        y += 1\n    return x, y\n\ndef main():\n    width = 10\n    height = 5\n    player_pos = (0, 0)\n    exit_pos = (width - 1, height - 1)\n    while player_pos != exit_pos:\n        os.system('clear')\n        print_board(player_pos, exit_pos, width, height)\n        direction = input('Enter your move: [L]eft, [R]ight, [U]p, [D]own ')\n        player_pos = move_player(player_pos, direction.upper(), width, height)\n    print('Congratulations! You reached the exit!')\n\nif __name__ == '__main__':\n    main()"}], "19": [{"file": "deathlist_reader.bat", "path": "scripts/deathlist_reader.bat", "code": "@echo off\n\nsetlocal enabledelayedexpansion\n\ncd \"%~dp0\"\n\nset input_file=Deathlist.csv\nset output_file=WeeklyDeathsHistogram.txt\n\n:: Count weekly deaths and output to text file\nfor /f \"delims=, tokens=2\" %%a in ('type \"%input_file%\" ^| findstr /r \"^[0-9][0-9]*/[0-9][0-9]*/[0-9][0-9][0-9][0-9]\"') do (\n    set date=%%a\n    set week=!date:~6!_Week\n    set /a week_deaths[!week!]+=1\n)\n\n(for /f \"tokens=2,* delims==\" %%I in ('set week_deaths[') do echo %%I = %%J) > \"%output_file%\"\n\necho Weekly Deaths Histogram:\necho. & type \"%output_file%\"\n\npause"}], "20": [{"file": "models.py", "path": "blog/models.py", "code": "from django.db import models\n\n\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n    date_posted = models.DateTimeField(auto_now_add=True)\n\ndef __str__(self):\n    return self.title"}, {"file": "views.py", "path": "blog/views.py", "code": "from django.shortcuts import render\nfrom .models import Post\n\n\ndef home(request):\n    context = {\n        'posts': Post.objects.all()\n    }\n    return render(request, 'blog/home.html', context)"}, {"file": "urls.py", "path": "blog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='blog-home'),\n]"}, {"file": "home.html", "path": "blog/templates/blog/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Blog Home</title>\n</head>\n<body>\n    {% for post in posts %}\n        <div id=\"post_{{ post.id }}\" class=\"post\">\n            <h2 id=\"post_title_{{ post.id }}\" class=\"title\">{{ post.title }}</h2>\n            <p id=\"post_content_{{ post.id }}\" class=\"content\">{{ post.content }}</p>\n            <p id=\"post_date_{{ post.id }}\" class=\"date\">Posted on: {{ post.date_posted }}</p>\n        </div>\n    {% endfor %}\n</body>\n</html>"}]}