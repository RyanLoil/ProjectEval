{"2": [{"file": "settings.py", "path": "currency_converter/currency_converter/settings.py", "code": "SECRET_KEY = 'your_secret_key'\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'converter',\n]"}, {"file": "urls.py", "path": "currency_converter/converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert, name='convert'),\n]"}, {"file": "models.py", "path": "currency_converter/converter/models.py", "code": "from django.db import models\n\n# Your models can go here"}, {"file": "views.py", "path": "currency_converter/converter/views.py", "code": "from django.shortcuts import render\n\n# Your views implementation goes here"}, {"file": "forms.py", "path": "currency_converter/converter/forms.py", "code": "from django import forms\n\n# Your forms implementation goes here"}, {"file": "home.html", "path": "currency_converter/converter/templates/converter/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Currency Converter</title>\n</head>\n<body>\n    <h1 id=\"title\" class=\"main-title\">Currency Converter</h1>\n    <!-- Your HTML content for the home page goes here -->\n</body>\n</html>"}, {"file": "convert.html", "path": "currency_converter/converter/templates/converter/convert.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Convert Currency</title>\n</head>\n<body>\n    <h1 id=\"convert-title\" class=\"main-title\">Convert Currency</h1>\n    <!-- Your HTML content for the conversion page goes here -->\n</body>\n</html>"}, {"file": "simulation.py", "path": "currency_converter/converter/simulation.py", "code": "# Your simulation code for currency rates goes here"}], "3": [{"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "password_generator/password_generator/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nimport random\nimport string\n\ndef home(request):\n    return render(request, 'password_generator/home.html')\n\ndef generate_password(length=12):\n    characters = string.ascii_letters + string.digits + string.punctuation\n    password = ''.join(random.choice(characters) for i in range(length))\n    return password"}, {"file": "home.html", "path": "password_generator/password_generator/templates/password_generator/home.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Password Generator</title>\n</head>\n<body>\n    <h1>Password Generator</h1>\n    <p id=\"password\"></p>\n    <button id=\"generate-btn\" class=\"btn\">Generate Password</button>\n\n    <script>\n        document.getElementById('generate-btn').addEventListener('click', function() {\n            fetch('/generate/')\n                .then(response => response.text())\n                .then(password => {\n                    document.getElementById('password').textContent = password;\n                });\n        });\n    </script>\n</body>\n</html>"}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.urls import path\nfrom password_generator.views import generate_password\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('generate/', generate_password, name='generate_password'),\n]"}], "4": [{"file": "urls.py", "path": "qrgenerator/urls.py", "code": "urlpatterns = []"}, {"file": "views.py", "path": "qrgenerator/views.py", "code": "from django.http import HttpResponse\n\ndef generate_qr_code(request):\n    return HttpResponse('QR Code generation functionality will be implemented here.')"}, {"file": "models.py", "path": "qrgenerator/models.py", "code": "from django.db import models\n\nclass QRCode(models.Model):\n    code = models.CharField(max_length=100)"}, {"file": "forms.py", "path": "qrgenerator/forms.py", "code": "from django import forms\n\nclass QRCodeForm(forms.Form):\n    code = forms.CharField(min_length=1, max_length=100)"}, {"file": "templates/index.html", "path": "qrgenerator/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <h1 id='qr-heading' class='header'>QR Code Generator</h1>\n    <form id='qr-form' class='form' method='post'>\n        <label for='qr-code-input'>Enter Text:</label>\n        <input id='qr-code-input' class='input' type='text' name='qr_code'>\n        <button id='generate-button' class='button' type='submit'>Generate QR Code</button>\n    </form>\n    <div id='qr-image-container' class='image-container'></div>\n</body>\n</html>"}], "5": [{"file": "settings.py", "path": "converter/converter/settings.py", "code": "Django settings configurations"}, {"file": "urls.py", "path": "converter/converter/urls.py", "code": "URL patterns for the project"}, {"file": "views.py", "path": "converter/app/views.py", "code": "Views for handling web requests"}, {"file": "models.py", "path": "converter/app/models.py", "code": "Database models for the project"}, {"file": "forms.py", "path": "converter/app/forms.py", "code": "Forms for user input handling"}, {"file": "templates/main.html", "path": "converter/app/templates/main.html", "code": "Main HTML template for the website"}, {"file": "static/css/styles.css", "path": "converter/app/static/css/styles.css", "code": "CSS styles for the website"}, {"file": "static/js/scripts.js", "path": "converter/app/static/js/scripts.js", "code": "Javascript scripts for interactivity"}], "6": [{"file": "models.py", "path": "todoapp/models.py", "code": "from django.db import models\n\nclass Task(models.Model):\n    title = models.CharField(max_length=200)\n    completed = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return self.title\n"}, {"file": "views.py", "path": "todoapp/views.py", "code": "from django.shortcuts import render\nfrom .models import Task\n\n# Your view functions here\n"}, {"file": "urls.py", "path": "todoapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\n# Define your URL patterns here\n"}, {"file": "index.html", "path": "todoapp/templates/index.html", "code": "<html>\n<head>\n    <title>Todo App</title>\n</head>\n<body>\n    <div id='task-list' class='task-list'>\n        <!-- Your task list here -->\n    </div>\n</body>\n</html>\n"}, {"file": "chart.html", "path": "todoapp/templates/chart.html", "code": "<html>\n<head>\n    <title>Chart Analysis</title>\n</head>\n<body>\n    <div id='chart' class='chart'>\n        <!-- Your chart here -->\n    </div>\n</body>\n</html>\n"}, {"file": "styles.css", "path": "todoapp/static/todoapp/styles.css", "code": "#task-list {\n    /* Your CSS styles here */\n}\n\n.chart {\n    /* Your chart CSS styles here */\n}\n"}], "7": [{"file": "urls.py", "path": "budget_control_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "budget_control_app/views.py", "code": "from django.shortcuts import render\n\n# Home view\n\ndef home(request):\n    return render(request, 'index.html')"}, {"file": "index.html", "path": "budget_control_app/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Budget Control App</title>\n    <!-- Add your CSS and JavaScript files here -->\n</head>\n<body>\n    <h1 id=\"title\" class=\"main-title\">Budget Control App</h1>\n    <div id=\"chart-container\" class=\"chart-container\">\n        <canvas id=\"balance-chart\" class=\"balance-chart\"></canvas>\n    </div>\n    <!-- Add your chart script here -->\n</body>\n</html>"}, {"file": "urls.py", "path": "myproject/urls.py", "code": "from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('', include('budget_control_app.urls')),\n    path('admin/', admin.site.urls),\n]"}], "8": [{"file": "settings.py", "path": "mycalendar/mycalendar/settings.py", "code": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}"}, {"file": "models.py", "path": "mycalendar/calendar/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=100)\n    date = models.DateField()\n    description = models.TextField()\n"}, {"file": "urls.py", "path": "mycalendar/mycalendar/urls.py", "code": "from django.urls import path\nfrom .views import home\n\nurlpatterns = [\n    path('', home, name='home'),\n]"}, {"file": "views.py", "path": "mycalendar/calendar/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'calendar/home.html')"}, {"file": "home.html", "path": "mycalendar/calendar/templates/calendar/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Monthly Calendar App</title>\n</head>\n<body>\n    <h1>My Calendar</h1>\n    <div id=\"calendar-app\"></div>\n</body>\n</html>\n"}], "9": [{"file": "urls.py", "path": "chatbot_project/chatbot_app/urls.py", "code": "from django.urls import path\\nfrom . import views\\n\\nurlpatterns = [\\n    path('', views.index, name='index'),\\n    path('chatbot/', views.chatbot, name='chatbot'),\\n]"}, {"file": "views.py", "path": "chatbot_project/chatbot_app/views.py", "code": "from django.shortcuts import render\\nfrom django.http import HttpResponse\\n\\n\\n\\n# views\\ndef index(request):\\n    return render(request, 'chatbot_app/index.html')\\n\\ndef chatbot(request):\\n    return render(request, 'chatbot_app/chatbot.html')"}, {"file": "models.py", "path": "chatbot_project/chatbot_app/models.py", "code": "# models.py content\\n"}, {"file": "index.html", "path": "chatbot_project/chatbot_app/templates/chatbot_app/index.html", "code": "<!DOCTYPE html>\\n<html lang='en'>\\n<head>\\n    <meta charset='UTF-8'>\\n    <title>AI Chatbot</title>\\n</head>\\n<body>\\n\\n<h1 id='chatbot_title' class='chatbot_title'>Welcome to our AI Chatbot</h1>\\n<div id='chatbot_description' class='chatbot_description'>\\n    <p>Our AI Chatbot is an intelligent assistant that can help you with various tasks.</p>\\n</div>\\n\\n</body>\\n</html>"}, {"file": "chatbot.html", "path": "chatbot_project/chatbot_app/templates/chatbot_app/chatbot.html", "code": "<!DOCTYPE html>\\n<html lang='en'>\\n<head>\\n    <meta charset='UTF-8'>\\n    <title>AI Chatbot</title>\\n</head>\\n<body>\\n\\n<h1 id='chatbot_title' class='chatbot_title'>AI Chatbot</h1>"}, {"file": "settings.py", "path": "chatbot_project/chatbot_project/settings.py", "code": "# settings.py content\\n"}, {"file": "manage.py", "path": "chatbot_project/manage.py", "code": "# manage.py content\\n"}], "10": [{"file": "models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\n\nclass CalorieEntry(models.Model):\n    date = models.DateField()\n    meal = models.CharField(max_length=100)\n    calories = models.IntegerField()\n\n    def __str__(self):\n        return f'{self.date} - {self.meal} - {self.calories} calories'"}, {"file": "views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\nfrom .models import CalorieEntry\n\n\ndef home(request):\n    entries = CalorieEntry.objects.all()\n    return render(request, 'home.html', {'entries': entries})"}, {"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "home.html", "path": "templates/home.html", "code": "<!DOCTYPE html>\n<html lang='en'>\n<head>\n    <title>Calorie Tracker</title>\n</head>\n<body>\n    <h1>Calorie Tracker Application</h1>\n    <table id='calorie-table'>\n        <tr>\n            <th>Date</th>\n            <th>Meal</th>\n            <th>Calories</th>\n        </tr>\n        {% for entry in entries %}\n        <tr>\n            <td>{{ entry.date }}</td>\n            <td>{{ entry.meal }}</td>\n            <td>{{ entry.calories }}</td>\n        </tr>\n        {% endfor %}\n    </table>\n    <div id='chart-container' class='chart'></div>\n    <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>\n    <script src='{% static 'js/chart.js' %}'></script>\n</body>\n</html>"}, {"file": "chart.js", "path": "static/js/chart.js", "code": "var ctx = document.getElementById('chart-container').getContext('2d');\nvar myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n        labels: ['Breakfast', 'Lunch', 'Dinner'],\n        datasets: [{\n            label: 'Calories Consumed',\n            data: [500, 800, 600],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n    }\n});"}], "11": [{"file": "models.py", "path": "manual_project_review/manual_project_review/models.py", "code": "from django.db import models\n\n# Define your models here"}, {"file": "views.py", "path": "manual_project_review/manual_project_review/views.py", "code": "from django.shortcuts import render\nfrom manual_project_review.models import Project, TestCode\n\n# Define your views here"}, {"file": "urls.py", "path": "manual_project_review/manual_project_review/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('project/<int:project_id>/', views.project_details, name='project_details'),\n    path('test/<int:test_id>/', views.test_details, name='test_details'),\n]"}, {"file": "project_review.html", "path": "manual_project_review/manual_project_review/templates/project_review.html", "code": "<html>\n<head>\n    <title>Project Review</title>\n    <link rel='stylesheet' type='text/css' href='{% static 'style.css' %}'>\n</head>\n<body>\n    <!-- Project review content here -->\n</body>\n</html>"}, {"file": "test_review.html", "path": "manual_project_review/manual_project_review/templates/test_review.html", "code": "<html>\n<head>\n    <title>Test Review</title>\n</head>\n<body>\n    <!-- Test review content here -->\n</body>\n</html>"}, {"file": "test_status.html", "path": "manual_project_review/manual_project_review/templates/test_status.html", "code": "<html>\n<head>\n    <title>Test Status</title>\n</head>\n<body>\n    <!-- Test status content here -->\n</body>\n</html>"}, {"file": "style.css", "path": "manual_project_review/manual_project_review/static/style.css", "code": "/* CSS styles for the project */"}, {"file": "script.js", "path": "manual_project_review/manual_project_review/static/script.js", "code": "// JavaScript code for the project"}, {"file": "forms.py", "path": "manual_project_review/manual_project_review/forms.py", "code": "from django import forms\n\n# Define your forms here"}, {"file": "urls.py", "path": "manual_project_review/manual_project_review/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('project/<int:project_id>/', views.project_details, name='project_details'),\n    path('test/<int:test_id>/', views.test_details, name='test_details'),\n]"}, {"file": "manage.py", "path": "manual_project_review/manage.py", "code": "# Django's command-line utility for administrative tasks"}], "12": [{"file": "models.py", "path": "yourproject/yourapp/models.py", "code": "from django.db import models\n\nclass ExpenseClaim(models.Model):\n    employee = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    expense_type = models.CharField(max_length=100)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    status = models.CharField(max_length=20, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Pending', 'Pending')])\n\n\nclass Budget(models.Model):\n    expense_type = models.CharField(max_length=100)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n"}, {"file": "urls.py", "path": "yourproject/yourapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('submit_claim/', views.submit_claim, name='submit_claim'),\n    path('admin/', admin.site.urls),\n]"}, {"file": "views.py", "path": "yourproject/yourapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom .models import ExpenseClaim\n\n\ndef submit_claim(request):\n    # Handle form submission for expense claim\n    if request.method == 'POST':\n        # Process and save the claim\n    return render(request, 'submit_claim.html')\n"}, {"file": "submit_claim.html", "path": "yourproject/yourapp/templates/submit_claim.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Submit Expense Claim</title>\n</head>\n<body>\n    <h1>Submit Expense Claim</h1>\n    <form method=\"post\">\n        <!-- Expense claim form elements here -->\n    </form>\n</body>\n</html>"}, {"file": "admin.py", "path": "yourproject/yourapp/admin.py", "code": "from django.contrib import admin\nfrom .models import ExpenseClaim, Budget\n\nadmin.site.register(ExpenseClaim)\nadmin.site.register(Budget)"}], "13": [{"file": "models.py", "path": "your_project/your_app/models.py", "code": "from django.db import models\n\nclass Product(models.Model):\n    name = models.CharField(max_length=100)\n    category = models.CharField(max_length=50)\n    recommended_price = models.DecimalField(max_digits=8, decimal_places=2)\n\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=100)\n    birthday = models.DateField()\n    age = models.IntegerField()\n    sex = models.CharField(max_length=1)\n    company = models.CharField(max_length=100)\n    phone_number = models.CharField(max_length=15)\n    preferred_products = models.ManyToManyField(Product, related_name='preferred_by')\n\n\nclass PurchaseRecord(models.Model):\n    datetime = models.DateTimeField()\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n"}, {"file": "views.py", "path": "your_project/your_app/views.py", "code": "from django.shortcuts import render\nfrom .models import Product, Customer, PurchaseRecord\n\n# Your views implementation here"}, {"file": "urls.py", "path": "your_project/your_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    # Define your URL patterns here\n]"}, {"file": "admin.py", "path": "your_project/your_app/admin.py", "code": "from django.contrib import admin\nfrom .models import Product, Customer, PurchaseRecord\n\n# Register your models with the admin site\nadmin.site.register(Product)\nadmin.site.register(Customer)\nadmin.site.register(PurchaseRecord)"}, {"file": "analysis.html", "path": "your_project/your_app/templates/analysis.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Sales Analysis</title>\n</head>\n<body>\n    <!-- Your Sales Analysis HTML content here -->\n</body>\n</html>"}, {"file": "base.html", "path": "your_project/your_app/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{% block title %}Your Title{% endblock %}</title>\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n</html>"}], "14": [{"file": "urls.py", "path": "helloapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "helloapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\n# Create your views here.\n\ndef helloworld(request):\n    return HttpResponse(\"<html><head><title>Hello World</title></head><body><h1 id='hello' class='main-heading'>Hello, World!</h1></body></html>\")\n"}, {"file": "templates/helloapp/helloworld.html", "path": "helloapp/templates/helloapp/helloworld.html", "code": "<html>\n<head>\n    <title>Hello World</title>\n</head>\n<body>\n    <h1 id='hello' class='main-heading'>Hello, World!</h1>\n</body>\n</html>"}], "15": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('helloworld', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef index(request):\n    return render(request, 'index.html')\n\ndef helloworld(request):\n    return render(request, 'helloworld.html')"}, {"file": "index.html", "path": "myproject/myapp/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Homepage</title>\n</head>\n<body>\n    <button id=\"goto-helloworld\" class=\"btn btn-primary\">Go to Hello World</button>\n</body>\n</html>"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/helloworld.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Hello World Page</title>\n</head>\n<body>\n    <h1>Hello, World!</h1>\n</body>\n</html>"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "(empty)"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "(settings configuration code)"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "(url patterns configuration code)"}, {"file": "wsgi.py", "path": "myproject/myproject/wsgi.py", "code": "(WSGI configuration code)"}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": "(admin configuration code if needed)"}, {"file": "tests.py", "path": "myproject/myapp/tests.py", "code": "(unit tests code if needed)"}], "16": [{"file": "SpringSemesterSubjects.xlsx", "path": "example/somepath/SpringSemesterSubjects.xlsx", "code": "Batch program code to read and process the subject list"}, {"file": "outputSubjects.xlsx", "path": "example/somepath/outputSubjects.xlsx", "code": "Batch program code to output the subject table to a new excel file"}], "17": [{"file": "batch_script.bat", "path": "scripts/data_analysis/batch_script.bat", "code": "@echo off\n\nrem Read dataset\npython read_data.py\n\nrem Create logistic model\npython logistic_model.py\n\nrem Output summary\npython output_summary.py"}, {"file": "read_data.py", "path": "scripts/data_analysis/read_data.py", "code": "# Python script to read the dataset Gamedata.xlsx\nimport pandas as pd\n\ndata = pd.read_excel('Gamedata.xlsx')\n# Processing to create lagged result column\n# Save processed data to a new file\n# e.g., data.to_csv('processed_data.csv', index=False)"}, {"file": "logistic_model.py", "path": "scripts/data_analysis/logistic_model.py", "code": "# Python script to create a logistic model\nfrom sklearn.linear_model import LogisticRegression\n# Build logistic regression model using processed data\n# e.g., model = LogisticRegression()\n#       model.fit(X, y)"}, {"file": "output_summary.py", "path": "scripts/data_analysis/output_summary.py", "code": "# Python script to output logistic model summary\nimport statsmodels.api as sm\n# Generate model summary\n# e.g., summary = sm.add_constant(X)\n#       summary_model = sm.Logit(y, summary)\n#       result = summary_model.fit()\n# Write summary to Excel file\n# e.g., result.summary().to_excel('Logistic.xlsx')"}], "18": [{"file": "main.py", "path": "bashcrawl/ main.py", "code": "import random\n\n# Function to generate a random number\n\n def roll_dice(sides):\n return random.randint(1, sides)\n\n# Function to print the welcome screen \ndef print_welcome_screen():\n print('Welcome to BashCrawl!')\n print('Press Enter to start the adventure...')\n\n# Function to handle user input\ndef handle_input():\n prompt = input('>')\n\n# Main game loop\nprint_welcome_screen()\nhandle_input()\n"}, {"file": "player.py", "path": "bashcrawl/player.py", "code": "class Player:\n def __init__(self, name):\n self.name = name\n self.health = 100\n self.inventory = []\n\n def take_damage(self, damage):\n self.health -= damage\n\n def heal(self, amount):\n self.health += amount\n \n def add_item(self, item):\n self.inventory.append(item)"}, {"file": "map.py", "path": "bashcrawl/map.py", "code": "class Map:\n def __init__(self):\n self.rooms = {}\n\n def add_room(self, room_id, description, exits):\n self.rooms[room_id] = {\n 'description': description,\n 'exits': exits\n }\n\n def get_room_description(self, room_id):\n return self.rooms.get(room_id, {}).get('description')\n\n def get_room_exits(self, room_id):\n return self.rooms.get(room_id, {}).get('exits')"}], "19": [{"file": "read_data.bat", "path": "scripts/read_data.bat", "code": "REM This batch program reads data from the Deathlist.csv\n@echo off\ncd /d %~dp0\necho Data of Death Weekly Histogram\nfor /f \"skip=1 tokens=3 delims=,\" %%A in (Deathlist.csv) do (set /A COUNT=!COUNT!+1\necho !COUNT! %%~A)\n"}, {"file": "Deathlist.csv", "path": "data/Deathlist.csv", "code": ""}]}