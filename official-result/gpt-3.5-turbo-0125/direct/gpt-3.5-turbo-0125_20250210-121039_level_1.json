{"1": [{"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.urls import path\nfrom myapp import views\n\nurlpatterns = [\n    path('', views.calculate_bmi, name='calculate_bmi'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef calculate_bmi(request):\n    # Add the BMI calculation logic here\n    return render(request, 'bmi.html')"}, {"file": "bmi.html", "path": "myproject/myapp/templates/bmi.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>BMI Calculator</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'styles.css' %}\">\n</head>\n<body>\n    <h1>BMI Calculator</h1>\n    <form method=\"POST\">\n        <label for=\"weight\">Weight (kg):</label>\n        <input type=\"text\" id=\"weight\" name=\"weight\">\n        <label for=\"height\">Height (cm):</label>\n        <input type=\"text\" id=\"height\" name=\"height\">\n        <button type=\"submit\" id=\"calculateBtn\">Calculate BMI</button>\n    </form>\n    <p id=\"result\"></p>\n    <script src=\"{% static 'script.js' %}\"></script>\n</body>\n</html>"}, {"file": "styles.css", "path": "myproject/myapp/static/styles.css", "code": "/* Add your CSS styling for the BMI calculator here */"}, {"file": "script.js", "path": "myproject/myapp/static/script.js", "code": "// Add your JavaScript code for BMI calculation here"}], "2": [{"file": "urls.py", "path": "currency_converter/currency_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "currency_converter/currency_converter/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'home.html')"}, {"file": "home.html", "path": "currency_converter/templates/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Currency Converter</title>\n</head>\n<body>\n    <h1 id=\"title\" class=\"main-title\">Currency Converter</h1>\n    <form id=\"currency-form\" class=\"currency-form\">\n        <label for=\"amount\">Amount:</label>\n        <input type=\"text\" id=\"amount\" class=\"amount-input\">\n        <label for=\"from-currency\">From Currency:</label>\n        <select id=\"from-currency\" class=\"from-currency-dropdown\">\n            <option value=\"USD\">USD</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"JPY\">JPY</option>\n        </select>\n        <label for=\"to-currency\">To Currency:</label>\n        <select id=\"to-currency\" class=\"to-currency-dropdown\">\n            <option value=\"USD\">USD</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"JPY\">JPY</option>\n        </select>\n        <button type=\"button\" id=\"convert-btn\" class=\"convert-button\">Convert</button>\n    </form>\n    <p id=\"result\" class=\"conversion-result\"></p>\n    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n    <script src=\"/static/js/currency_converter.js\"></script>\n</body>\n</html>"}, {"file": "views.py", "path": "currency_converter/currency_converter/views.py", "code": "from django.shortcuts import render\nfrom django.http import JsonResponse\n\ndef convert_currency(request):\n    if request.method == 'POST':\n        amount = float(request.POST.get('amount', 0))\n        from_currency = request.POST.get('from_currency', '')\n        to_currency = request.POST.get('to_currency', '')\n        conversion_rate = get_conversion_rate(from_currency, to_currency)\n        converted_amount = amount * conversion_rate\n        response_data = {'converted_amount': converted_amount}\n        return JsonResponse(response_data)\n    return JsonResponse({'error': 'Invalid request'})"}, {"file": "urls.py", "path": "currency_converter/currency_converter/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('convert/', views.convert_currency, name='convert_currency'),\n]"}, {"file": "currency_converter.js", "path": "currency_converter/static/js/currency_converter.js", "code": "// Handle currency conversion\n$(document).ready(function() {\n    $('#convert-btn').on('click', function() {\n        var amount = $('#amount').val();\n        var fromCurrency = $('#from-currency').val();\n        var toCurrency = $('#to-currency').val();\n        $.ajax({\n            url: '/convert/',\n            method: 'POST',\n            data: {\n                'amount': amount,\n                'from_currency': fromCurrency,\n                'to_currency': toCurrency\n            },\n            success: function(data) {\n                $('#result').text('Converted Amount: ' + data.converted_amount);\n            },\n            error: function() {\n                $('#result').text('Error converting currency.');\n            }\n        });\n    });\n});"}], "3": [{"file": "settings.py", "path": "password_generator/password_generator/settings.py", "code": "..."}, {"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "..."}, {"file": "views.py", "path": "password_generator/main/views.py", "code": "..."}, {"file": "forms.py", "path": "password_generator/main/forms.py", "code": "..."}, {"file": "models.py", "path": "password_generator/main/models.py", "code": "..."}, {"file": "index.html", "path": "password_generator/main/templates/main/index.html", "code": "..."}, {"file": "result.html", "path": "password_generator/main/templates/main/result.html", "code": "..."}, {"file": "password_generator.js", "path": "password_generator/main/static/main/password_generator.js", "code": "..."}, {"file": "style.css", "path": "password_generator/main/static/main/style.css", "code": "..."}], "4": [{"file": "urls.py", "path": "yourproject/urls.py", "code": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('generate/', views.generate_qr_code, name='generate_qr_code'),\n]"}, {"file": "views.py", "path": "yourproject/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\nimport qrcode\nimport io\nfrom PIL import Image\n\n\ndef index(request):\n    return render(request, 'index.html')\n\n\ndef generate_qr_code(request):\n    data = request.GET.get('data', 'Hello, World!')\n    img = qrcode.make(data)\n    buffer = io.BytesIO()\n    img.save(buffer)\n    return HttpResponse(buffer.getvalue(), content_type='image/png')"}, {"file": "index.html", "path": "yourapp/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>QR Code Generator</title>\n</head>\n<body>\n    <h1>QR Code Generator</h1>\n    <input id=\"qr-input\" type=\"text\" placeholder=\"Enter data\"/>\n    <button id=\"generate-btn\" class=\"btn\">Generate QR Code</button>\n    <div id=\"qr-code\"></div>\n    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n    <script src=\"/static/js/app.js\"></script>\n</body>\n</html>"}, {"file": "app.js", "path": "yourapp/static/js/app.js", "code": "$(document).ready(function(){\n    $('#generate-btn').click(function(){\n        var data = $('#qr-input').val();\n        var url = '/generate/?data=' + data;\n        $('#qr-code').html('<img src=\"' + url + '\">');\n    });\n});"}, {"file": "models.py", "path": "yourproject/models.py", "code": "# No models needed for this project."}, {"file": "settings.py", "path": "yourproject/settings.py", "code": "INSTALLED_APPS = [\n    ...\n    'yourapp',\n    ...\n]\n\nTEMPLATES = [\n    {\n        ...\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        ...\n    }\n]\n\nSTATIC_URL = '/static/'"}, {"file": "urls.py", "path": "yourapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('generate/', views.generate_qr_code, name='generate_qr_code'),\n]"}], "6": [{"file": "models.py", "path": "todoapp/models.py", "code": "from django.db import models\n\nclass TodoItem(models.Model):\n    title = models.CharField(max_length=200)\n    completed = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)"}, {"file": "views.py", "path": "todoapp/views.py", "code": "from django.shortcuts import render\nfrom .models import TodoItem\n\ndef todo_list(request):\n    todos = TodoItem.objects.all()\n    return render(request, 'todoapp/todo_list.html', {'todos': todos})"}, {"file": "urls.py", "path": "todoapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.todo_list, name='todo_list'),\n]"}, {"file": "todo_list.html", "path": "todoapp/templates/todoapp/todo_list.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Todo List</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Todo List</h1>\n        <ul class=\"list-group\" id=\"todos-list\">\n            {% for todo in todos %}\n                <li class=\"list-group-item\" id=\"todo-{{ todo.id }}\">{{ todo.title }}</li>\n            {% empty %}\n                <li class=\"list-group-item\">No todos found</li>\n            {% endfor %}\n        </ul>\n    </div>\n</body>\n</html>"}, {"file": "base.html", "path": "todoapp/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{% block title %}{% endblock %}</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n</head>\n<body>\n    <div class=\"container\">\n        {% block content %}{% endblock %}\n    </div>\n</body>\n</html>"}, {"file": "charts.html", "path": "todoapp/templates/todoapp/charts.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chart Analysis</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n    <!-- Include chart.js library here -->\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Chart Analysis</h1>\n        <canvas id=\"myChart\" height=\"200\"></canvas>\n    </div>\n    <script>\n        // Include chart initialization and data here\n    </script>\n</body>\n</html>"}, {"file": "plot_chart.js", "path": "todoapp/static/js/plot_chart.js", "code": "// JavaScript code for plotting the chart using chart.js library\n// Make sure to include the necessary script tags in your HTML file\n"}], "7": [{"file": "urls.py", "path": "budget_control_app/budget_control_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "budget_control_app/budget_control_app/views.py", "code": "from django.shortcuts import render\n\ndef home(request):\n    return render(request, 'budget_control_app/home.html')"}, {"file": "templates/home.html", "path": "budget_control_app/templates/budget_control_app/home.html", "code": "<html>\n<head>\n  <title>Budget Control App</title>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n  <div id=\"chart-container\">\n    <canvas id=\"balance-chart\"></canvas>\n  </div>\n  <script>\n    var ctx = document.getElementById('balance-chart').getContext('2d');\n    var balanceChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n        datasets: [{\n          label: 'Balance',\n          data: [1000, 900, 1100, 950, 1200],\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  </script>\n</body>\n</html>"}], "8": [{"file": "models.py", "path": "calendar/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=100)\n    description = models.TextField()\n    date = models.DateField()"}, {"file": "views.py", "path": "calendar/views.py", "code": "from django.shortcuts import render\nfrom .models import Event\n\n# Create your views here\n\ndef calendar_view(request):\n    events = Event.objects.all()\n    return render(request, 'calendar/calendar.html', {'events': events})"}, {"file": "urls.py", "path": "calendar/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.calendar_view, name='calendar'),\n]"}, {"file": "index.html", "path": "templates/calendar/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Monthly Calendar</title>\n    <!-- Add your stylesheets and scripts here -->\n</head>\n<body>\n    <h1>Monthly Calendar</h1>\n    <div id=\"calendar\">\n        <!-- Calendar content will be dynamically generated here -->\n    </div>\n</body>\n</html>"}, {"file": "calendar.html", "path": "templates/calendar/calendar.html", "code": "{% extends 'calendar/index.html' %}\n\n{% block content %}\n    <div class=\"event-list\">\n        {% for event in events %}\n            <div class=\"event\" id=\"event_{{ event.id }}\">\n                <h3>{{ event.title }}</h3>\n                <p>{{ event.description }}</p>\n                <p>Date: {{ event.date }}</p>\n            </div>\n        {% endfor %}\n    </div>\n{% endblock %}"}], "9": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "# Django URL configuration for the project"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "# Django views for the project"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": "# Django models for the project"}, {"file": "forms.py", "path": "myproject/myapp/forms.py", "code": "# Django forms for the project"}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "# Django project settings"}, {"file": "index.html", "path": "myproject/myapp/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>AI Chatbot Product Introduction</title>\n</head>\n<body>\n<h1 id=\"heading\" class=\"main-heading\">Welcome to our AI Chatbot Product</h1>\n<section id=\"description\" class=\"content-section\">\n<p class=\"description-text\">Our AI Chatbot is designed to streamline communication...</p>\n</section>\n</body>\n</html>\n"}, {"file": "base.html", "path": "myproject/myapp/templates/base.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n{% block content %}{% endblock %}\n</body>\n</html>\n"}, {"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.urls import path\nfrom myapp import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\n# Views handling requests\n\ndef index(request):\n    return render(request, 'index.html')"}, {"file": "app.py", "path": "myproject/myapp/apps.py", "code": "from django.apps import AppConfig\n\nclass MyappConfig(AppConfig):\n    name = 'myapp'"}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}], "10": [{"file": "models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\n\n\nclass User(models.Model):\n    name = models.CharField(max_length=100)\n\n\nclass FoodItem(models.Model):\n    name = models.CharField(max_length=100)\n    calories = models.IntegerField()\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n"}, {"file": "views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\nfrom .models import User, FoodItem\n\n\ndef calorie_tracker_home(request):\n    users = User.objects.all()\n    food_items = FoodItem.objects.all()\n    return render(request, 'calorie_tracker/home.html', {'users': users, 'food_items': food_items})\n"}, {"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.calorie_tracker_home, name='calorie_tracker_home'),\n]\n"}, {"file": "home.html", "path": "calorie_tracker/templates/calorie_tracker/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Calorie Tracker</title>\n</head>\n<body>\n    <h1>Welcome to the Calorie Tracker Application</h1>\n\n    <div id=\"user-list\">\n        <h2>Users</h2>\n        <ul>\n            {% for user in users %}\n                <li>{{ user.name }}</li>\n            {% endfor %}\n        </ul>\n    </div>\n\n    <div id=\"food-item-list\">\n        <h2>Food Items</h2>\n        <ul>\n            {% for food_item in food_items %}\n                <li>{{ food_item.name }} - {{ food_item.calories }}</li>\n            {% endfor %}\n        </ul>\n    </div>\n</body>\n</html>\n"}, {"file": "charts.html", "path": "calorie_tracker/templates/calorie_tracker/charts.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Calorie Tracker Charts</title>\n    <!-- Include chart.js library here -->\n</head>\n<body>\n    <h1>Calorie Tracker Analysis Charts</h1>\n    <!-- Add chart elements here using Chart.js -->\n</body>\n</html>\n"}], "11": [{"file": "models.py", "path": "manual_project/manual_app/models.py", "code": "from django.db import models\n\nclass Project(models.Model):\n    project_id = models.CharField(max_length=10)\n    project_type = models.CharField(max_length=50)\n    nl_prompt = models.TextField()\n    # Add other fields as needed"}, {"file": "views.py", "path": "manual_project/manual_app/views.py", "code": "from django.shortcuts import render\nfrom .models import Project\n\ndef review_page(request):\n    projects = Project.objects.all()\n    return render(request, 'review_page.html', {'projects': projects})"}, {"file": "urls.py", "path": "manual_project/manual_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('review/', views.review_page, name='review_page'),\n    # Add other URL patterns as needed\n]"}, {"file": "templates/review_page.html", "path": "manual_project/manual_app/templates/review_page.html", "code": "<html>\n<head>\n    <title>Test Code Review Page</title>\n</head>\n<body>\n    <h1>Test Code Review Page</h1>\n    <ul>\n    {% for project in projects %}\n        <li>\n            <h2>{{ project.nl_prompt }}</h2>\n            <form action=\"\" method=\"post\">\n                <select name=\"test_status\">\n                    <option value=\"Pass\">Pass</option>\n                    <option value=\"Fail\">Fail</option>\n                    <option value=\"Select\">Select</option>\n                </select>\n                <input type=\"submit\" value=\"Submit\">\n            </form>\n        </li>\n    {% endfor %}\n    </ul>\n</body>\n</html>"}], "13": [{"file": "urls.py", "path": "crm/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('customers/', views.customer_list, name='customer_list'),\n    path('products/', views.product_list, name='product_list'),\n    path('purchases/', views.purchase_list, name='purchase_list'),\n    path('analysis/', views.analysis, name='analysis'),\n]"}, {"file": "models.py", "path": "crm/models.py", "code": "from django.db import models\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=100)\n    birthday = models.DateField()\n    age = models.IntegerField()\n    sex = models.CharField(max_length=10)\n    company = models.CharField(max_length=100)\n    phone_number = models.CharField(max_length=15)\n\n    def __str__(self):\n        return self.name\n\n\nclass Product(models.Model):\n    name = models.CharField(max_length=100)\n    category = models.CharField(max_length=50)\n    recommended_price = models.DecimalField(max_digits=8, decimal_places=2)\n\n    def __str__(self):\n        return self.name\n\n\nclass Purchase(models.Model):\n    datetime = models.DateTimeField()\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n\n    def __str__(self):\n        return f'{self.customer.name} - {self.product.name}'\n"}, {"file": "views.py", "path": "crm/views.py", "code": "from django.shortcuts import render\nfrom .models import Customer, Product, Purchase\n\n\n\ndef home(request):\n    return render(request, 'crm/home.html')\n\n\ndef customer_list(request):\n    customers = Customer.objects.all()\n    return render(request, 'crm/customer_list.html', {'customers': customers})\n\n\ndef product_list(request):\n    products = Product.objects.all()\n    return render(request, 'crm/product_list.html', {'products': products})\n\n\ndef purchase_list(request):\n    purchases = Purchase.objects.all()\n    return render(request, 'crm/purchase_list.html', {'purchases': purchases})\n\n\ndef analysis(request):\n    # Implement your analysis logic here\n    return render(request, 'crm/analysis.html')"}, {"file": "home.html", "path": "crm/templates/crm/home.html", "code": "<html>\n<head>\n    <title>Home</title>\n</head>\n<body>\n    <h1>Welcome to the CRM System</h1>\n</body>\n</html>"}, {"file": "customer_list.html", "path": "crm/templates/crm/customer_list.html", "code": "<html>\n<head>\n    <title>Customer List</title>\n</head>\n<body>\n    <h1>Customer List</h1>\n    <ul>\n        {% for customer in customers %}\n            <li>{{ customer.name }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "product_list.html", "path": "crm/templates/crm/product_list.html", "code": "<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <h1>Product List</h1>\n    <ul>\n        {% for product in products %}\n            <li>{{ product.name }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "purchase_list.html", "path": "crm/templates/crm/purchase_list.html", "code": "<html>\n<head>\n    <title>Purchase List</title>\n</head>\n<body>\n    <h1>Purchase List</h1>\n    <ul>\n        {% for purchase in purchases %}\n            <li>{{ purchase.customer.name }} bought {{ purchase.quantity }} of {{ purchase.product.name }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}, {"file": "analysis.html", "path": "crm/templates/crm/analysis.html", "code": "<html>\n<head>\n    <title>Sales Analysis</title>\n</head>\n<body>\n    <h1>Sales Analysis</h1>\n    <!-- Add analysis content here -->\n</body>\n</html>"}], "14": [{"file": "urls.py", "path": "myproject/myproject/urls.py", "code": "from django.urls import path\nfrom myapp.views import helloworld\n\nurlpatterns = [\n    path('helloworld/', helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.http import HttpResponse\n\ndef helloworld(request):\n    return HttpResponse('<html><head></head><body><h1 id=\"hello\" class=\"title\">Hello, World!</h1></body></html>')"}, {"file": "models.py", "path": "myproject/myapp/models.py", "code": ""}, {"file": "__init__.py", "path": "myproject/myapp/__init__.py", "code": ""}, {"file": "settings.py", "path": "myproject/myproject/settings.py", "code": "# Django settings...\nINSTALLED_APPS = [\n    ...\n    'myapp',\n    ...\n]"}, {"file": "urls.py", "path": "myproject/myapp/urls.py", "code": ""}, {"file": "admin.py", "path": "myproject/myapp/admin.py", "code": ""}], "15": [{"file": "urls.py", "path": "yourproject/urls.py", "code": "from django.urls import path\nfrom . import views\nurlpatterns = [\n    path('', views.index, name='index'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "yourapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponseRedirect\n\ndef index(request):\n    return render(request, 'index.html')\n\ndef helloworld(request):\n    return render(request, 'helloworld.html')\n"}, {"file": "index.html", "path": "yourapp/templates/index.html", "code": "<html>\n<head>\n    <title>Welcome</title>\n</head>\n<body>\n    <button id='helloButton' class='button'>Hello</button>\n    <script>\n        document.getElementById('helloButton').addEventListener('click', function() {\n            window.location.href = '/helloworld/';\n        });\n    </script>\n</body>\n</html>"}, {"file": "helloworld.html", "path": "yourapp/templates/helloworld.html", "code": "<html>\n<head>\n    <title>Hello, World!</title>\n</head>\n<body>\n    <h1>Hello, World!</h1>\n</body>\n</html>"}], "17": [{"file": "read_data_batch.bat", "path": "project/scripts/read_data_batch.bat", "code": "@echo off\n\nREM Batch program to read the dataset Gamedata.xlsx\nREM Create a logistic model and output its summary in Logistic.xlsx\n\nSET input_file=Gamedata.xlsx\nSET output_file=Logistic.xlsx\n\nREM Read the dataset and create logistic model\npython create_logistic_model.py %input_file% %output_file%\n"}, {"file": "create_logistic_model.py", "path": "project/scripts/create_logistic_model.py", "code": "import pandas as pd\nimport statsmodels.api as sm\n\n# Read the dataset\ninput_file = sys.argv[1]\ndata = pd.read_excel(input_file)\n\n# Create lagged dependent variable\ndata['lag_result'] = data['result'].shift(1)\n\n# Create a logistic model\nX = data.drop(columns=['result'])\ny = data['result']\nX = sm.add_constant(X)\nlogit_model = sm.Logit(y, X)\nresults = logit_model.fit()\n\n# Output summary to Logistic.xlsx\noutput_file = sys.argv[2]\nwith pd.ExcelWriter(output_file) as writer:\n    writer.save()\nresults.summary().to_excel(writer, 'Logistic Summary')"}, {"file": "Gamedata.xlsx", "path": "project/data/Gamedata.xlsx", "code": ""}, {"file": "Logistic.xlsx", "path": "project/results/Logistic.xlsx", "code": ""}], "18": [{"file": "main.py", "path": "game/main.py", "code": "import random\n\n# Define player attributes\nclass Player:\n    def __init__(self, name, health, attack):\n        self.name = name\n        self.health = health\n        self.attack = attack\n\n# Define monster attributes\nclass Monster:\n    def __init__(self, name, health, attack):\n        self.name = name\n        self.health = health\n        self.attack = attack\n\n# Setup player and monster\nplayer = Player('Player', 100, 10)\nmonster = Monster('Monster', 50, 5)\n\ndef battle(player, monster):\n    while player.health > 0 and monster.health > 0:\n        print(f'{player.name} attacks {monster.name}!')\n        monster.health -= player.attack\n        print(f'{monster.name} health: {monster.health}')\n\n        if monster.health <= 0:\n            print(f'{player.name} defeated {monster.name}!')\n            break\n\n        print(f'{monster.name} attacks {player.name}!')\n        player.health -= monster.attack\n        print(f'{player.name} health: {player.health}')\n\n        if player.health <= 0:\n            print(f'{monster.name} defeated {player.name}!')\n            break\n\nbattle(player, monster)\n"}], "20": [{"file": "settings.py", "path": "myblog/myblog/settings.py", "code": "django project settings code here"}, {"file": "urls.py", "path": "myblog/myblog/urls.py", "code": "django project urls code here"}, {"file": "views.py", "path": "myblog/blog/views.py", "code": "django project views code here"}, {"file": "models.py", "path": "myblog/blog/models.py", "code": "django project models code here"}, {"file": "forms.py", "path": "myblog/blog/forms.py", "code": "django project forms code here"}, {"file": "index.html", "path": "myblog/blog/templates/blog/index.html", "code": "HTML code for blog index page with proper ids and classes"}, {"file": "detail.html", "path": "myblog/blog/templates/blog/detail.html", "code": "HTML code for blog detail page with proper ids and classes"}, {"file": "create.html", "path": "myblog/blog/templates/blog/create.html", "code": "HTML code for blog create page with proper ids and classes"}, {"file": "edit.html", "path": "myblog/blog/templates/blog/edit.html", "code": "HTML code for blog edit page with proper ids and classes"}, {"file": "base.html", "path": "myblog/blog/templates/blog/base.html", "code": "HTML code for base template with proper ids and classes"}]}