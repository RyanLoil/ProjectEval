{"1": [{"file": "models.py", "path": "bmi_calculator/models.py", "code": "from django.db import models\n\nclass BMIRecord(models.Model):\n    weight = models.FloatField()\n    height = models.FloatField()\n    bmi_value = models.FloatField()\n    created_at = models.DateTimeField(auto_now_add=True)"}, {"file": "forms.py", "path": "bmi_calculator/forms.py", "code": "from django import forms\nfrom .models import BMIRecord\n\nclass BMIRecordForm(forms.ModelForm):\n    class Meta:\n        model = BMIRecord\n        fields = ['weight', 'height']"}, {"file": "views.py", "path": "bmi_calculator/views.py", "code": "from django.shortcuts import render\nfrom .forms import BMIRecordForm\n\n# Create your views here.\ndef calculate_bmi(request):\n    if request.method == 'POST':\n        form = BMIRecordForm(request.POST)\n        if form.is_valid():\n            weight = form.cleaned_data['weight']\n            height = form.cleaned_data['height']\n            bmi_value = weight / (height * height)\n            return render(request, 'bmi_result.html', {'bmi_value': bmi_value})\n    else:\n        form = BMIRecordForm()\n    return render(request, 'bmi_calculator.html', {'form': form})"}, {"file": "urls.py", "path": "bmi_calculator/urls.py", "code": "from django.urls import path\nfrom .views import calculate_bmi\n\nurlpatterns = [\n    path('', calculate_bmi, name='calculate_bmi'),\n]"}, {"file": "bmi_calculator.html", "path": "bmi_calculator/templates/bmi_calculator.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Calculator</title>\n</head>\n<body>\n    <h1>BMI Calculator</h1>\n    <form method=\"post\">\n        {% csrf_token %}\n        <label for=\"id_weight\">Weight(kg):</label>\n        <input type=\"text\" id=\"id_weight\" name=\"weight\">\n        <label for=\"id_height\">Height(m):</label>\n        <input type=\"text\" id=\"id_height\" name=\"height\">\n        <button type=\"submit\">Calculate BMI</button>\n    </form>\n</body>\n</html>"}, {"file": "bmi_result.html", "path": "bmi_calculator/templates/bmi_result.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>BMI Result</title>\n</head>\n<body>\n    <h1>Your BMI Value is: {{ bmi_value }}</h1>\n</body>\n</html>"}], "3": [{"file": "urls.py", "path": "password_generator/password_generator/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "password_generator/password_generator/views.py", "code": "from django.shortcuts import render\nimport random\nimport string\n\n# Create your views here.\ndef home(request):\n    if request.method == 'POST':\n        length = int(request.POST.get('length', 12))\n        password = ''.join(random.choices(string.ascii_letters + string.digits + string.punctuation, k=length))\n        return render(request, 'home.html', {'password': password})\n    else:\n        return render(request, 'home.html')"}, {"file": "home.html", "path": "password_generator/templates/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Password Generator</title>\n</head>\n<body>\n    <h1>Password Generator</h1>\n    <form method='post'>\n        <label for='length'>Password Length</label>\n        <input type='number' id='length' name='length' min='4' max='32' class='form-control'>\n        <button type='submit' class='btn btn-primary'>Generate Password</button>\n    </form>\n    <div>\n        {% if password %}\n            <p>Your generated password is: {{ password }}</p>\n        {% endif %}\n    </div>\n</body>\n</html>"}], "4": [{"file": ".gitignore", "path": "qr_generator/.gitignore", "code": ".DS_Store\n__pycache__\nvenv\n*.sqlite3\n*.pyc\n"}, {"file": "manage.py", "path": "qr_generator/manage.py", "code": "..."}, {"file": "requirements.txt", "path": "qr_generator/requirements.txt", "code": "Django>=3.0.3\nqrcode[pil]"}, {"file": "settings.py", "path": "qr_generator/qr_generator/settings.py", "code": "..."}, {"file": "urls.py", "path": "qr_generator/qr_generator/urls.py", "code": "..."}, {"file": "views.py", "path": "qr_generator/qr_generator/views.py", "code": "..."}, {"file": "urls.py", "path": "qr_generator/qr_generator/urls.py", "code": "..."}, {"file": "__init__.py", "path": "qr_generator/qr_generator/__init__.py", "code": "..."}, {"file": "models.py", "path": "qr_generator/qr_generator/models.py", "code": "..."}, {"file": "forms.py", "path": "qr_generator/qr_generator/forms.py", "code": "..."}, {"file": "templates/index.html", "path": "qr_generator/templates/index.html", "code": "..."}], "5": [{"file": "urls.py", "path": "convertor/convertor/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]"}, {"file": "views.py", "path": "convertor/convertor/views.py", "code": "from django.shortcuts import render\nfrom markdown2 import markdown\n\n\n\ndef home(request):\n    if request.method == 'POST':\n        markdown_text = request.POST['markdown_text']\n        html_output = markdown(markdown_text)\n        return render(request, 'convertor/home.html', {'html_output': html_output, 'markdown_text': markdown_text})\n    else:\n        return render(request, 'convertor/home.html', {})"}, {"file": "home.html", "path": "convertor/templates/convertor/home.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Markdown to HTML Convertor</title>\n</head>\n<body>\n    <h1>Markdown to HTML Convertor</h1>\n    <form action=\"\" method=\"post\">\n        <textarea id=\"markdown_text\" name=\"markdown_text\" rows=\"10\" cols=\"80\"></textarea>\n        <br>\n        <button type=\"submit\">Convert</button>\n    </form>\n    {% if html_output %}\n        <h2>Converted HTML:</h2>\n        <div id=\"converted_html\">{{ html_output }}</div>\n        <h3>Original Markdown Text:</h3>\n        <div id=\"original_markdown\">{{ markdown_text }}</div>\n    {% endif %}\n</body>\n</html>\n"}], "6": [{"file": "urls.py", "path": "project_name/project_name/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('analysis/', views.analysis, name='analysis'),\n]"}, {"file": "views.py", "path": "project_name/app_name/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\n# Create your views here.\n\ndef home(request):\n    return render(request, 'home.html')\n\ndef analysis(request):\n    return render(request, 'analysis.html')"}, {"file": "home.html", "path": "project_name/app_name/templates/home.html", "code": "<html>\n<head>\n    <title>Todo Application</title>\n</head>\n<body>\n    <h1 id='todo-heading' class='todo-heading'>Todo List</h1>\n    <ul id='todo-list' class='todo-list'>\n        <!-- Todo items will be added dynamically here -->\n    </ul>\n</body>\n</html>"}, {"file": "analysis.html", "path": "project_name/app_name/templates/analysis.html", "code": "<html>\n<head>\n    <title>Todo Application Analysis</title>\n</head>\n<body>\n    <h1 id='analysis-heading' class='analysis-heading'>Analysis Report</h1>\n    <div id='chart-container' class='chart-container'>\n        <!-- Chart will be displayed here using JavaScript -->\n    </div>\n</body>\n</html>"}, {"file": "urls.py", "path": "project_name/project_name/settings.py", "code": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n    },\n]"}, {"file": "models.py", "path": "project_name/app_name/models.py", "code": "# Models for Todo Application\n\nfrom django.db import models\n\nclass Todo(models.Model):\n    task = models.CharField(max_length=200)\n    completed = models.BooleanField(default=False)\n\n    def __str__(self):\n        return self.task"}, {"file": "__init__.py", "path": "project_name/app_name/__init__.py", "code": ""}], "7": [{"file": "urls.py", "path": "budget_control_app/budget_control_app/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.dashboard, name='dashboard'),\n]"}, {"file": "views.py", "path": "budget_control_app/budget_control_app/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\n\ndef dashboard(request):\n    return render(request, 'dashboard.html')"}, {"file": "models.py", "path": "budget_control_app/budget_control_app/models.py", "code": "# Models for storing budget data\n"}, {"file": "dashboard.html", "path": "budget_control_app/templates/dashboard.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Budget Control Application</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1 id=\"title\">Budget Control</h1>\n        <div id=\"chart\"></div>\n    </div>\n    <script>\n        // Code for chart tracing balance changes\n    </script>\n</body>\n</html>"}, {"file": "urls.py", "path": "budget_control_project/urls.py", "code": "from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('', include('budget_control_app.urls')),\n    path('admin/', admin.site.urls),\n]"}, {"file": "settings.py", "path": "budget_control_project/budget_control_project/settings.py", "code": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'budget_control_app',\n]\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]"}], "8": [{"file": "models.py", "path": "monthly_calendar/models.py", "code": "from django.db import models\n\nclass Event(models.Model):\n    title = models.CharField(max_length=100)\n    description = models.TextField()\n    date = models.DateField()\n    time = models.TimeField()\n    location = models.CharField(max_length=255)\n\n    def __str__(self):\n        return self.title"}, {"file": "urls.py", "path": "monthly_calendar/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}, {"file": "views.py", "path": "monthly_calendar/views.py", "code": "from django.shortcuts import render\nfrom .models import Event\n\n# View to display the monthly calendar\n\ndef index(request):\n    events = Event.objects.all()\n    return render(request, 'monthly_calendar/index.html', {'events': events})"}, {"file": "index.html", "path": "monthly_calendar/templates/monthly_calendar/index.html", "code": "<html>\n<head>\n    <title>Monthly Calendar</title>\n</head>\n<body>\n    <h1>Monthly Calendar</h1>\n    <ul>\n        {% for event in events %}\n            <li>{{ event.title }} - {{ event.date }}</li>\n        {% endfor %}\n    </ul>\n</body>\n</html>"}], "9": [{"file": "urls.py", "path": "chatbot_project/chatbot_app/urls.py", "code": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('chat/', views.chat, name='chat'),\n]"}, {"file": "views.py", "path": "chatbot_project/chatbot_app/views.py", "code": "def index(request):\n    return render(request, 'chatbot_app/index.html')\n\ndef chat(request):\n    return render(request, 'chatbot_app/chat.html')"}, {"file": "index.html", "path": "chatbot_project/chatbot_app/templates/chatbot_app/index.html", "code": "<html>\n<head>\n    <title>AI Chatbot</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/style.css\">\n</head>\n<body>\n    <h1 id=\"heading\" class=\"title\">Welcome to AI Chatbot</h1>\n    <p id=\"description\" class=\"content\">Introducing our latest AI Chatbot product...</p>\n</body>\n</html>"}, {"file": "chat.html", "path": "chatbot_project/chatbot_app/templates/chatbot_app/chat.html", "code": "<html>\n<head>\n    <title>AI Chatbot</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/style.css\">\n</head>\n<body>\n    <h1 id=\"heading\" class=\"title\">Start chatting with AI Chatbot</h1>\n    <div id=\"chat-container\" class=\"chat-container\">\n        <ul id=\"chat-messages\" class=\"chat-messages\"></ul>\n        <input id=\"user-input\" class=\"user-input\" type=\"text\" placeholder=\"Type your message here...\">\n        <button id=\"send-button\" class=\"send-button\">Send</button>\n    </div>\n</body>\n</html>"}], "10": [{"file": "models.py", "path": "calorie_tracker/models.py", "code": "from django.db import models\n\nclass CalorieRecord(models.Model):\n    date = models.DateField()\n    total_calories = models.IntegerField()\n"}, {"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('charts/', views.charts, name='charts'),\n]"}, {"file": "views.py", "path": "calorie_tracker/views.py", "code": "from django.shortcuts import render\nfrom .models import CalorieRecord\n\n\ndef home(request):\n    # View logic for displaying calorie tracker\n    return render(request, 'calorie_tracker/home.html')\n\ndef charts(request):\n    # View logic for displaying analysis charts\n    return render(request, 'calorie_tracker/charts.html')"}, {"file": "home.html", "path": "calorie_tracker/templates/calorie_tracker/home.html", "code": "<html>\n<head>\n    <title>Calorie Tracker</title>\n</head>\n<body>\n    <!-- HTML content for home page here -->\n</body>\n</html>"}, {"file": "charts.html", "path": "calorie_tracker/templates/calorie_tracker/charts.html", "code": "<html>\n<head>\n    <title>Calorie Tracker - Charts</title>\n</head>\n<body>\n    <!-- HTML content for analysis charts here -->\n</body>\n</html>"}, {"file": "urls.py", "path": "calorie_tracker/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('charts/', views.charts, name='charts'),\n]"}], "12": [{"file": "settings.py", "path": "accounting_system/accounting_system/settings.py", "code": "Django project settings configuration file"}, {"file": "urls.py", "path": "accounting_system/accounting_app/urls.py", "code": "URL patterns for the project"}, {"file": "models.py", "path": "accounting_system/accounting_app/models.py", "code": "Database models for the accounting system"}, {"file": "views.py", "path": "accounting_system/accounting_app/views.py", "code": "View functions for handling requests"}, {"file": "forms.py", "path": "accounting_system/accounting_app/forms.py", "code": "Forms for data validation and submission"}, {"file": "admin.py", "path": "accounting_system/accounting_app/admin.py", "code": "Admin interface configuration"}, {"file": "templates/base.html", "path": "accounting_system/accounting_app/templates/base.html", "code": "Base template for other HTML files to extend"}, {"file": "templates/claim_form.html", "path": "accounting_system/accounting_app/templates/claim_form.html", "code": "HTML form for submitting claims"}, {"file": "templates/admin_claim_list.html", "path": "accounting_system/accounting_app/templates/admin_claim_list.html", "code": "HTML template for admin to manage claims"}, {"file": "static/css/styles.css", "path": "accounting_system/accounting_app/static/css/styles.css", "code": "CSS styles for the frontend"}, {"file": "static/js/scripts.js", "path": "accounting_system/accounting_app/static/js/scripts.js", "code": "JavaScript functions for interactivity"}], "13": [{"file": "__init__.py", "path": "crm/__init__.py", "code": ""}, {"file": "models.py", "path": "crm/models.py", "code": "from django.db import models\n\nclass Product(models.Model):\n    name = models.CharField(max_length=100)\n    category = models.CharField(max_length=100)\n    recommended_price = models.FloatField()\n\n    def __str__(self):\n        return self.name\n\nclass Customer(models.Model):\n    name = models.CharField(max_length=100)\n    birthday = models.DateField()\n    age = models.IntegerField()\n    sex = models.CharField(max_length=10)\n    company = models.CharField(max_length=100)\n    phone_number = models.CharField(max_length=20)\n    preferred_products = models.ManyToManyField(Product, related_name='preferred_by')\n\n    def __str__(self):\n        return self.name\n\nclass PurchaseRecord(models.Model):\n    datetime = models.DateTimeField()\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    amount = models.FloatField()\n\n    def __str__(self):\n        return f'{self.customer.name} - {self.product.name} - {self.amount}'"}, {"file": "admin.py", "path": "crm/admin.py", "code": "from django.contrib import admin\nfrom .models import Product, Customer, PurchaseRecord\n\nadmin.site.register(Product)\nadmin.site.register(Customer)\nadmin.site.register(PurchaseRecord)"}, {"file": "urls.py", "path": "crm/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    # Add your views and URLs here\n]"}, {"file": "views.py", "path": "crm/views.py", "code": "from django.shortcuts import render\n\n# Add your views here"}, {"file": "forms.py", "path": "crm/forms.py", "code": "from django import forms\nfrom .models import Product, Customer, PurchaseRecord\n\n# Create forms for adding/editing objects"}, {"file": "marketing_app.py", "path": "crm/marketing_app.py", "code": "# Implement your marketing application logic here"}], "14": [{"file": "urls.py", "path": "myproject/myapp/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.helloworld, name='helloworld'),\n]\n"}, {"file": "views.py", "path": "myproject/myapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef helloworld(request):\n    return HttpResponse('Hello, World!')\n"}, {"file": "helloworld.html", "path": "myproject/myapp/templates/helloworld.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hello, World</title>\n</head>\n<body>\n    <h1 id=\"title\" class=\"main-title\">Hello, World!</h1>\n</body>\n</html>\n"}], "15": [{"file": "urls.py", "path": "yourproject/urls.py", "code": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('helloworld/', views.helloworld, name='helloworld'),\n]"}, {"file": "views.py", "path": "yourapp/views.py", "code": "from django.shortcuts import render\nfrom django.http import HttpResponseRedirect\n\ndef index(request):\n    return render(request, 'index.html')\n\n\ndef helloworld(request):\n    return render(request, 'helloworld.html')"}, {"file": "index.html", "path": "yourapp/templates/index.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n</head>\n<body>\n    <button id=\"btnHome\" class=\"btn\">Jump to Hello World</button>\n</body>\n</html>"}, {"file": "helloworld.html", "path": "yourapp/templates/helloworld.html", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hello World</title>\n</head>\n<body>\n    <h1>Hello World!</h1>\n</body>\n</html>"}], "16": [{"file": "subject_table_creator.bat", "path": "scripts/subject_table_creator.bat", "code": "@echo off\n\nsetlocal EnableDelayedExpansion\n\nREM Extracting data from Spring Semester Subjects.xlsx\n\nset INPUT_FILE=Spring Semester Subjects.xlsx\nset OUTPUT_FILE=Subject_Table.xlsx\n\nREM Set the column index for each header\nset COLUMN_NUM=0\nset COLUMN_NAME=1\nset COLUMN_WEEKDAY=2\nset COLUMN_TIME=3\n\nREM Creating the new subject table\n(echo #,Name,Weekday,Time\n\n) > temp.csv\n\nFOR /F \"usebackq tokens=* skip=1\" %%F in (\"!INPUT_FILE!\") do (\n  FOR /F \"tokens=1-4 delims=,\" %%A in (\"%%F\") do (\n    set /A COLUMN_NUM+=1\n    set ID_ELEMENT=!COLUMN_NUM!\n    set #=!COLUMN_NUM!\n    set NAME=%%B\n    set WEEKDAY=%%C\n    set TIME=%%D\n    REM Mapping Time options to numeric values\n    IF \"!TIME!\" == \"First period\" set TIME=1\n    IF \"!TIME!\" == \"Second period\" set TIME=2\n    IF \"!TIME!\" == \"Third period\" set TIME=3\n    IF \"!TIME!\" == \"Fourth period\" set TIME=4\n    echo !ID_ELEMENT!,!#!,!NAME!,!WEEKDAY!,!TIME! >> temp.csv\n  )\n)\n\nREM Convert CSV to XLSX using pandas library\npython convert_csv_xlsx.py\n\nREM Clean up temporary files\nif exist temp.csv del temp.csv\nif exist stat.csv del stat.csv\n\necho Subject table created successfully!\n"}, {"file": "convert_csv_xlsx.py", "path": "scripts/convert_csv_xlsx.py", "code": "import pandas as pd\n\n# Read CSV file\ndata = pd.read_csv('temp.csv')\n\n# Create Excel writer object\nwriter = pd.ExcelWriter('Subject_Table.xlsx')\n\n# Write data to Excel\ndata.to_excel(writer, index=False)\n\n# Save the Excel file\nwriter.save()\n"}], "17": [{"file": "batch_program.bat", "path": "project_files/batch_program.bat", "code": "@echo off\n\nREM Batch program to read dataset and create logistic model\n\nREM Read dataset\n@echo Reading dataset...\npython read_dataset.py Gamedata.xlsx\n\nREM Create logistic model\n@echo Creating logistic model...\npython create_logistic_model.py\n\nREM Output model summary\n@echo Outputting model summary to Logistic.xlsx...\npython output_model_summary.py Logistic.xlsx\n"}, {"file": "read_dataset.py", "path": "project_files/read_dataset.py", "code": "import pandas as pd\n\n# Read dataset\ndef read_dataset(file):\n    return pd.read_excel(file)\n\nif __name__ == '__main__':\n    file = sys.argv[1]\n    dataset = read_dataset(file)\n"}, {"file": "create_logistic_model.py", "path": "project_files/create_logistic_model.py", "code": "import statsmodels.api as sm\n\n# Create logistic model\ndef create_logistic_model(dataset):\n    # Create lagged dependent variable\n    dataset['lag_result'] = dataset['result'].shift(1)\n    X = dataset.drop(['result'], axis=1)\n    y = dataset['result']\n    model = sm.Logit(y, sm.add_constant(X))\n    result = model.fit()\n    return result\n\nif __name__ == '__main__':\n    result = create_logistic_model(dataset)\n"}, {"file": "output_model_summary.py", "path": "project_files/output_model_summary.py", "code": "import sys\n\n# Output model summary\ndef output_model_summary(result, output_file):\n    with open(output_file, 'w') as f:\n        f.write(result.summary().as_text())\n\nif __name__ == '__main__':\n    output_file = sys.argv[1]\n    output_model_summary(result, output_file)\n"}], "18": [{"file": "README.md", "path": "bashcrawl/README.md", "code": "# Bashcrawl Game\n\nThis is a console-based bashcrawl game created using Python, with no other third-party packages involved.\n\n## How to Play\n\n1. Run the game by executing the main Python file.\n2. Follow the prompts to navigate through the dungeon and fight monsters.\n3. Reach the final level to win!\n"}, {"file": "main.py", "path": "bashcrawl/main.py", "code": "# Main game logic goes here\nimport random\n\ndef main():\n    # Game logic implementation\n\nif __name__ == '__main__':\n    main()\n"}, {"file": "player.py", "path": "bashcrawl/player.py", "code": "# Player class for the game\n\nclass Player:\n    def __init__(self, name):\n        self.name = name\n        self.health = 100\n        self.attack_power = 10\n        self.defense_power = 5\n"}, {"file": "monster.py", "path": "bashcrawl/monster.py", "code": "# Monster class for the game\nimport random\n\nclass Monster:\n    def __init__(self, name, health, attack_power):\n        self.name = name\n        self.health = health\n        self.attack_power = attack_power\n"}, {"file": "utils.py", "path": "bashcrawl/utils.py", "code": "# Utility functions for the game\n\ndef generate_random_number(min_val, max_val):\n    return random.randint(min_val, max_val)\n"}, {"file": "map.txt", "path": "bashcrawl/map.txt", "code": "####################\n#     #            #\n# ##  #  ###    ## #\n#    ##            #\n#    #         #   #\n#    #            ##\n#        #     ##  #\n####################\n"}], "19": [{"file": "batch_program.bat", "path": "project_folder/batch_program.bat", "code": "REM This batch program reads 'Deathlist.csv' dataset and prints a histogram of weekly deaths\n\n@echo off\ncd somepath/somedir\nfor /F \"skip=1 tokens=1,2 delims=,\" %%i in (Deathlist.csv) do (\n    set \"date=%%j\"\n    set /A week=(%date:~8,2%) / 7 + 1\n    echo %week%\n) | sort | uniq -c\npause\n"}, {"file": "Deathlist.csv", "path": "project_folder/Deathlist.csv", "code": "Date of death\n2001-01-01\n2001-01-07\n2001-01-07\n2001-01-14\n2001-01-22\n2001-01-28\n2001-02-04"}], "20": [{"file": "urls.py", "path": "myblog/myblog/urls.py", "code": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"}, {"file": "views.py", "path": "myblog/posts/views.py", "code": "from django.shortcuts import render\nfrom .models import Post\n\n# Define your views here"}, {"file": "models.py", "path": "myblog/posts/models.py", "code": "from django.db import models\n\n# Define your models here"}, {"file": "index.html", "path": "myblog/templates/index.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>My Blog</title>\n</head>\n<body>\n    <div id=\"header\" class=\"header\">\n        <!-- Header content goes here -->\n    </div>\n    <div id=\"content\" class=\"content\">\n        <!-- Blog posts go here -->\n    </div>\n</body>\n</html>"}, {"file": "base.html", "path": "myblog/templates/base.html", "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>{% block title %}{% endblock %}</title>\n</head>\n<body>\n    {% block content %} {% endblock %}\n</body>\n</html>"}]}