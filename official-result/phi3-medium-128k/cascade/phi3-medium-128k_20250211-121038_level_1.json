{"12": [{"id": "1", "file": "/apps/core_invoices/submitting/backend/submit_expense", "path": "core_invoices/submit_expense.py", "code": "def submit_expense(request):\n\\n# Validate form data and save in the database"}, {"id": "2", "file": "/apps/core_invoices/submitting/backend/edit_claim.py", "path": "core_invoices/edit_claim.py", "code": "def edit_claim(request, claim_id):\n\\n# Fetch the selected expense from DB and allow admin to modify it"}, {"file": "/apps/core_invoices/submitting/views.py", "path": "core_invoices/view_claims.py", "code": "def view_claims(request):\n\\n# Fetch all the claims and display them by their status"}, {"file": "/apps/core_invoices/submitting/models.py", "path": "core_invoices/models.py", "code": "class ExpenseClaim(models.Model):\n\\ndef __init__(self, **kwargs):\n    super().__init__(**kwargs)\n     \\ndef check_status(self):\n    # Check the status of an expense claim"}, {"file": "/apps/core_invoices/submitting/views.py", "path": "core_invoices/monitor_budget.py", "code": "def monitor_budget(request, category):\n\\n# Track spending in a specific category and send notifications as it approaches limit"}, {"file": "/apps/core_invoices/submitting/admin.py", "path": "core_invoices/admin.py", "code": "class ExpenseClaimAdmin(admin.ModelAdmin):\n\\n# Custom administration area to manage expenses from there"}], "17": [{"id": 1, "filePath": "/path/to/project/excel-modeling-skeleton.ps1", "code": "# A skeleton script to read,\n manipulates and logistic regression of 'Gamedata.xlsx' using PowerShell and Excel\n$data = Import-Excel -Path .\\gamedata.xlsx\n# Perform necessary data preprocessing...\n# Save the processed data back to another sheet in the same workbook\n $processedData | Export-Excel -Path .\\gamedata.xlsx -WorksheetName 'ProcessedData'\n"}]}